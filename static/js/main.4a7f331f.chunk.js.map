{"version":3,"sources":["components/Theme/index.js","components/HotkeyStorage/default-hotkeys.js","components/HotkeyStorage/index.js","components/AppConfig/index.js","utils/auth-handlers/cognito-handler.js","utils/auth-handlers/use-auth.js","components/LoginDrawer/SignIn.js","components/LoginDrawer/CompleteSignUp.js","components/LoginDrawer/index.js","utils/use-electron.js","utils/use-posthog.js","components/CollaborateButton/index.js","components/HeaderPopupBox/index.js","components/DownloadButton/index.js","components/Header/GithubIcon.js","utils/get-brush-color-palette.js","components/BrushButton/index.js","components/HeaderToolbar/SlackIcon.js","components/HeaderToolbar/index.js","components/StartingPage/templates.js","components/HeaderDrawer/index.js","components/Header/index.js","components/SimpleDialog/index.js","components/CreateFromTemplateDialog/index.js","components/AddAuthFromTemplateDialog/cognito-icon.js","components/AddAuthFromTemplateDialog/authTemplates.js","components/ErrorToasts/index.js","utils/use-errors.js","components/AddAuthFromTemplateDialog/index.js","components/StartingPage/get-embed-youtube-url.js","components/StartingPage/index.js","components/DatasetEditor/EditableTitleText.js","components/SampleGrid/index.js","components/PasteUrlsDialog/get-sample-from-url.js","components/PasteUrlsDialog/index.js","utils/get-sample-name-from-url.js","utils/RecognizeFileExtension.js","utils/dataset-helper/get-files-differences.js","utils/dataset-helper/index.js","components/ImportFromCognitoS3Dialog/get-annotation-from-aws.js","components/ImportFromCognitoS3Dialog/get-images-from-aws.js","components/ImportFromCognitoS3Dialog/check-interface-and-sample-type.js","components/ImportFromCognitoS3Dialog/set-annotation-from-aws.js","components/ImportFromCognitoS3Dialog/index.js","components/ImportFromCognitoS3Dialog/init-config-import.js","components/ImportFromCognitoS3Dialog/set-type-of-file-to-load-and-disable.js","components/ImportFromCognitoS3Dialog/set-button-add-sample-name.js","components/ImportPage/S3Icon.js","components/S3PathSelector/index.js","utils/use-is-desktop.js","utils/auth-handlers/use-iam-s3-api.js","utils/from-udt-csv.js","components/ImportFromS3Dialog/index.js","components/MultiFileDrop/index.js","components/UploadToS3Dialog/index.js","components/TextAreaWithUpload/index.js","components/ImportTextSnippetsDialog/index.js","components/ImportFromGoogleDriveDialog/index.js","components/ImportUDTFileDialog/index.js","components/ImportToyDatasetDialog/index.js","components/ImportFromYoutubeUrls/download-youtube-video.js","components/ProgressBar/index.js","components/ImportFromYoutubeUrls/progress.js","components/ImportFromYoutubeUrls/get-youtube-video-information.js","components/ImportFromYoutubeUrls/split-urls-from-text-area.js","components/ImportFromYoutubeUrls/index.js","components/ImportPage/prompt-and-get-samples-from-local-directory.js","components/ImportPage/index.js","components/TransformVideoKeyframesDialog/index.js","components/DownloadURLsDialog/index.js","components/TransformVideoFramesToImagesDialog/index.js","components/TransformLocalFilesToWebURLs/functions/upload-file-to-transfersh.js","components/TransformLocalFilesToWebURLs/functions/split-file-name-from-file-url.js","components/TransformLocalFilesToWebURLs/functions/get-file-url-key.js","components/TransformLocalFilesToWebURLs/functions/transform-file-urls-to-web-urls.js","components/TransformLocalFilesToWebURLs/index.js","components/TransformImageSamplesIntoSegmentsDialog/index.js","components/TransformSegmentsIntoImageSamplesDialog/index.js","components/TransformPage/index.js","components/SamplesView/index.js","components/ConfigureImageSegmentation/index.js","components/ConfigureImagePixelSegmentation/index.js","components/ConfigureImageClassification/index.js","components/ConfigureTextClassification/index.js","components/ConfigureAudioTranscription/index.jsx","components/ConfigureTextEntityRecognition/index.js","components/ConfigureTextEntityRelations/index.js","components/ConfigureDataEntry/index.js","components/ConfigureComposite/index.js","components/Configure3D/index.js","components/ConfigureVideoSegmentation/index.js","i18n/index.js","utils/use-clobbered-state.js","components/TextClassification/index.js","components/TextEntityRecognition/convert-react-nlp-annotate-types.js","components/TextEntityRecognition/index.js","components/TextEntityRelations/index.js","utils/ria-format.js","components/ImageSegmentation/index.js","components/WorkspaceContainer/index.js","components/ImageClassification/index.js","components/VideoSegmentation/index.js","components/AudioTranscription/index.js","utils/get-task-description.js","components/SampleContainer/LinkButton.js","components/SampleContainer/index.js","components/DataEntry/index.js","components/BadOHA/index.js","components/EmptySampleContainer/index.js","components/InterfaceIcon/index.js","components/Composite/index.js","components/UniversalDataViewer/index.js","utils/sentry.js","components/LabelErrorBoundary/index.js","components/ConfigureInterface/index.js","components/PaperContainer/index.js","components/KeyboardShortcutManagerDialog/index.js","components/AdvancedOptionsView/index.js","components/InterfacePage/index.js","components/EditSampleDialog/index.js","components/Toasts/index.js","components/Stats/index.js","components/LabelHelpView/api-key-entry.js","components/FileContext/use-active-dataset.js","components/FileContext/index.js","components/LabelHelpView/label-help-dialog-content.js","components/LabelHelpView/LabelHelpProvider.js","utils/use-is-label-only-mode.js","utils/compute-dataset-variable.js","components/LabelHelpView/use-label-help.js","components/LabelHelpView/index.js","components/ActiveLearningView/index.js","components/LabelView/index.js","components/RawJSONEditor/index.js","components/DatasetEditor/index.js","utils/use-time-to-complete-sample.js","utils/file-handlers/use-server/get-human-readable-log.js","utils/file-handlers/use-server/apply-seamless-patch.js","utils/file-handlers/use-server/server-hash.js","utils/file-handlers/use-server/index.js","utils/file-handlers/use-server/handler.js","utils/to-udt-csv.js","utils/file-handlers/use-filesystem.js","utils/file-handlers/use-file-telemetry.js","utils/file-handlers/use-aws-cognito/index.js","utils/file-handlers/use-aws-cognito/update-aws-storage.js","utils/file-handlers/index.js","utils/file-handlers/use-local-storage.js","components/AppErrorBoundary/index.js","utils/use-prevent-navigation.js","components/LocalStorageApp/index.js","components/DesktopApp/index.js","components/Loading/index.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","colors","secondary","typography","fontFamily","button","textTransform","children","ThemeProvider","defaultHotkeys","id","description","binding","HotkeyContext","createContext","hotkeys","changeHotkey","newBinding","useHotkeyStorage","useContext","HotkeyStorageProvider","useAppConfig","fromConfig","setInConfig","useMemo","map","item","keyMap","contextValue","clearHotkeys","Provider","value","configKeyNames","defaultAppConfig","AppConfigContext","appConfig","s","JSON","parse","e","jsonParseOrEmpty","window","localStorage","app_config","setAppConfig","newConfig","key","AppConfigProvider","useLocalStorage","includes","Error","undefined","stringify","CognitoHandler","authProvider","checkIfLoggedIn","a","Amplify","configure","authConfig","Auth","currentAuthenticatedUser","userHandle","user","isLoggedIn","hasChanged","setUser","Boolean","login","tryUser","logout","signOut","getState","this","identityPoolId","region","userPoolId","userPoolWebClientId","mandatorySignIn","authenticationFlowType","Storage","AWSS3","bucket","AuthContext","AuthProvider","useState","handler","setHandler","useReducer","state","handlerVersion","incHandlerVersion","useEffect","interval","setInterval","clearInterval","useAuth","ErrorText","styled","padding","color","useStyles","makeStyles","form","width","marginTop","spacing","submit","margin","onUserChange","onRequireCompleteSignUp","onClose","classes","error","setError","t","useTranslation","username","password","notAuthorizedException","setState","handleTextFieldChange","event","persist","prevState","target","name","signIn","then","challengeName","catch","err","code","console","log","toString","Typography","component","variant","className","noValidate","TextField","required","fullWidth","label","autoComplete","helperText","autoFocus","onChange","type","FormControlLabel","control","Checkbox","onClick","isEmpty","SignInAWS","requiredAttributes","requiredAttributesDict","requiredAttributesErrorDict","forEach","requiredAttribute","newPassword","newPasswordNotValid","newPasswordConfirmation","newPasswordNotEqualsConfirmation","capitalizeFirstLetter","string","charAt","toUpperCase","slice","_handleAttributesTextFieldChange","_handleTextFieldChange","newPasswordError","checkIfPasswordEqualsConfirmationPassword","_handleCantBeNull","allGood","onBlur","completeNewPassword","drawer","root","height","paper","display","flexDirection","alignItems","close","cursor","main","avatar","backgroundColor","loginDrawerOpen","signingIn","completeSignUp","Drawer","anchor","open","role","Grid","container","xs","sm","md","Paper","elevation","square","Avatar","SignIn","challengeParam","toggleCompleteSignUp","CompleteSignUp","require","posthogMock","opt_in_capturing","opt_out_capturing","init","reset","capture","capture_forms","capture_pageview","register","register_once","unregister","identify","alias","set_config","get_config","get_property","get_distinct_id","has_opted_out_capturing","has_opted_in_capturing","disable_all_events","people","set","set_once","posthogInitialized","isDesktop","useElectron","Cypress","posthog","api_host","autocapture","domain","location","origin","is_desktop","Container","position","marginLeft","borderColor","popupBoxBeforeAndAfter","bottom","left","border","content","pointerEvents","PopupBox","zIndex","top","boxSizing","borderRadius","minHeight","boxShadow","borderBottomColor","borderWidth","fontSize","opacity","transition","transform","CreateNewButton","Button","justifyContent","marginRight","ExitButton","fileOpen","inSession","onJoinSession","onCreateSession","onLeaveSession","sessionBoxOpen","changeSessionBoxOpen","loadingSession","changeLoadingSession","sessionUrl","changeSessionUrl","userName","changeUserName","usePosthog","setTimeout","title","onMouseEnter","onMouseLeave","IconButton","style","InputProps","endAdornment","InputAdornment","disabled","CircularProgress","size","StyledButton","paddingTop","fontWeight","onDownload","changeOpen","HeaderPopupBox","GitHub","props","SvgIcon","d","fade","cmap","amt","newCmap","i","fadedGrey","isFaded","availableColors","colorMap","complete","incomplete","faded","review","ellipsis1","ellipsis2","ellipsis3","brush","seed","length","BrushCircle","OtherColorContainers","flexWrap","StyledIconButton","iconcolor","selected","marginBottom","paddingBottom","selectedBrush","onChangeSelectedBrush","handleClick","useEventCallback","memoize","getBrushColorPalette","SlackIcon","viewBox","headerButton","grow","flexGrow","list","tab","fullHeightTab","mixins","toolbar","breakpoints","down","minWidth","tabWrapper","getIcon","memo","tabs","currentTab","onChangeTab","additionalButtons","onOpenDrawer","isSmall","changeLoginDrawerOpen","collaborateError","isWelcomePage","c","AppBar","Toolbar","packageJSON","version","CollaborateButton","BrushButton","DownloadButton","Tabs","newTab","toLowerCase","Tab","wrapper","icon","href","GithubIcon","Box","paddingLeft","data-icon","data-size","data-show-count","aria-label","templates","Icon","CropFree","dataset","interface","samples","ImageSearch","labels","regionTypesAllowed","imageUrl","Image","OndemandVideoIcon","videoUrl","Edit","surveyjs","questions","pdfUrl","TextFormat","overlapAllowed","displayName","document","entityLabels","relationLabels","ContactSupport","Audiotrack","audioUrl","Category","fields","fieldName","ThreeDRotation","templateMap","reduce","acc","recentItems","changeRecentItems","onClickHome","onCloseDrawer","drawerOpen","onOpenFile","onOpenRecentItem","onClickTemplate","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","List","ListItem","ListItemIcon","ListItemText","ListSubheader","textAlign","ri","index","fileName","filter","oneRecentFile","template","HeaderContext","logoutUser","emptyArray","changeDrawerOpen","headerContext","useMediaQuery","HeaderDrawer","LoginDrawer","StyledDialogTitle","DialogTitle","grey","borderBottom","StyledDialogContent","DialogContent","StyledDialogActions","DialogActions","borderTop","markdownContent","redOn","red","noActionBar","actions","fullScreen","changeFullScreen","Dialog","maxWidth","lineHeight","source","action","blue","text","bigButton","bigIcon","onSelect","SimpleDialog","CognitoIcon","data-name","fill","x","y","provider","SdStorageOutlinedIcon","AccountTreeIcon","right","errorBox","errors","Collapse","in","life","Fade","message","changeErrors","concat","Math","random","split","cognitoIcon","howToSetupText","textDecoration","forms","cognito","placeholder","isRequired","s3iam","proxy","onFinish","onAuthConfigured","setAuthProvider","dialogTitle","setDialogTitle","useErrors","addError","validateAuthProvider","answers","config","authTemplates","onQuestionChange","questionId","newValue","defaultAnswers","questionIds","q","defaults","configValue","getDefaultsFromConfig","ErrorToasts","url","match","downloadIcon","languageSelectionWrapper","ContentContainer","overflowY","Content","Title","languageSelectionFormStyle","base","background","menuList","singleValue","Subtitle","ActionList","Action","ActionTitle","ActionText","Actionless","BottomSpacer","languageOptions","onFileDrop","onOpenTemplate","showDownloadLink","onClickOpenSession","i18n","newVersionAvailable","changeNewVersionAvailable","fetch","r","json","newPackage","packageInfo","checkNewVersion","latestCommunityUpdate","setLatestCommunityUpdate","readme","startCU","search","endCU","communityUpdates","latestYtLink","ytLink","embedYTLink","getEmbedYoutubeUrl","getLatestREADME","createFromTemplateDialogOpen","changeCreateFromTemplateDialogOpen","addAuthFromDialogOpen","changeAddAuthFromDialogOpen","CreateFromTemplateDialog","clicked_template","AddAuthFromTemplateDialog","Header","styles","defaultValue","options","language","changeLanguage","find","src","frameborder","allow","allowfullscreen","textField","editing","changeEditing","listener","addEventListener","removeEventListener","timeout","SAVE_WAIT","clearTimeout","inputProps","onKeyDown","preventDefault","stopPropagation","blur","onKeyPress","EmptyState","SampleDiv","fontVariantNumeric","userSelect","Sample","completed","onMouseDown","onMouseUp","classNames","p","n","count","tablePaginationPadding","samplesPerPage","changeSamplesPerPage","sampleOffset","changeSampleOffset","min","max","selectRange","changeSelectRange","startSelectRange","moveSelectRange","endSelectRange","checkAndNullifySelectRange","buttons","onClickMemo","range","paddingRight","TablePagination","rowsPerPageOptions","rowsPerPage","page","floor","labelRowsPerPage","onChangePage","newPage","onChangeRowsPerPage","opts","extension","replace","returnNulls","SelectContainer","TextArea","autoDetectOptions","onAddSamples","changeContent","urlType","changeURLType","l","trim","getSampleFromUrl","opt","v","sample","sampleName","decodeURI","UrlOfAFile","typeOfFile","fileExtension","objectOfRef","objectToCheck","resultSet","mode","any","getSampleName","getSampleNameFromURL","getSampleUrl","createOneNewSample","annotation","RecognizeFileExtension","getSampleWithThisSampleName","nameToSearch","setSamplesName","oldsample","renameSampleFromUrl","setIn","sampleToChange","boolName","sampletocompare1","eraseAnnotation","samplesWithoutAnnotation","Newsample","push","fileHasChanged","CheckIfAnnotationExist","result","folderToFetch","element","GetSampleFromAnnotation","newSamples","datasetHelper","sampleFound","get","expires","level","data","setUrl","configImport","loadProjectIsSelected","typeOfFileToLoad","fetchTextInFile","texte","urlSource","method","response","typeAuthorize","file","contentOldFile","actualSamples","annotationToKeep","Tabsamples","Tabsamples2","selectedStyle","tableStyle","expandedDataColumns","selector","sortable","expandedAnnotationsColumns","columns","customStyles","headCells","cells","ExpandedRow","rowData","rowAnnotations","dense","striped","noHeader","noDataComponent","pagination","paginationPerPage","paginationRowsPerPageOptions","onChangeFile","textButtonAdd","changetextButtonAdd","s3Content","changeS3Content","dataForTable","changeDataForTable","setFolderToFetch","checkInterfaceAndsamples","typeOfFileToDisable","Video","Audio","PDF","Texte","contentDialogBoxIsSetting","projectStarted","initConfigImport","setConfigImport","lastObjectRef","useRef","hasProjectStarted","current","configToSet","changes","setTypeOfFileToLoadAndDisable","handleAddSample","GetImageFromAFolderAWS","GetAnnotationFromAFolderAWS","setAnnotationFromAws","changeLoadProjectIsSelected","textToSet","folderName","numberOfSamples","isSelected","folder","setButtonNameAddSample","_dataForTable","obj","endsWith","rowDataContent","startsWith","lastModified","toDateString","rowAnnotationsContent","FormControl","FormLabel","RadioGroup","Radio","checked","expandableRows","expandableRowsComponent","selectableRows","selectableRowsHighlight","selectableRowsNoSelectAll","selectableRowsComponent","noTableHead","onSelectedRowsChange","whatsChanging","selectedRows","row","selectableRowSelected","Items","Path","Item","S3BucketSelector","currentPath","canCreateNew","onChangePath","showFiles","newPath","join","option","newDirectory","prompt","parseS3URI","s3Path","path","useIsDesktop","accessKeyId","secretAccessKey","corsProxy","awsClient","AwsClient","service","fetchS3","sign","request","corsProxyRequest","Request","encodeURIComponent","headers","body","xmlParser","listBuckets","listBucketItemsAt","Host","putBucketItem","res","Code","Message","ImportFromS3Dialog","useIAMS3API","setS3Path","optionsLoading","setOptions","ListAllMyBucketsResult","Buckets","Bucket","b","Name","ListBucketResult","CommonPrefixes","Prefix","loadS3Path","files","items","Contents","Key","S3PathSelector","newS3Path","FileCounter","MultiFileDrop","loadFile","onComplete","totalUploaded","setTotalUploaded","setErrors","filesSelected","totalFiles","setUploadStartState","entries","isDragActive","maxHeight","SelectedPath","UploadToS3Dialog","setComplete","uploadedPaths","activeStep","setActiveStep","Stepper","Step","StepLabel","filePath","UploadHover","emptyFunc","onChangeContent","reader","FileReader","onload","fileContent","readAsText","lastClickTime","changeLastClickTime","Date","now","ImportTextSnippetsDialog","TextAreaWithUpload","ExplainText","GoogleDriveScreenshot","credentials","web","client_id","process","app_id","developer_key","googleScriptLoaded","setGoogleScriptLoaded","pickerApiLoaded","setPickerApiLoaded","oauthToken","setOAuthToken","userSelectedItemsFromDrive","setUserSelectedItemsFromDrive","isPickerOpen","setIsPickerOpen","scriptElement","createElement","async","appendChild","remove","googlePickerActionCallback","google","picker","PICKED","docs","googleDriveDocument","mimeType","createPicker","view","DocsView","ViewId","Docs","FOLDERS","setIncludeFolders","setSelectFolderEnabled","PickerBuilder","enableFeature","Feature","NAV_HIDDEN","MINE_ONLY","MULTISELECT_ENABLED","setAppId","addView","DOCS","setDeveloperKey","setCallback","build","setVisible","handleAuthenticationResponse","authenticationResponse","access_token","onAuthApiLoad","gapi","auth","authorize","scope","immediate","onPickerApiLoad","onLoadPicker","load","callback","badSpellingMap","Object","correct","badSpellings","badSpelling","convertTaskDatumMistakes","normalizedKey","correction","csv","JAC","fromCSV","derivePath","taskOutput","output","InfoText","whiteSpace","ImportUDTFileDialog","changeError","setContent","e1","udt","fromUDTCSV","e2","jsonError","stack","csvError","datasets","getSamples","datasetName","datasetUrl","taskData","ImportToyDatasetDialog","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","data-import-toy-dataset-name","idify","youtubeUrl","videoTitle","remote","videoQuality","downloadPath","onProgress","onChangeOverallProgress","ytdl","videoName","fullVideoPath","writableVideoFile","createWriteStream","youtubeVideoWithOptions","format","quality","pipe","on","chunkLength","downloaded","total","percent","progress","cancel","destroy","Text","Bar","ProgressContainer","TotalPercentageWrapper","Progress","unitProgress","overallProgress","completedVideoTitles","ProgressBar","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","getYoutubeVideoInformation","splittedURLsArray","progressCallback","checkedVideos","Promise","resolve","reject","getBasicInfo","info","errorText","video","splitURLsFromTextArea","stringURLs","urlsHasHTTPS","splittedURLsByNewLines","SelectVideoQualityHeader","SelectVideoQuality","LoadingText","CompletedVideoTitle","qualityOptions","ImportFromYoutubeUrls","urlsFromTextArea","setUrlsFromTextArea","setVideoQuality","setUnitProgress","setOverallProgress","isDownloading","setIsDownloading","setCompletedVideoTitles","cancelRef","setDefaultState","closeDialog","dialog","showOpenDialog","buttonLabel","properties","canceled","filePaths","errorMessage","youtubeVideoInfos","completedVideoPaths","completedVideoTitlesArray","youtubeVideosCount","youtubeVideoInfo","downloadYoutubeVideo","currentProgress","progressText","videoPath","Array","isArray","Fragment","convertToSamplesObject","fp","ext","electron","dirPaths","dirPath","fs","promises","readdir","fn","promptAndGetSamplesLocalDirectory","ButtonBase","MuiButton","DesktopOnlyText","SelectDialogContext","desktopOnly","authConfiguredOnly","signedInOnly","disabledReason","onlySupportType","disabledText","Consumer","onChangeDialog","import_button","classnames","onChangeDataset","selectedDialog","changeDialog","promptAndGetSamplesFromLocalDirectory","localSamples","samplesToAdd","onAddSamplesAsToyDataset","AssignmentReturnedIcon","CreateNewFolderIcon","TextFieldsIcon","PetsIcon","FaYoutube","S3Icon","FaGoogleDrive","DescriptionIcon","PasteUrlsDialog","ImportFromCognitoS3Dialog","ImportFromGoogleDriveDialog","StyledExpansionPanel","StyledExpansionPanelSummary","flatMap","videoFrameAt","keyframes","keys","kf","parseInt","regions","immutable","ErrorBox","downloadFile","urlToDownload","directoryPath","md5","existsSync","directory","filename","changeProgress","cancelled","td","urlKey","pathToFile","getFfmpegTimeCode","ms","cs","ss","mn","padStart","pathToFfmpeg","shell","exec","newsamples","transformsPerformed","imageOutputPath","ffmpegCommand","without","uploadFileToTransferSh","fileURL","remoteURL","axios","exactFilePath","fsFileBuffer","readFileSync","put","status","uploadedFileURL","splitFileNameFromFileURL","splittedFullFileName","getFileURLKey","transformFileURLsToWebURLs","setProgress","progressUnit","samplesIndex","samplesItem","fileURLKey","warn","webURLOfUploadedFile","TransformLocalFilesToWebURLs","rows","setRows","setColumns","nRows","nCols","imageUrls","from","Set","pieces","Icon1","Icon2","transform_button","CollectionsIcon","ComputerIcon","LanguageIcon","GetAppIcon","ImageIcon","CheckBoxOutlineBlankIcon","GridOnIcon","TransformVideoKeyframesDialog","DownloadURLsDialog","TransformVideoFramesToImagesDialog","TransformImageSamplesIntoSegmentsDialog","TransformSegmentsIntoImageSamplesDialog","SampleCounter","ExpandedRowContainer","borderTopLeftRadius","borderTopRightRadius","ExpandedRowTitle","ExpandedRowCode","input","SamplesView","openSampleInputEditor","openSampleLabelEditor","deleteSample","lastSampleTab","changeTabState","changeTab","knownKeys","has","cell","add","raised","ImportPage","onImportPageShouldExit","newOHA","TransformPage","shouldViewChange","SampleGrid","sampleIndex","choices","cellType","iface","asMutable","multipleRegions","multipleRegionLabels","deep","noActions","maxClusterPresets","low","medium","high","maxClusterPresetsRev","curr","visibleIf","step","autosegMode","autoSegmentationEngine","autosegPreset","maxClusters","autosegMaxClusters","allowMultiple","multiple","hasOther","column","ButtonsContainer","NoQuestions","Question","borderLeft","PreviewHeader","anchorEl","menuOpen","changeMenuOpen","multiline","ref","MenuItem","Fields","f","fieldIndex","isNested","newFieldInterface","field","fieldOrder","ExplanationTextHeader","ExplanationText","GithubLink","Configure3D","rel","use","LanguageDetector","initReactI18next","fallbackLng","debug","interpolation","escapeValue","resources","fr","translation","frTranslation","en","enTranslation","cn","cnTranslation","clobber","defaultIfNotClobbered","isClobbered","useDebugValue","notClobberedValue","setNotClobberedValue","TextClassification","useClobberedState","currentSampleIndex","setCurrentSampleIndex","availableLabels","initialLabels","multipleLabels","hotkeysEnabled","disableHotkeys","onPrev","onSaveTaskOutputItem","onExit","onNext","simpleSequenceToEntitySequence","simpleSeq","entSeq","charsPassed","seq","start","end","simpleSequenceAndRelationsToEntitySequence","sequence","relationships","textIdsInRelation","to","textId","entities","relations","entitySequenceToSimpleSeq","doc","sort","nextEntity","TextEntityRecognition","initialSequence","titleContent","TextEntityRelations","initialRelations","relationshipLabels","initialRelationships","getRandomColor","h","rid","convertToRIARegionFmt","regionType","cls","classification","tags","centerX","centerY","w","points","convertFromRIARegionFmt","riaRegion","convertToRIAImageFmt","taskDatum","frameTime","convertToRIAKeyframes","newKeyframes","regionTypeToTool","polygon","point","emptyObj","emptyArr","globalSampleIndex","containerProps","onModifySample","selectedIndex","setSelectedIndex","showTags","changeShowTags","selectedTool","changeSelectedTool","isClassification","isPixel","saveCurrentIndexAnnotation","img","images","allowedArea","labelProps","regionClsList","regionTagList","nextAction","onNextImage","onPrevImage","singleImageList","enabledTools","rt","fullImageSegmentationMode","selectedImage","taskDescription","autoSegmentationOptions","HeaderLeftSideContainer","onClickHeaderItem","headerItems","Workspace","headerLeftSide","iconSidebarItems","rightSidebarItems","brightColors","letters","hashInt","indexOf","ImageContainer","objectFit","flexShrink","CheckButton","ImageClassification","setSampleIndex","enlargedLabel","changeEnlargedLabel","currentOutput","changeCurrentOutput","onDone","onNextNoSave","newOutput","onClickLabel","hotkeyMap","backspace","enter","rightarrow","leftarrow","labelKeyMap","nextAvailableLetter","WorkspaceContainer","getUDTKeyFrames","riaOutput","customId","videoTime","videoSrc","audio","phraseBank","initialTranscriptionText","getTaskDescription","linkButtonContainer","linkButton","footer","footerContent","footerBorder","footerCount","allSamplesButton","sampleIcon","menuButton","sectionHeader","SampleContainer","hideDescription","defaultHideDescription","getItem","lastSampleExitText","requireCompleteToPressNext","minContentHeight","totalSamples","onChangeSample","changeHideDescriptionState","changeHideDescription","hide","setItem","sampleDrawerOpen","changeSampleDrawerOpen","LinkButton","escapeHtml","DataEntry","completeText","explain","BadOHA","Composite","changeCurrentSampleIndex","selectedField","changeSelectedField","indexZero","InterfaceIcon","UniversalDataViewer","onExitProp","hideHeader","onSaveTaskOutputItemProp","onClickSetup","EmptySampleContainer","ImageSegmentation","VideoSegmentation","AudioTranscription","Sentry","dsn","whitelistUrls","ErrorBoundary","hasError","errorInfo","withScope","setExtras","eventId","captureException","errorString","React","Component","noop","BigButton","NoOptions","TypeButton","Heading","PreviewContainer","mouseEvents","PreviewContent","SelectType","currentlySelected","ConfigureInterface","onChangeProp","onClickEditJSON","previewChangedTime","changePreviewChangedTime","previewLoading","changePreviewLoading","previewVersion","incPreviewVersion","previewDataset","setPreviewDataset","hidden","lg","LabelErrorBoundary","ConfigureImageSegmentation","ConfigureImagePixelSegmentation","ConfigureImageClassification","ConfigureComposite","ConfigureDataEntry","ConfigureAudioTranscription","ConfigureTextEntityRecognition","ConfigureTextEntityRelations","ConfigureTextClassification","ConfigureVideoSegmentation","PaperContainer","table","hotkeyIconStyle","onChangeHotkey","hotkeyList","onClearHotkeys","selectedHotKey","setSelectedHotKey","modifier","setCurrentKeyCombo","keyListener","align","hotkey","AdvancedOptionsView","onClearLabelData","forceUpdate","useUpdate","hotkeyDialogOpen","setHotkeyDialogOpen","confirm","reload","KeyboardShortcutManagerDialog","isNotNested","sampleInput","changeText","newText","editorProps","$blockScrolling","Infinity","msgBox","ToastContext","useToasts","addToast","ToastProvider","fullLife","messageType","msg","toasts","changeToasts","Stat","Label","Value","stats","verifying","setVerifying","textFieldValue","setTextFieldValue","apikey","useActiveDataset","useFileContext","setFile","setDataset","newDataset","FileContext","Link","usdFormatter","Intl","NumberFormat","currency","preciseUSDFormatter","maximumFractionDigits","minimumFractionDigits","steps","useLabelHelp","labelHelpEnabled","labelHelpError","loadMyCredits","variables","totalCost","formulaFunc","myCredits","labelHelp","labelHelpInfo","setLabelHelpInfo","collabUrl","loaded","loadJob","varName","sample_count","price","api_key","custom_id","toFixed","LabelHelpContext","LabelHelpProvider","loadingPricingConfig","setLoadingPricingConfig","pricingConfig","setPricingConfig","loadingMyTeam","setLoadingMyTeam","setMyCredits","loadPricingConfig","apiKey","credit","completedSamples","totalInteractions","totalSamplesConsidered","isLabelOnlyMode","useIsLabelOnlyMode","remoteFile","labelHelpDisabled","hasLabelHelpAPIKey","formula","variableDescriptions","variableName","computeDatasetVariable","funcArgs","formulaFuncPos","Function","ak","labelHelpAPIKey","LabelHelpView","hasAPIKey","ActiveLearningView","OverviewContainer","onChangeSampleIndex","onChangeSampleTimeToComplete","sampleTimeToComplete","setTab","showLabelHelpPricing","setShowLabelHelpPricing","labelOnlyMode","annotationStartTime","setAnnotationStartTime","REACT_APP_SHOW_LABELHELP_PRICING","isInOverview","percentComplete","Stats","duration","selectedSampleIndex","interface_type","relativeIndex","RawJSONEditor","onSave","jsonText","setJSONText","saveIcon","editIcon","initialMode","valueDisplay","setValueDisplay","changeMode","sampleInputEditor","changeSampleInputEditor","ipcRenderer","headerTabs","newTimeToComplete","newSamplesInWindow","samplesInWindow","timeToCompleteSample","useTimeToCompleteSample","changeSampleTimeToComplete","onOpenSettingsPage","onOpenSamplesPage","onOpenLabelPage","removeListener","average_time_to_complete_sample","shortcutHandlers","switch_to_label","switch_to_setup","switch_to_samples","allowChanges","handlers","EditableTitleText","newName","InterfacePage","some","splice","LabelView","EditSampleDialog","newInput","changeLog","humanReadableChangeLog","op","sampleMatch","seamless","getIn","updateIn","addToArray","withoutIn","parentPath","parentObj","object","patches","patch","isNaN","o","hash","charCodeAt","hashString","collab","serverUrl","getJSON","payload","postJSON","patchJSON","sessionId","bent","initialContent","short_id","udt_json","getLatestState","updateToLatestState","hashOfLatestState","latestVersion","humanReadableLog","getHumanReadableLog","newState","applySeamlessPatch","rfc6902","CUSTOM_COLLABORATION_SERVER","convertToCollaborativeFile","createSession","joinSession","AddSamplesKeys","k","sampleKeys","flatten","validate","toCSV","webReturn","saveFile","workingInterfaces","shouldUpdateAWSStorage","getFilesDifferences","fetchAFile","blob","fileNameExist","createOrReplaceProjectFile","createOrReplaceAnnotations","imageOrVideoName","createOrReplaceImages","UpdateAWSStorage","changeFile","saveAs","saveFileAsync","showSaveDialog","filters","extensions","newFilePath","writeFile","toUDTCSV","useFilesystem","checkForLatestPatch","applyLatestPatches","sendPatchIfChanged","useServer","useAWSCognito","udtInterface","last_used_interface_type","udtSamples","usedToyDataset","numCompleted","dataset_size","samples_completed","percent_completed","toy_dataset_used","recently_used_toy_dataset","useFileTelemetry","openFile","fsFile","handleLoadedFile","openUrl","decodeURIComponent","labelOnly","history","replaceState","makeSession","newFile","Buttons","errorDetails","detect","preventNavigation","confirmationMessage","returnValue","useFileHandler","shouldPreventNavigation","usePreventNavigation","setSelectedBrush","onCreateTemplate","openRecentItem","file_type","outputName","download","sessionName","AppErrorBoundary","DatasetEditor","StartingPage","onOpenWelcomePage","onNewFile","arg0","templateName","saveFileAs","exportToCSV","onOpenFileFromToolbar","onChangeFileName","Loading","App","fallback","Theme","DesktopApp","LocalStorageApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4a7f331f.chunk.js","sourcesContent":["import React from \"react\"\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport \"./theme.css\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: colors.blue,\n    secondary: colors.blue,\n  },\n  typography: {\n    fontFamily: '\"Inter\", \"Roboto\", sans-serif',\n    button: {\n      textTransform: \"none\",\n    },\n  },\n})\n\nexport default ({ children }: any) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n","export const defaultHotkeys = [\n  {\n    id: \"switch_to_label\",\n    description: \"Go to Labels Tab\",\n    binding: \"shift+3\",\n  },\n  {\n    id: \"switch_to_setup\",\n    description: \"Go to Setup Tab\",\n    binding: \"shift+1\",\n  },\n  {\n    id: \"switch_to_samples\",\n    description: \"Go to Samples Tab\",\n    binding: \"shift+2\",\n  },\n  {\n    id: \"select_tool\",\n    description: \"Switch to the Select Tool\",\n    binding: \"escape\",\n  },\n  {\n    id: \"zoom_tool\",\n    description: \"Select the Zoom Tool\",\n    binding: \"z\",\n  },\n  {\n    id: \"create_point\",\n    description: \"Create a point\",\n  },\n  {\n    id: \"create_bounding_box\",\n    description: \"Create a bounding box\",\n    binding: \"b\",\n  },\n  {\n    id: \"pan_tool\",\n    description: \"Select the Pan Tool\",\n    binding: \"p\",\n  },\n  {\n    id: \"create_polygon\",\n    description: \"Create a Polygon\",\n  },\n  {\n    id: \"create_pixel\",\n    description: \"Create a Pixel Mask\",\n  },\n  {\n    id: \"save_and_previous_sample\",\n    description: \"Save and go to previous sample\",\n    binding: \"a\",\n  },\n  {\n    id: \"save_and_next_sample\",\n    description: \"Save and go to next sample\",\n    binding: \"d\",\n  },\n  {\n    id: \"save_and_exit_sample\",\n    description: \"Save and exit current sample\",\n  },\n  {\n    id: \"exit_sample\",\n    description: \"Exit sample without saving\",\n  },\n]\nexport default defaultHotkeys\n","import React, { createContext, useContext, useMemo } from \"react\"\nimport { defaultHotkeys } from \"./default-hotkeys\"\nimport { useAppConfig } from \"../AppConfig\"\n\nexport const HotkeyContext = createContext({\n  hotkeys: defaultHotkeys,\n  changeHotkey: (id, newBinding) => null,\n})\n\nexport const useHotkeyStorage = () => useContext(HotkeyContext)\n\nexport const HotkeyStorageProvider = ({ children }) => {\n  const { fromConfig, setInConfig } = useAppConfig()\n\n  const hotkeys = useMemo(\n    () =>\n      defaultHotkeys.map((item) => {\n        if (fromConfig(`hotkeys.${item.id}`)) {\n          return { ...item, binding: fromConfig(`hotkeys.${item.id}`) }\n        } else {\n          return item\n        }\n      }),\n    [fromConfig]\n  )\n\n  const keyMap = useMemo(() => {\n    const keyMap = {}\n    for (const { id, binding } of hotkeys) {\n      if (!binding) continue\n      keyMap[id] = binding\n    }\n    return keyMap\n  }, [hotkeys])\n\n  const contextValue = useMemo(\n    () => ({\n      hotkeys,\n      keyMap,\n      clearHotkeys: () => {\n        for (const { id } of hotkeys) {\n          setInConfig(`hotkeys.${id}`, null)\n        }\n      },\n      changeHotkey: (id, newBinding) =>\n        setInConfig(`hotkeys.${id}`, newBinding),\n    }),\n    [setInConfig, hotkeys, keyMap]\n  )\n\n  return (\n    <HotkeyContext.Provider value={contextValue}>\n      {children}\n    </HotkeyContext.Provider>\n  )\n}\n\nexport { defaultHotkeys }\n","import React, { useMemo, useContext, createContext } from \"react\"\nimport { useLocalStorage } from \"react-use\"\nimport { defaultHotkeys } from \"../HotkeyStorage\"\n\nconst configKeyNames = [\n  \"auth.provider\",\n  \"auth.cognito.identity_pool_id\",\n  \"auth.cognito.region\",\n  \"auth.cognito.user_pool_id\",\n  \"auth.cognito.user_pool_web_client_id\",\n  \"auth.cognito.mandatory_sign_in\",\n  \"auth.cognito.authentication_flow_type\",\n  \"auth.cognito.storage.aws_s3.bucket\",\n  \"auth.cognito.storage.aws_s3.region\",\n  \"auth.s3iam.access_key_id\",\n  \"auth.s3iam.secret_access_key\",\n  \"auth.s3iam.region\",\n  \"auth.proxy.corsproxy\",\n  \"labelhelp.disabled\",\n  \"labelhelp.apikey\",\n  ...defaultHotkeys.map(({ id }) => `hotkeys.${id}`),\n]\n\nconst defaultAppConfig = {\n  \"auth.proxy.corsproxy\":\n    // TODO this is currently deployed on @seveibar's cloudflare, it'd be\n    // better if it was deployed on the organization's cloudflare\n    \"https://corsproxy.seve.workers.dev/corsproxy/?apiurl={URL}\",\n}\n\nconst jsonParseOrEmpty = (s) => {\n  try {\n    return JSON.parse(s)\n  } catch (e) {\n    return {}\n  }\n}\n\n// NOTE: appConfig should not allow any nested values\nexport const AppConfigContext = createContext({\n  appConfig: {\n    ...defaultAppConfig,\n    ...jsonParseOrEmpty(window.localStorage.app_config),\n  },\n  setAppConfig: (newConfig) => undefined,\n  fromConfig: (key) => undefined,\n  setInConfig: (key, value) => undefined,\n})\n\nexport const useAppConfig = () => useContext(AppConfigContext)\n\nexport const AppConfigProvider = ({ children }) => {\n  const [appConfig, setAppConfig] = useLocalStorage(\"app_config\", {})\n  const contextValue = useMemo(() => {\n    return {\n      appConfig,\n      setAppConfig,\n      fromConfig: (key) => {\n        if (!configKeyNames.includes(key)) {\n          throw new Error(`Unknown config key name \"${key}\"`)\n        }\n        if (appConfig[key] === undefined) {\n          return defaultAppConfig[key]\n        }\n        return appConfig[key]\n      },\n      setInConfig: (key, value) => {\n        if (\n          typeof value !== \"string\" &&\n          typeof value !== \"number\" &&\n          typeof value !== \"boolean\" &&\n          value !== undefined &&\n          value !== null\n        ) {\n          throw new Error(\n            `Config can only have boolean/strings/numbers/null/undefined, something tried to set appConfig[\"${key}\"] = ${JSON.stringify(\n              value\n            )}`\n          )\n        }\n        if (!configKeyNames.includes(key)) {\n          throw new Error(`Unknown config key name \"${key}\"`)\n        }\n        setAppConfig({ ...appConfig, [key]: value })\n      },\n    }\n  }, [appConfig, setAppConfig])\n  return (\n    <AppConfigContext.Provider value={contextValue}>\n      {children}\n    </AppConfigContext.Provider>\n  )\n}\n","import Amplify, { Auth } from \"aws-amplify\"\n\nclass CognitoHandler {\n  authProvider = \"cognito\"\n  constructor(appConfig) {\n    this.authConfig = {\n      Auth: {\n        identityPoolId: appConfig[\"auth.cognito.identity_pool_id\"],\n        region: appConfig[\"auth.cognito.region\"],\n        userPoolId: appConfig[\"auth.cognito.user_pool_id\"],\n        userPoolWebClientId: appConfig[\"auth.cognito.user_pool_web_client_id\"],\n        mandatorySignIn: true,\n        authenticationFlowType: \"USER_PASSWORD_AUTH\",\n      },\n      Storage: {\n        AWSS3: {\n          bucket: appConfig[\"auth.cognito.storage.aws_s3.bucket\"],\n          region: appConfig[\"auth.cognito.storage.aws_s3.region\"],\n        },\n      },\n    }\n    this.isLoggedIn = false\n    this.checkIfLoggedIn()\n  }\n  checkIfLoggedIn = async () => {\n    Amplify.configure(this.authConfig)\n    const userHandle = await Auth.currentAuthenticatedUser()\n    if (userHandle) {\n      this.user = userHandle\n      this.isLoggedIn = true\n      this.hasChanged = true\n    }\n  }\n  setUser = (userHandle) => {\n    this.user = userHandle\n    this.isLoggedIn = Boolean(userHandle)\n    this.hasChanged = true\n  }\n  login = async (tryUser) => {\n    Amplify.configure(this.authConfig)\n\n    const userHandle = await Auth.currentAuthenticatedUser()\n\n    this.user = userHandle\n    this.hasChanged = true\n  }\n  logout = () => {\n    this.user = null\n    this.isLoggedIn = false\n    this.hasChanged = true\n    Auth.signOut()\n  }\n  getState = () => ({\n    user: this.user,\n    isLoggedIn: this.isLoggedIn,\n    authConfig: this.authConfig,\n  })\n}\n\nexport default CognitoHandler\n","import React, {\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n  useReducer,\n} from \"react\"\nimport { useAppConfig } from \"../../components/AppConfig\"\nimport CognitoHandler from \"./cognito-handler.js\"\n\nexport const authProviders = [\"cognito\"]\n\nconst AuthContext = createContext({ authProvider: \"none\" })\n\nexport const AuthProvider = ({ children }) => {\n  const { appConfig, fromConfig } = useAppConfig()\n  const [handler, setHandler] = useState({ authProvider: \"none\" })\n  const authProvider = fromConfig(\"auth.provider\")\n  const [handlerVersion, incHandlerVersion] = useReducer(\n    (state) => state + 1,\n    0\n  )\n\n  useEffect(() => {\n    if (handler && handler.authProvider === authProvider) return\n    if (authProvider === \"cognito\") {\n      setHandler(new CognitoHandler(appConfig))\n    }\n  }, [authProvider, appConfig, handler])\n\n  useEffect(() => {\n    if (!handler) return\n    const interval = setInterval(() => {\n      if (handler.hasChanged) {\n        incHandlerVersion()\n        handler.hasChanged = false\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval)\n    }\n  }, [handler, handlerVersion])\n\n  const contextValue = useMemo(\n    () => ({\n      authProvider: handler.authProvider,\n      ...(handler.getState ? handler.getState() : {}),\n      // TODO remove setUser\n      setUser: handler.setUser,\n      logout: handler.logout,\n      login: handler.login,\n      handlerVersion,\n    }),\n    [handler, handlerVersion]\n  )\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport default useAuth\n","import React, { Fragment, useState } from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { styled } from \"@material-ui/core/styles\"\n\nimport { useTranslation } from \"react-i18next\"\n\nimport Amplify, { Auth } from \"aws-amplify\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useAuth } from \"../../utils/auth-handlers/use-auth.js\"\n\nconst ErrorText = styled(\"div\")({\n  padding: 16,\n  color: colors.red[500],\n})\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default ({ onUserChange, onRequireCompleteSignUp, onClose }) => {\n  const { authConfig, setUser } = useAuth()\n  const classes = useStyles()\n\n  const [error, setError] = useState()\n  const { t } = useTranslation()\n\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n    notAuthorizedException: false,\n  })\n\n  const handleSignInClick = () => {\n    if (isEmpty(state.username) || isEmpty(state.password)) {\n      setState((prevState) => ({\n        ...prevState,\n        notAuthorizedException: true,\n      }))\n    } else {\n      SignInAWS(state.username, state.password)\n    }\n  }\n\n  const handleTextFieldChange = (event) => {\n    event.persist()\n    setState((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n      notAuthorizedException: false,\n    }))\n  }\n\n  async function SignInAWS(username, password) {\n    setError(null)\n    try {\n      await Amplify.configure(authConfig)\n      await Auth.signIn(username, password)\n        .then((user) => {\n          setUser(user)\n          if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n            onRequireCompleteSignUp(user)\n          } else {\n            onUserChange(user)\n            onClose()\n          }\n          return user\n        })\n        .catch((err) => {\n          if (err.code === \"UserNotConfirmedException\") {\n            console.log(\"Must confirm the account\")\n            // The error happens if the user didn't finish the confirmation step when signing up\n            // In this case you need to resend the code and confirm the user\n            // About how to resend the code and confirm the user, please check the signUp part\n          } else if (err.code === \"PasswordResetRequiredException\") {\n            console.log(\"Password has been reset\")\n            // The error happens when the password is reset in the Cognito console\n            // In this case you need to call forgotPassword to reset the password\n            // Please check the Forgot Password part.\n          } else if (err.code === \"NotAuthorizedException\") {\n            console.log(\"Bad password message\")\n            setState({ ...state, notAuthorizedException: true, password: \"\" })\n            // The error happens when the incorrect password is provided\n          } else if (err.code === \"UserNotFoundException\") {\n            console.log(\"User not found message\")\n            // The error happens when the supplied username/username does not exist in the Cognito user pool\n          } else {\n            console.log(\"Error that we do not handle for\")\n            console.log(err.code)\n          }\n          setError(err.toString())\n          return err\n        })\n    } catch (e) {\n      setError(e.toString())\n    }\n  }\n\n  return (\n    <Fragment>\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(\"sign-in\")}\n      </Typography>\n      {error && <ErrorText>{error}</ErrorText>}\n      <form className={classes.form} noValidate>\n        <TextField\n          error={state.notAuthorizedException}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          name=\"username\"\n          autoComplete=\"username\"\n          helperText={\n            state.notAuthorizedException\n              ? \"The username or password is incorrect.\"\n              : \"\"\n          }\n          autoFocus\n          onChange={handleTextFieldChange}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={state.password}\n          onChange={handleTextFieldChange}\n        />\n        <FormControlLabel\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\n          label=\"Remember me\"\n        />\n        <Button\n          onClick={handleSignInClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          {t(\"sign-in\")}\n        </Button>\n      </form>\n    </Fragment>\n  )\n}\n","import React, { Fragment, useState } from \"react\"\nimport { Typography, TextField, Button } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Auth } from \"aws-amplify\"\nimport { useAuth } from \"../../utils/auth-handlers/use-auth.js\"\nimport { useTranslation } from \"react-i18next\"\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default ({ requiredAttributes, onUserChange, onClose }) => {\n  const { user } = useAuth()\n  const requiredAttributesDict = {}\n  const requiredAttributesErrorDict = {}\n  requiredAttributes.forEach((requiredAttribute) => {\n    requiredAttributesDict[requiredAttribute] = \"\"\n    requiredAttributesErrorDict[requiredAttribute] = false\n  })\n\n  const [state, setState] = useState({\n    newPassword: \"\",\n    newPasswordNotValid: false,\n    newPasswordConfirmation: \"\",\n    newPasswordNotEqualsConfirmation: false,\n    requiredAttributesDict: requiredAttributesDict,\n    requiredAttributesErrorDict: requiredAttributesErrorDict,\n  })\n\n  const classes = useStyles()\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const handleCompleteSignUpClick = () => {\n    if (\n      checkIfPasswordEqualsConfirmationPassword() &&\n      _handleCantBeNull(\"checkAll\")\n    ) {\n      completeNewPassword()\n    } else {\n      console.log(\"Something missing\")\n    }\n\n    /// completeNewPassword();\n  }\n\n  const _handleAttributesTextFieldChange = (event) => {\n    setState({\n      ...state,\n      requiredAttributesDict: {\n        ...state.requiredAttributesDict,\n        [event.target.name]: event.target.value,\n      },\n    })\n  }\n\n  const _handleTextFieldChange = (event) => {\n    setState({\n      ...state,\n      newPasswordError: null,\n      newPasswordNotValid: false,\n      newPasswordNotEqualsConfirmation: false,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const checkIfPasswordEqualsConfirmationPassword = () => {\n    if (state.newPassword === state.newPasswordConfirmation) {\n      setState({ ...state, newPasswordNotEqualsConfirmation: false })\n      return true\n    } else {\n      setState({ ...state, newPasswordNotEqualsConfirmation: true })\n      return false\n    }\n  }\n\n  const _handleCantBeNull = (e) => {\n    let allGood = true\n    if (e === \"checkAll\") {\n      requiredAttributes.forEach((requiredAttribute) => {\n        if (state.requiredAttributesDict[requiredAttribute] === \"\") {\n          setState({\n            ...state,\n            requiredAttributesErrorDict: {\n              ...state.requiredAttributesErrorDict,\n              [requiredAttribute]: true,\n            },\n          })\n          allGood = false\n        }\n      })\n    } else {\n      if (e.target.value === \"\") {\n        setState({\n          ...state,\n          requiredAttributesErrorDict: {\n            ...state.requiredAttributesErrorDict,\n            [e.target.name]: true,\n          },\n        })\n      } else {\n        setState({\n          ...state,\n          requiredAttributesErrorDict: {\n            ...state.requiredAttributesErrorDict,\n            [e.target.name]: false,\n          },\n        })\n      }\n    }\n    return allGood\n  }\n\n  function completeNewPassword() {\n    Auth.completeNewPassword(\n      user, // the Cognito User Object\n      state.newPassword, // the new password\n      state.requiredAttributesDict\n    )\n      .then((user) => {\n        onUserChange(user)\n        onClose()\n      })\n      .catch((err) => {\n        setState({ ...state, newPasswordError: err.toString() })\n      })\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <Fragment>\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(\"complete-your-sign-up\")}\n      </Typography>\n      <form className={classes.form} noValidate>\n        <TextField\n          error={state.newPasswordNotValid}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"newPassword\"\n          label=\"New password\"\n          type=\"password\"\n          id=\"password\"\n          value={state.newPassword}\n          onChange={_handleTextFieldChange}\n          helperText={state.newPasswordError || \"\"}\n        />\n        <TextField\n          error={state.newPasswordNotEqualsConfirmation}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"newPasswordConfirmation\"\n          label=\"Confirm new password\"\n          type=\"password\"\n          id=\"confirm-password\"\n          onChange={_handleTextFieldChange}\n          value={state.newPasswordConfirmation}\n          onBlur={checkIfPasswordEqualsConfirmationPassword}\n          helperText={\n            state.newPasswordNotEqualsConfirmation\n              ? \"New password and confirmation password must be the same\"\n              : \"\"\n          }\n        />\n        {requiredAttributes.map((requiredAttribute) => {\n          return (\n            <TextField\n              error={state.requiredAttributesErrorDict[requiredAttribute]}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name={requiredAttribute.toString()}\n              key={requiredAttribute.toString()}\n              label={capitalizeFirstLetter(requiredAttribute.toString())}\n              type=\"text\"\n              id={requiredAttribute.toString()}\n              onChange={_handleAttributesTextFieldChange}\n              value={state.requiredAttributesDict.requiredAttribute}\n              onBlur={_handleCantBeNull}\n              helperText={\n                state.requiredAttributesErrorDict[requiredAttribute]\n                  ? `${capitalizeFirstLetter(\n                      requiredAttribute.toString()\n                    )} can't be null`\n                  : \"\"\n              }\n            />\n          )\n        })}\n        <Button\n          onClick={handleCompleteSignUpClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          {t(\"complete-sign-up\")}\n        </Button>\n      </form>\n    </Fragment>\n  )\n}\n","import React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Drawer from \"@material-ui/core/Drawer\"\n\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Grid from \"@material-ui/core/Grid\"\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport SignIn from \"./SignIn\"\nimport CompleteSignUp from \"./CompleteSignUp\"\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: 500,\n  },\n  root: {\n    height: \"100vh\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  close: {\n    cursor: \"pointer\",\n    color: theme.palette.secondary.main,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}))\n\nexport default ({ loginDrawerOpen, onClose }) => {\n  const classes = useStyles()\n  const [user, setUser] = useState({})\n\n  const [state, setState] = useState({\n    signingIn: true,\n    completeSignUp: false,\n    user: \"\",\n  })\n\n  const toggleCompleteSignUp = (user) => {\n    setState((prevState) => ({\n      ...prevState,\n      signingIn: false,\n      completeSignUp: true,\n      user: user,\n      requiredAttributes: user.challengeParam.requiredAttributes,\n    }))\n  }\n\n  const drawer = () => (\n    <div className={classes.drawer} role=\"presentation\">\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          component={Paper}\n          elevation={6}\n          square\n        >\n          <div className={classes.paper}>\n            <Grid container>\n              <Grid item xs>\n                <ArrowForwardIcon onClick={onClose} className={classes.close} />\n              </Grid>\n            </Grid>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            {state.signingIn && (\n              <SignIn\n                onRequireCompleteSignUp={(user) => toggleCompleteSignUp(user)}\n                onUserChange={(user) => {\n                  setUser(user)\n                }}\n                onClose={onClose}\n              />\n            )}\n            {state.completeSignUp && (\n              <CompleteSignUp\n                requiredAttributes={state.requiredAttributes}\n                user={user}\n                onClose={onClose}\n                onUserChange={(user) => {\n                  setUser(user)\n                }}\n              />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n\n  return (\n    <>\n      <Drawer anchor=\"right\" open={loginDrawerOpen} onClose={onClose}>\n        {drawer()}\n      </Drawer>\n    </>\n  )\n}\n","// @flow\n\nexport default () => {\n  if (window.require) {\n    return window.require(\"electron\")\n  }\n  return null\n}\n","import posthog from \"posthog-js\"\nimport useElectron from \"./use-electron\"\n\nconst posthogMock = {\n  opt_in_capturing: () => null,\n  opt_out_capturing: () => null,\n  init: () => null,\n  reset: () => null,\n  capture: () => null,\n  capture_forms: () => null,\n  capture_pageview: () => null,\n  register: () => null,\n  register_once: () => null,\n  unregister: () => null,\n  identify: () => \"mock\",\n  alias: () => null,\n  set_config: () => null,\n  get_config: () => null,\n  get_property: () => null,\n  get_distinct_id: () => null,\n  has_opted_out_capturing: () => true,\n  has_opted_in_capturing: () => false,\n  disable_all_events: () => null,\n  people: {\n    set: () => null,\n    set_once: () => null,\n  },\n}\n\nwindow.posthogInitialized = false\nexport default () => {\n  const isDesktop = Boolean(useElectron())\n  if (window.Cypress) {\n    window.posthogInitialized = true\n    window.posthog = posthogMock\n  }\n  if (!window.posthogInitialized) {\n    posthog.init(\"dSrx1PbFd02XsxlLd7qNbeTxKZwwao2sclVmapyYlT4\", {\n      api_host: \"https://posthog.universaldatatool.com\",\n      autocapture: false,\n    })\n    window.posthog = posthog\n    const domain = isDesktop ? \"desktop\" : window.location.origin\n    posthog.capture(\"domain\", { domain })\n    posthog.capture(\"is_desktop\", { isDesktop: isDesktop })\n    posthog.people.set({ is_desktop: isDesktop, domain })\n    window.posthogInitialized = true\n  }\n  return window.posthog\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { useLocalStorage } from \"react-use\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport PeopleIcon from \"@material-ui/icons/People\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport AddBoxTwoTone from \"@material-ui/icons/AddBoxTwoTone\"\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\", marginLeft: 8 })\nconst WIDTH = 300\nconst borderColor = colors.grey[500]\nconst popupBoxBeforeAndAfter = {\n  bottom: \"100%\",\n  left: \"25%\",\n  border: \"solid transparent\",\n  content: '\" \"',\n  height: 0,\n  width: 0,\n  position: \"absolute\",\n  pointerEvents: \"none\",\n}\nconst PopupBox = styled(\"div\")({\n  position: \"absolute\",\n  zIndex: 10,\n  top: 45,\n  padding: 16,\n  boxSizing: \"border-box\",\n  borderRadius: 4,\n  left: -WIDTH / 4 + 22,\n  backgroundColor: \"#fff\",\n  border: `1px solid ${borderColor}`,\n  width: WIDTH,\n  minHeight: 200,\n  boxShadow: \"0px 3px 12px rgba(0,0,0,0.3)\",\n  \"&:before\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(0,0,0, 0)\",\n    borderBottomColor: borderColor,\n    borderWidth: 12,\n    marginLeft: -12,\n  },\n  \"&:after\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(255,255,255, 0)\",\n    borderBottomColor: \"#fff\",\n    borderWidth: 10,\n    marginLeft: -10,\n  },\n  \"& h1\": {\n    fontSize: 18,\n    marginTop: 0,\n    color: colors.blue[800],\n  },\n  \"& h2\": {\n    fontSize: 14,\n    color: colors.grey[800],\n  },\n  opacity: 1,\n  transition: \"opacity 200ms linear, transform 200ms ease\",\n  \"&.hidden\": {\n    opacity: 0,\n    transform: \"translate(0, 10px)\",\n    pointerEvents: \"none\",\n  },\n})\nconst ErrorText = styled(\"div\")({\n  color: colors.red[500],\n  padding: 8,\n  fontSize: 14,\n})\n\nconst CreateNewButton = styled(Button)({\n  marginTop: 16,\n  justifyContent: \"flex-start\",\n  color: colors.blue[500],\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n  },\n})\nconst ExitButton = styled(Button)({\n  marginTop: 16,\n  justifyContent: \"flex-start\",\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n    color: colors.red[500],\n  },\n})\n\nexport default ({\n  fileOpen = false,\n  inSession = false,\n  error,\n  onJoinSession,\n  onCreateSession,\n  onLeaveSession,\n  sessionBoxOpen,\n  changeSessionBoxOpen,\n}) => {\n  const [loadingSession, changeLoadingSession] = useState(false)\n  const [sessionUrl, changeSessionUrl] = useState(\"\")\n  const [userName, changeUserName] = useLocalStorage(\"userName\", \"anonymous\")\n  const posthog = usePosthog()\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (loadingSession) {\n      setTimeout(() => {\n        changeLoadingSession(false)\n      }, 10000)\n    }\n  }, [loadingSession])\n\n  return (\n    <Container\n      title=\"collaborate-icon\"\n      onMouseEnter={() => changeSessionBoxOpen(true)}\n      onMouseLeave={() => changeSessionBoxOpen(false)}\n    >\n      <IconButton style={{ color: inSession ? colors.blue[500] : undefined }}>\n        <PeopleIcon />\n      </IconButton>\n      <PopupBox className={sessionBoxOpen ? \"\" : \"hidden\"}>\n        <h1>{t(\"collaborate\")}</h1>\n        {!inSession ? (\n          <>\n            <h2>{t(\"join-a-session\")}</h2>\n            <TextField\n              variant=\"outlined\"\n              label=\"URL to Session\"\n              value={sessionUrl}\n              onChange={(e) => changeSessionUrl(e.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      color=\"primary\"\n                      onClick={() => {\n                        posthog.capture(\"join_collaborative_session\")\n                        onJoinSession(sessionUrl)\n                      }}\n                      disabled={!sessionUrl}\n                    >\n                      <ArrowForwardIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            {error && <ErrorText>{error}</ErrorText>}\n            <CreateNewButton\n              fullWidth\n              disabled={!fileOpen || loadingSession || error}\n              onClick={() => {\n                posthog.capture(\"create_collaborative_session\")\n                onCreateSession()\n                changeLoadingSession(true)\n              }}\n            >\n              {loadingSession ? (\n                <CircularProgress className=\"icon\" size={24} />\n              ) : (\n                <AddBoxTwoTone className=\"icon\" />\n              )}\n              Create New Session\n            </CreateNewButton>\n          </>\n        ) : (\n          <>\n            <TextField\n              style={{ marginTop: 12 }}\n              variant=\"outlined\"\n              label=\"User Name\"\n              value={userName}\n              onChange={(e) => changeUserName(e.target.value)}\n            />\n            <ExitButton fullWidth onClick={onLeaveSession}>\n              <ExitToAppIcon className=\"icon\" />\n              {t(\"leave-session\")}\n            </ExitButton>\n          </>\n        )}\n      </PopupBox>\n    </Container>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst WIDTH = 300\nconst borderColor = colors.grey[500]\nconst popupBoxBeforeAndAfter = {\n  bottom: \"100%\",\n  left: \"25%\",\n  border: \"solid transparent\",\n  content: '\" \"',\n  height: 0,\n  width: 0,\n  position: \"absolute\",\n  pointerEvents: \"none\",\n}\nconst PopupBox = styled(\"div\")({\n  position: \"absolute\",\n  zIndex: 10,\n  top: 45,\n  padding: 16,\n  boxSizing: \"border-box\",\n  borderRadius: 4,\n  left: -WIDTH / 4 + 22,\n  backgroundColor: \"#fff\",\n  border: `1px solid ${borderColor}`,\n  width: WIDTH,\n  minHeight: 200,\n  boxShadow: \"0px 3px 12px rgba(0,0,0,0.3)\",\n  \"&:before\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(0,0,0, 0)\",\n    borderBottomColor: borderColor,\n    borderWidth: 12,\n    marginLeft: -12,\n  },\n  \"&:after\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(255,255,255, 0)\",\n    borderBottomColor: \"#fff\",\n    borderWidth: 10,\n    marginLeft: -10,\n  },\n  \"& h1\": {\n    fontSize: 18,\n    marginTop: 0,\n    color: colors.blue[800],\n  },\n  \"& h2\": {\n    fontSize: 14,\n    color: colors.grey[800],\n  },\n  opacity: 1,\n  transition: \"opacity 200ms linear, transform 200ms ease\",\n  \"&.hidden\": {\n    opacity: 0,\n    transform: \"translate(0, 10px)\",\n    pointerEvents: \"none\",\n  },\n})\n\nexport default ({ open, children }) => {\n  return <PopupBox className={open ? \"\" : \"hidden\"}>{children}</PopupBox>\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport HeaderPopupBox from \"../HeaderPopupBox\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\" })\n\nconst StyledButton = styled(Button)({\n  justifyContent: \"flex-start\",\n  \"& .fakeicon\": {\n    display: \"inline\",\n    marginRight: 8,\n    padding: 4,\n    paddingTop: 5,\n    fontSize: 11,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    backgroundColor: colors.grey[700],\n    borderRadius: 4,\n    width: 36,\n    \"&.blue\": {\n      backgroundColor: colors.blue[700],\n    },\n    \"&.green\": {\n      backgroundColor: colors.green[700],\n    },\n  },\n})\n\nexport default ({ onDownload }) => {\n  const [open, changeOpen] = useState(false)\n  const { t } = useTranslation()\n\n  return (\n    <Container\n      onMouseEnter={() => changeOpen(true)}\n      onMouseLeave={() => changeOpen(false)}\n    >\n      <IconButton>\n        <DownloadIcon />\n      </IconButton>\n      <HeaderPopupBox open={open}>\n        <h1>{t(\"download\")}</h1>\n        <StyledButton fullWidth onClick={() => onDownload(\"csv\")}>\n          <div className=\"fakeicon green\">CSV</div>\n          {t(\"download-csv\")}\n        </StyledButton>\n        <StyledButton fullWidth onClick={() => onDownload(\"json\")}>\n          <div className=\"fakeicon blue\">JSON</div>\n          {t(\"download-json\")}\n        </StyledButton>\n      </HeaderPopupBox>\n    </Container>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nfunction GitHub(props: Object) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n    </SvgIcon>\n  )\n}\n\nexport default GitHub\n","// @flow weak\n\nimport seed from \"seed-random\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst fade = (cmap, amt) => {\n  const newCmap = {}\n  for (let i = 100; i < 1000; i++) {\n    if (i - amt <= 0) {\n      newCmap[i] = \"#fff\"\n    } else {\n      newCmap[i] = cmap[i - amt]\n    }\n  }\n  return newCmap\n}\n\nconst fadedGrey = {\n  ...colors.grey,\n  // \"800\": colors.grey[600],\n  // \"700\": colors.grey[500],\n  // \"600\": colors.grey[400],\n  // \"500\": colors.grey[300],\n  // \"400\": colors.grey[200],\n  // \"300\": colors.grey[100],\n  isFaded: true,\n}\n\nconst availableColors = [\n  colors.blue,\n  colors.deepOrange,\n  colors.green,\n  colors.purple,\n  colors.pink,\n  colors.cyan,\n  colors.orange,\n  colors.indigo,\n]\n\nconst colorMap = {\n  ...colors,\n  complete: colors.blue,\n  incomplete: fadedGrey,\n  faded: fadedGrey,\n  review: colors.deepOrange,\n  ellipsis1: fade(colors.grey, 100),\n  ellipsis2: fade(colors.grey, 200),\n  ellipsis3: fade(colors.grey, 300),\n}\n\nexport default (brush) => {\n  return (\n    colorMap[brush] || availableColors[seed(brush) * availableColors.length]\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport BrushIcon from \"@material-ui/icons/Brush\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport HeaderPopupBox from \"../HeaderPopupBox\"\nimport useEventCallback from \"use-event-callback\"\nimport memoize from \"lodash/memoize\"\nimport getBrushColorPalette from \"../../utils/get-brush-color-palette.js\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\" })\nconst BrushCircle = styled(\"div\")(({ color }) => ({\n  display: \"inline\",\n  marginRight: 8,\n  backgroundColor: color[700],\n  width: 24,\n  height: 24,\n  borderRadius: 20,\n}))\n\nconst OtherColorContainers = styled(\"div\")({\n  paddingTop: 10,\n  padding: 4,\n  display: \"flex\",\n  flexWrap: \"wrap\",\n})\n\nconst StyledIconButton = styled(IconButton)(({ iconcolor, selected }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  backgroundColor: iconcolor[700],\n  border: selected ? `4px solid ${iconcolor[\"A200\"]}` : \"4px solid #fff\",\n  boxSizing: \"content-box\",\n  margin: 4,\n  transition: \"transform 200ms linear\",\n  \"&:hover\": {\n    backgroundColor: iconcolor[800],\n    transform: \"scale(1.2,1.2)\",\n  },\n  \"&:active\": {\n    transition: \"transform 100ms linear\",\n    transform: \"scale(1.4,1.4)\",\n  },\n}))\n\nconst StyledButton = styled(Button)(({ selected, iconcolor }) => ({\n  justifyContent: \"flex-start\",\n  marginTop: 4,\n  marginBottom: 4,\n  paddingTop: 8,\n  paddingBottom: 8,\n  backgroundColor: selected ? iconcolor[50] : \"#fff\",\n  border: selected ? `2px solid ${iconcolor[200]}` : \"2px solid #fff\",\n  \"&:hover\": {\n    backgroundColor: selected ? iconcolor[100] : \"none\",\n  },\n}))\n\nexport default ({ selectedBrush, onChangeSelectedBrush }) => {\n  const [open, changeOpen] = useState(false)\n  const handleClick = useEventCallback((color) =>\n    memoize(() => onChangeSelectedBrush(color))\n  )\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  return (\n    <Container\n      onMouseEnter={() => changeOpen(true)}\n      onMouseLeave={() => changeOpen(false)}\n    >\n      <IconButton>\n        <BrushIcon\n          style={{ color: getBrushColorPalette(selectedBrush)[800] }}\n        />\n      </IconButton>\n      <HeaderPopupBox open={open}>\n        <h1>{t(\"sample-brushes\")}</h1>\n        <StyledButton\n          selected={selectedBrush === \"complete\" || selectedBrush === \"blue\"}\n          iconcolor={colors.blue}\n          fullWidth\n          onClick={handleClick(\"complete\")}\n        >\n          <BrushCircle color={colors.blue} />\n          {t(\"complete\")}\n        </StyledButton>\n        <StyledButton\n          selected={\n            selectedBrush === \"review\" || selectedBrush === \"deepOrange\"\n          }\n          iconcolor={colors.deepOrange}\n          fullWidth\n          onClick={handleClick(\"review\")}\n        >\n          <BrushCircle color={colors.deepOrange} />\n          {t(\"review\")}\n        </StyledButton>\n        <OtherColorContainers>\n          <StyledIconButton\n            onClick={handleClick(\"green\")}\n            selected={selectedBrush === \"green\"}\n            iconcolor={colors.green}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"purple\")}\n            selected={selectedBrush === \"purple\"}\n            iconcolor={colors.purple}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"pink\")}\n            selected={selectedBrush === \"pink\"}\n            iconcolor={colors.pink}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"cyan\")}\n            selected={selectedBrush === \"cyan\"}\n            iconcolor={colors.cyan}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"orange\")}\n            selected={selectedBrush === \"orange\"}\n            iconcolor={colors.orange}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"indigo\")}\n            selected={selectedBrush === \"indigo\"}\n            iconcolor={colors.indigo}\n          />\n        </OtherColorContainers>\n      </HeaderPopupBox>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst SlackIcon = (props) => {\n  return (\n    <SvgIcon>\n      <svg\n        style={{\n          width: 32,\n          height: 32,\n        }}\n        viewBox=\"50 60 160 160\"\n      >\n        <g>\n          <g>\n            <path d=\"M99.4,151.2c0,7.1-5.8,12.9-12.9,12.9s-12.9-5.8-12.9-12.9c0-7.1,5.8-12.9,12.9-12.9h12.9V151.2z\" />\n            <path d=\"M105.9,151.2c0-7.1,5.8-12.9,12.9-12.9s12.9,5.8,12.9,12.9v32.3c0,7.1-5.8,12.9-12.9,12.9 s-12.9-5.8-12.9-12.9C105.9,183.5,105.9,151.2,105.9,151.2z\" />\n          </g>\n          <g>\n            <path d=\"M118.8,99.4c-7.1,0-12.9-5.8-12.9-12.9s5.8-12.9,12.9-12.9s12.9,5.8,12.9,12.9v12.9H118.8z\" />\n            <path d=\"M118.8,105.9c7.1,0,12.9,5.8,12.9,12.9s-5.8,12.9-12.9,12.9H86.5c-7.1,0-12.9-5.8-12.9-12.9 s5.8-12.9,12.9-12.9C86.5,105.9,118.8,105.9,118.8,105.9z\" />\n          </g>\n          <g>\n            <path d=\"M170.6,118.8c0-7.1,5.8-12.9,12.9-12.9c7.1,0,12.9,5.8,12.9,12.9s-5.8,12.9-12.9,12.9h-12.9V118.8z\" />\n            <path d=\"M164.1,118.8c0,7.1-5.8,12.9-12.9,12.9c-7.1,0-12.9-5.8-12.9-12.9V86.5c0-7.1,5.8-12.9,12.9-12.9 c7.1,0,12.9,5.8,12.9,12.9V118.8z\" />\n          </g>\n          <g>\n            <path d=\"M151.2,170.6c7.1,0,12.9,5.8,12.9,12.9c0,7.1-5.8,12.9-12.9,12.9c-7.1,0-12.9-5.8-12.9-12.9v-12.9H151.2z\" />\n            <path d=\"M151.2,164.1c-7.1,0-12.9-5.8-12.9-12.9c0-7.1,5.8-12.9,12.9-12.9h32.3c7.1,0,12.9,5.8,12.9,12.9 c0,7.1-5.8,12.9-12.9,12.9H151.2z\" />\n          </g>\n        </g>\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default SlackIcon\n","// @flow weak\n\nimport React, { memo } from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport StorageIcon from \"@material-ui/icons/Storage\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport CollaborateButton from \"../CollaborateButton\"\nimport DownloadButton from \"../DownloadButton\"\nimport Button from \"@material-ui/core/Button\"\nimport GithubIcon from \"../Header/GithubIcon\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport packageJSON from \"../../../package.json\"\nimport BrushButton from \"../BrushButton\"\nimport useAuth from \"../../utils/auth-handlers/use-auth.js\"\nimport SlackIcon from \"./SlackIcon\"\nimport GitHubButton from \"react-github-btn\"\n\nconst capitalize = (s) => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerButton: {\n    marginLeft: 16,\n  },\n  grow: { flexGrow: 1 },\n  list: {\n    width: 300,\n  },\n  tab: {\n    color: \"#000\",\n    \"& .icon\": {},\n  },\n  fullHeightTab: {\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: 20,\n    },\n  },\n  tabWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    textTransform: \"none\",\n    color: \"#000\",\n    \"&&& svg\": {\n      marginBottom: 0,\n      marginRight: 8,\n      width: 18,\n      height: 18,\n    },\n  },\n}))\n\nconst getIcon = (t) => {\n  switch (t) {\n    case \"Setup\":\n      return <SettingsIcon className=\"icon\" />\n    case \"Label\":\n      return <BorderColorIcon className=\"icon\" />\n    case \"Samples\":\n      return <StorageIcon className=\"icon\" />\n    default:\n      return <div></div>\n  }\n}\n\nconst HeaderToolbar = ({\n  tabs,\n  currentTab,\n  onChangeTab,\n  additionalButtons,\n  onOpenDrawer,\n  title = \"Universal Data Tool\",\n  isDesktop,\n  fileOpen,\n  sessionBoxOpen,\n  changeSessionBoxOpen,\n  inSession,\n  onCreateSession,\n  onLeaveSession,\n  onJoinSession,\n  onDownload,\n  selectedBrush,\n  onChangeSelectedBrush,\n  isSmall,\n  authConfig,\n  changeLoginDrawerOpen,\n  collaborateError,\n  isWelcomePage,\n}) => {\n  const c = useStyles()\n  const { authProvider, isLoggedIn, logout } = useAuth()\n\n  return (\n    <AppBar color=\"default\" position=\"static\">\n      <Toolbar variant=\"dense\">\n        {!isDesktop && (\n          <IconButton onClick={onOpenDrawer} className={c.headerButton}>\n            <MenuIcon />\n          </IconButton>\n        )}\n        {fileOpen ? title : \"Universal Data Tool v\" + packageJSON.version}\n        <CollaborateButton\n          sessionBoxOpen={sessionBoxOpen}\n          changeSessionBoxOpen={changeSessionBoxOpen}\n          fileOpen={fileOpen}\n          inSession={inSession}\n          onCreateSession={onCreateSession}\n          onLeaveSession={onLeaveSession}\n          onJoinSession={onJoinSession}\n          error={collaborateError}\n        />\n        {fileOpen && (\n          <BrushButton\n            selectedBrush={selectedBrush}\n            onChangeSelectedBrush={onChangeSelectedBrush}\n          />\n        )}\n        {!isDesktop && fileOpen && <DownloadButton onDownload={onDownload} />}\n        <div className={c.grow} />\n        {additionalButtons}\n        {tabs.length > 0 && (\n          <Tabs\n            onChange={(e, newTab) => onChangeTab(newTab.toLowerCase())}\n            value={currentTab}\n          >\n            {tabs.map((t) => (\n              <Tab\n                key={t}\n                classes={{ root: c.fullHeightTab, wrapper: c.tabWrapper }}\n                className={c.tab}\n                icon={getIcon(t)}\n                label={isSmall ? \"\" : t}\n                value={t.toLowerCase()}\n              />\n            ))}\n          </Tabs>\n        )}\n        {authProvider !== \"none\" && isWelcomePage && !isLoggedIn && (\n          <Button\n            onClick={() => {\n              changeLoginDrawerOpen(true)\n            }}\n            className={c.headerButton}\n          >\n            Login with {capitalize(authProvider)}\n          </Button>\n        )}\n        {isLoggedIn && (\n          <Button onClick={logout} className={c.headerButton}>\n            Logout\n          </Button>\n        )}\n        {!isSmall && !isWelcomePage && (\n          <IconButton\n            href=\"https://github.com/UniversalDataTool/universal-data-tool\"\n            className={c.headerButton}\n          >\n            <GithubIcon />\n          </IconButton>\n        )}\n        {!isSmall && isWelcomePage && (\n          <Box paddingTop=\"4px\" paddingLeft=\"8px\">\n            <GitHubButton\n              href=\"https://github.com/UniversalDataTool/universal-data-tool\"\n              data-icon=\"octicon-star\"\n              data-size=\"large\"\n              data-show-count=\"true\"\n              aria-label=\"Star UniversalDataTool/universal-data-tool on GitHub\"\n            >\n              Star\n            </GitHubButton>\n          </Box>\n        )}\n        {!isSmall && isWelcomePage && (\n          <IconButton\n            href=\"https://join.slack.com/t/universaldatatool/shared_invite/zt-d8teykwi-iOSOUfxugKR~M4AJN6VL3g\"\n            className={c.headerButton}\n          >\n            <SlackIcon />\n          </IconButton>\n        )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default memo(HeaderToolbar)\n","// @flow\nimport React from \"react\"\nimport ImageSearch from \"@material-ui/icons/ImageSearch\"\nimport Image from \"@material-ui/icons/Image\"\nimport CropFree from \"@material-ui/icons/CropFree\"\nimport TextFormat from \"@material-ui/icons/TextFormat\"\nimport Edit from \"@material-ui/icons/Edit\"\nimport Audiotrack from \"@material-ui/icons/Audiotrack\"\nimport Category from \"@material-ui/icons/Category\"\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\"\nimport OndemandVideoIcon from \"@material-ui/icons/OndemandVideo\"\nimport ContactSupport from \"@material-ui/icons/ContactSupport\"\nimport LowPriority from \"@material-ui/icons/LowPriority\"\n\nexport const templates = [\n  {\n    name: \"Empty\",\n    Icon: CropFree,\n    dataset: {\n      interface: {},\n      samples: [],\n    },\n  },\n  {\n    name: \"Image Segmentation\",\n    Icon: ImageSearch,\n    dataset: {\n      interface: {\n        type: \"image_segmentation\",\n        labels: [\"valid\", \"invalid\"],\n        regionTypesAllowed: [\n          \"bounding-box\",\n          \"polygon\",\n          // \"full-segmentation\",\n          \"point\",\n          // \"pixel-mask\"\n        ],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Image Classification\",\n    Icon: Image,\n    dataset: {\n      interface: {\n        type: \"image_classification\",\n        labels: [\"valid\", \"invalid\"],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Video Segmentation\",\n    Icon: OndemandVideoIcon,\n    dataset: {\n      interface: {\n        type: \"video_segmentation\",\n        labels: [\"valid\", \"invalid\"],\n        regionTypesAllowed: [\"bounding-box\", \"polygon\", \"point\"],\n      },\n      samples: [\n        {\n          videoUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/SampleVideo_1280x720_1mb.mp4\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Data Entry\",\n    Icon: Edit,\n    dataset: {\n      interface: {\n        type: \"data_entry\",\n        description: \"# Markdown description here\",\n        surveyjs: {\n          questions: [\n            {\n              type: \"text\",\n              name: \"document_title\",\n              title: \"Title of Document\",\n            },\n          ],\n        },\n      },\n      samples: [\n        {\n          pdfUrl: \"https://arxiv.org/pdf/1906.01969.pdf\",\n        },\n        {\n          pdfUrl: \"https://arxiv.org/pdf/1908.07069.pdf\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Named Entity Recognition\",\n    Icon: TextFormat,\n    dataset: {\n      interface: {\n        type: \"text_entity_recognition\",\n        overlapAllowed: false,\n        labels: [\n          {\n            id: \"food\",\n            displayName: \"Food\",\n            description: \"Edible item.\",\n          },\n          {\n            id: \"hat\",\n            displayName: \"Hat\",\n            description: \"Something worn on the head.\",\n          },\n        ],\n      },\n      samples: [\n        {\n          document:\n            \"This strainer makes a great hat, I'll wear it while I serve spaghetti!\",\n        },\n        {\n          document: \"Why are all these dumpings covered in butter?!\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Text Entity Relations\",\n    Icon: ({ ...props }) => (\n      <LowPriority\n        {...props}\n        style={{ ...props.style, transform: \"rotate(90deg)\" }}\n      />\n    ),\n    dataset: {\n      interface: {\n        type: \"text_entity_relations\",\n        entityLabels: [\n          {\n            id: \"food\",\n            displayName: \"Food\",\n            description: \"Edible item.\",\n          },\n          {\n            id: \"hat\",\n            displayName: \"Hat\",\n            description: \"Something worn on the head.\",\n          },\n        ],\n        relationLabels: [\n          {\n            id: \"subject\",\n            displayName: \"Subject\",\n          },\n        ],\n      },\n      samples: [\n        {\n          document:\n            \"This strainer makes a great hat, I'll wear it while I serve spaghetti!\",\n        },\n        {\n          document: \"Why are all these dumpings covered in butter?!\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Text Classification\",\n    Icon: ContactSupport,\n    dataset: {\n      interface: {\n        type: \"text_classification\",\n        labels: [\"positive_sentiment\", \"negative_sentiment\"],\n      },\n      samples: [\n        {\n          document: \"Wow this is terrible. I hated it.\",\n        },\n        {\n          document: \"This has made me so happy. I love this.\",\n        },\n        {\n          document:\n            \"At first I wasn't sure. Then I thought, oh it's not very good.\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Audio Transcription\",\n    Icon: Audiotrack,\n    dataset: {\n      interface: {\n        type: \"audio_transcription\",\n        description: \"# Markdown description here\",\n      },\n      samples: [\n        {\n          audioUrl: \"https://html5tutorial.info/media/vincent.mp3\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Composite\",\n    Icon: Category,\n    dataset: {\n      description: \"# Markdown description here\",\n      interface: {\n        type: \"composite\",\n        fields: [\n          {\n            fieldName: \"textInfo\",\n            interface: {\n              type: \"data_entry\",\n              surveyjs: {\n                questions: [\n                  {\n                    type: \"text\",\n                    name: \"group_letter\",\n                    title: \"Letter of Group\",\n                  },\n                ],\n              },\n            },\n          },\n          {\n            fieldName: \"segmentation\",\n            interface: {\n              type: \"image_segmentation\",\n              labels: [\"group text\"],\n              regionTypesAllowed: [\"bounding-box\"],\n            },\n          },\n        ],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Pixel Segmentation\",\n    Icon: ImageSearch,\n    dataset: {\n      interface: {\n        type: \"image_pixel_segmentation\",\n        labels: [\"hair\", \"mouth\", \"nose\", \"eyes\"],\n        description: \"These are AI-generated faces, not real people.\",\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010041.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010026.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010025.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"3D Bounding Box\",\n    Icon: ThreeDRotation,\n    dataset: {\n      interface: {\n        type: \"3d_bounding_box\",\n        description: \"3D Bounding Box\",\n      },\n      samples: [{}],\n    },\n  },\n]\n\nexport const templateMap = templates.reduce((acc, t) => {\n  acc[t.name] = t\n  acc[t.dataset.interface.type] = t\n  return acc\n}, {})\n\nexport default templates\n","//@flow weak\n\nimport React, { useCallback } from \"react\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport { useDropzone } from \"react-dropzone\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport { GoMarkGithub } from \"react-icons/go\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport HomeIcon from \"@material-ui/icons/Home\"\nimport { FaTrashAlt } from \"react-icons/fa\"\nimport templates from \"../StartingPage/templates\"\nimport * as colors from \"@material-ui/core/colors\"\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\"\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\"\nimport { useTranslation } from \"react-i18next\"\n\nconst useStyles = makeStyles({})\n\nexport default ({\n  recentItems,\n  changeRecentItems,\n  onClickHome,\n  onCloseDrawer,\n  drawerOpen,\n  onOpenFile,\n  onOpenRecentItem,\n  onClickTemplate,\n}) => {\n  const c = useStyles()\n  const { t } = useTranslation()\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      onOpenFile(acceptedFiles[0])\n    },\n    [onOpenFile]\n  )\n\n  function onDeleteFile(i) {\n    changeRecentItems(\n      recentItems.filter((oneRecentFile) => oneRecentFile.id !== i)\n    )\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n  return (\n    <Drawer open={drawerOpen} onClose={onCloseDrawer}>\n      <List className={c.list}>\n        <ListItem onClick={onClickHome} button>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>Home</ListItemText>\n        </ListItem>\n        <ListItem {...getRootProps()} button>\n          <ListItemIcon>\n            <NoteAddIcon />\n          </ListItemIcon>\n          <ListItemText>Open File</ListItemText>\n          <input {...getInputProps()} />\n        </ListItem>\n        <ListSubheader>Recent Files</ListSubheader>\n        {recentItems.length === 0 ? (\n          <ListItem>\n            <ListItemText\n              style={{ textAlign: \"center\", color: colors.grey[500] }}\n            >\n              {t(\"no-recent-items\")}\n            </ListItemText>\n          </ListItem>\n        ) : (\n          recentItems.map((ri, index) => (\n            <ListItem key={ri.fileName} button>\n              <ListItemIcon\n                onClick={() => {\n                  onOpenRecentItem(ri)\n                }}\n              >\n                <FileIcon />\n              </ListItemIcon>\n              <ListItemText\n                onClick={() => {\n                  onOpenRecentItem(ri)\n                }}\n              >\n                {ri.fileName}\n              </ListItemText>\n              <ListItemIcon\n                onClick={() => {\n                  onDeleteFile(ri.id)\n                }}\n              >\n                <FaTrashAlt />\n              </ListItemIcon>\n            </ListItem>\n          ))\n        )}\n        <ListSubheader>Create From Template</ListSubheader>\n        {templates.map((template) => (\n          <ListItem\n            button\n            key={template.name}\n            onClick={() => onClickTemplate(template)}\n          >\n            <ListItemIcon>\n              <template.Icon />\n            </ListItemIcon>\n            <ListItemText>{template.name}</ListItemText>\n          </ListItem>\n        ))}\n        <ListSubheader>{t(\"explore-more\")}</ListSubheader>\n        {/* <ListItem button>\n      <ListItemIcon>\n        <CodeIcon />\n      </ListItemIcon>\n      <ListItemText>Integrate</ListItemText>\n    </ListItem> */}\n        <ListItem\n          button\n          onClick={() => {\n            window.location.href =\n              \"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n          }}\n        >\n          <ListItemIcon>\n            <GoMarkGithub />\n          </ListItemIcon>\n          <ListItemText>Github</ListItemText>\n        </ListItem>\n      </List>\n    </Drawer>\n  )\n}\n","// @flow weak\n\nimport React, { useState, createContext, useContext, useCallback } from \"react\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\nimport LoginDrawer from \"../LoginDrawer\"\n\nimport HeaderToolbar from \"../HeaderToolbar\"\nimport HeaderDrawer from \"../HeaderDrawer\"\n\nexport const HeaderContext = createContext({\n  recentItems: [],\n  changeRecentItems: () => null,\n  onClickTemplate: () => null,\n  onClickHome: () => null,\n  onOpenFile: () => null,\n  onOpenRecentItem: () => null,\n  isDesktop: false,\n  inSession: false,\n  onJoinSession: () => null,\n  onCreateSession: () => null,\n  onLeaveSession: () => null,\n  sessionBoxOpen: false,\n  changeSessionBoxOpen: () => null,\n  fileOpen: false,\n  onDownload: () => null,\n  authConfig: null,\n  onUserChange: () => null,\n  user: null,\n  logoutUser: () => null,\n})\n\nconst emptyArray = []\n\nexport default ({\n  additionalButtons = emptyArray,\n  title,\n  currentTab,\n  onChangeTab,\n  tabs = emptyArray,\n}) => {\n  const [drawerOpen, changeDrawerOpen] = useState(false)\n  const [loginDrawerOpen, changeLoginDrawerOpen] = useState(false)\n  let headerContext = useContext(HeaderContext)\n  if (!headerContext.recentItems) headerContext.recentItems = []\n\n  const isSmall = useMediaQuery(\"(max-width: 800px)\")\n\n  const onOpenDrawer = useCallback(() => changeDrawerOpen(true), [])\n  const onCloseDrawer = useCallback(() => changeDrawerOpen(false), [])\n\n  return (\n    <>\n      <HeaderToolbar\n        tabs={tabs}\n        currentTab={currentTab}\n        onChangeTab={onChangeTab}\n        additionalButtons={additionalButtons}\n        onOpenDrawer={onOpenDrawer}\n        isSmall={isSmall}\n        {...headerContext}\n        changeLoginDrawerOpen={changeLoginDrawerOpen}\n        title={title}\n      />\n      <HeaderDrawer\n        drawerOpen={drawerOpen}\n        onCloseDrawer={onCloseDrawer}\n        onClickHome={headerContext.onClickHome}\n        recentItems={headerContext.recentItems}\n        changeRecentItems={headerContext.changeRecentItems}\n        onOpenFile={headerContext.onOpenFile}\n        onClickTemplate={headerContext.onClickTemplate}\n        onOpenRecentItem={headerContext.onOpenRecentItem}\n      />\n      <LoginDrawer\n        authConfig={headerContext.authConfig}\n        loginDrawerOpen={loginDrawerOpen}\n        onClose={() => changeLoginDrawerOpen(false)}\n        onUserChange={headerContext.onUserChange}\n        logoutUser={headerContext.logoutUser}\n      />\n    </>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport FullScreenIcon from \"@material-ui/icons/Fullscreen\"\nimport FullScreenExitIcon from \"@material-ui/icons/FullscreenExit\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Button from \"@material-ui/core/Button\"\nimport { grey, blue, red } from \"@material-ui/core/colors\"\nimport ReactMarkdown from \"react-markdown\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst StyledDialogTitle = styled(DialogTitle)({\n  backgroundColor: grey[100],\n  borderBottom: `1px solid ${grey[300]}`,\n  paddingBottom: 12,\n  boxShadow: \"0px 2px 3px rgba(0,0,0,0.05)\",\n})\nconst StyledDialogContent = styled(DialogContent)({\n  paddingTop: 16,\n})\nconst StyledDialogActions = styled(DialogActions)({\n  backgroundColor: grey[100],\n  borderTop: `1px solid ${grey[300]}`,\n})\n\nexport default ({\n  open = false,\n  title,\n  children,\n  markdownContent,\n  onClose,\n  red: redOn,\n  noActionBar = false,\n  actions = [],\n}) => {\n  const [fullScreen, changeFullScreen] = useState(false)\n  return (\n    <Dialog open={open} onClose={onClose} fullScreen={fullScreen}>\n      <StyledDialogTitle>\n        <Box display=\"flex\" alignItems=\"center\">\n          <span style={{ color: redOn ? red[700] : undefined }}>{title}</span>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton onClick={() => changeFullScreen(!fullScreen)}>\n            {fullScreen ? <FullScreenExitIcon /> : <FullScreenIcon />}\n          </IconButton>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </StyledDialogTitle>\n      <StyledDialogContent>\n        <Box maxWidth=\"90vw\" minWidth={400} lineHeight={1.5}>\n          {markdownContent ? (\n            <ReactMarkdown source={markdownContent} />\n          ) : (\n            children\n          )}\n        </Box>\n      </StyledDialogContent>\n      {!noActionBar && (\n        <StyledDialogActions>\n          <Button onClick={() => onClose()}>\n            <span style={{ color: grey[700], fontWeight: 500 }}>Close</span>\n          </Button>\n          {actions.map((action, i) => (\n            <Button disabled={action.disabled} key={i} onClick={action.onClick}>\n              <span\n                style={{\n                  color: redOn\n                    ? red[700]\n                    : action.disabled\n                    ? grey[400]\n                    : blue[700],\n                  fontWeight: 500,\n                }}\n              >\n                {action.text}\n              </span>\n            </Button>\n          ))}\n        </StyledDialogActions>\n      )}\n    </Dialog>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport templates from \"../StartingPage/templates\"\nimport SimpleDialog from \"../SimpleDialog\"\n\nconst useStyles = makeStyles({\n  bigButton: {\n    padding: 10,\n    width: 150,\n    height: 120,\n    border: \"1px solid #ccc\",\n    margin: 10,\n  },\n  bigIcon: {\n    width: 48,\n    height: 48,\n  },\n})\n\nexport default ({ open, onClose, onSelect }) => {\n  const c = useStyles()\n  return (\n    <SimpleDialog title=\"Create from Template\" open={open} onClose={onClose}>\n      {templates.map((template) => (\n        <Button\n          key={template.name}\n          onClick={() => onSelect(template)}\n          className={c.bigButton}\n        >\n          <div>\n            <div>{template.name}</div>\n            <div>\n              <template.Icon className={c.bigIcon} />\n            </div>\n          </div>\n        </Button>\n      ))}\n    </SimpleDialog>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst CognitoIcon = (props) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 75 75\">\n      <g id=\"Reference\">\n        <rect\n          id=\"Red_Light_BG\"\n          data-name=\"Red Light BG\"\n          style={{ fill: \"#d6242d\" }}\n          width=\"75\"\n          height=\"75\"\n        />\n        <g id=\"Product_Icon\" data-name=\"Product Icon\">\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M55,15H16.46a3.92,3.92,0,0,0-3.71,4.1v24.8A3.92,3.92,0,0,0,16.46,48H37.75V46H16.46a2,2,0,0,1-1.71-2.1V27h18V42a1,1,0,0,0,1,1h8V41H35.2V40.7a7.74,7.74,0,0,1,5.53-7.43,5.91,5.91,0,0,0,4.92,0,7.82,7.82,0,0,1,4.42,3.42l1.7-1v0a9.8,9.8,0,0,0-4.34-3.82,5.4,5.4,0,0,0,1.27-3.48,5.5,5.5,0,0,0-11,0A5.42,5.42,0,0,0,39,31.8a9.67,9.67,0,0,0-4.22,3.62V22h17v13.7h0V36h2V27h3V37h2l0-17.9A3.92,3.92,0,0,0,55,15ZM43.2,24.87a3.48,3.48,0,0,1,3.5,3.46,3.43,3.43,0,0,1-1.81,3,3.57,3.57,0,0,1-3.39,0,3.44,3.44,0,0,1-1.8-3A3.48,3.48,0,0,1,43.2,24.87ZM53.75,25V21a1,1,0,0,0-1-1h-19a1,1,0,0,0-1,1v4h-18v-5.9A2,2,0,0,1,16.46,17H55a2,2,0,0,1,1.73,2.1V25Z\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"16.77\"\n            y=\"31.95\"\n            width=\"10.98\"\n            height=\"2\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"16.77\"\n            y=\"36.95\"\n            width=\"6.98\"\n            height=\"2\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"25.77\"\n            y=\"36.95\"\n            width=\"2.98\"\n            height=\"2\"\n          />\n          <path style={{ fill: \"#fff\" }} d=\"M51.78,35.65h0v0Z\" />\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M52.14,60.05a10.11,10.11,0,1,1,1.22-20.14h0a10.12,10.12,0,0,1,6.46,16.61,10.47,10.47,0,0,1-3.37,2.57A10.19,10.19,0,0,1,52.14,60.05Zm0-18.22a8,8,0,0,0-3.69.9,8.11,8.11,0,0,0,7.16,14.55,8.2,8.2,0,0,0,2.71-2.07,8.11,8.11,0,0,0-5.19-13.32h0A8.22,8.22,0,0,0,52.12,41.83Z\"\n          />\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M50.55,54.2h0a1,1,0,0,1-.71-.29l-3.23-3.23L48,49.27l2.52,2.52,5.7-5.71,1.42,1.42-6.42,6.41A1,1,0,0,1,50.55,54.2Z\"\n          />\n          <path style={{ fill: \"#fff\" }} d=\"M51.78,35.65h0v0Z\" />\n        </g>\n      </g>\n    </SvgIcon>\n  )\n}\n\nexport default CognitoIcon\n","// @flow\nimport CognitoIcon from \"./cognito-icon.js\"\nimport SdStorageOutlinedIcon from \"@material-ui/icons/SdStorageOutlined\"\nimport AccountTreeIcon from \"@material-ui/icons/AccountTree\"\n\nexport default [\n  {\n    name: \"AWS - Cognito\",\n    provider: \"cognito\",\n    Icon: CognitoIcon,\n  },\n  {\n    name: \"AWS - S3 (IAM)\",\n    provider: \"s3iam\",\n    Icon: SdStorageOutlinedIcon,\n  },\n  {\n    name: \"Proxy\",\n    provider: \"proxy\",\n    Icon: AccountTreeIcon,\n  },\n]\n","// @flow\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { red } from \"@material-ui/core/colors\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Fade from \"@material-ui/core/Fade\"\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"center\",\n    pointerEvents: \"none\",\n  },\n  errorBox: {\n    display: \"flex\",\n    backgroundColor: red[700],\n    color: \"#fff\",\n    padding: 4,\n    marginBottom: 4,\n  },\n})\n\nexport default ({ errors }) => {\n  const c = useStyles()\n  return (\n    <div className={c.root}>\n      {errors.map((err) => (\n        <Collapse key={err.id} in={err.life < 5000}>\n          <Fade in={err.life > 500}>\n            <div className={c.errorBox}>{err.message}</div>\n          </Fade>\n        </Collapse>\n      ))}\n    </div>\n  )\n}\n","// @flow\n\nimport { useState, useEffect } from \"react\"\n\nconst REFRESH_INTERVAL = 100\n\nexport default () => {\n  const [errors, changeErrors] = useState([])\n  useEffect(() => {\n    if (errors.length === 0) return () => {}\n    let interval = setInterval(() => {\n      changeErrors(\n        errors\n          .map((err) => ({\n            ...err,\n            life: err.life - REFRESH_INTERVAL,\n          }))\n          .filter((err) => err.life > 0)\n      )\n    }, REFRESH_INTERVAL)\n    return () => clearInterval(interval)\n  }, [errors])\n\n  function addError(message: string) {\n    changeErrors(\n      errors.concat([\n        {\n          id: Math.random().toString().split(\".\")[1],\n          message,\n          life: 5000,\n        },\n      ])\n    )\n  }\n\n  return [errors, addError]\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport authTemplates from \"./authTemplates\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport isEmpty from \"lodash/isEmpty\"\nimport Survey from \"material-survey/components/Survey\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport Amplify from \"aws-amplify\"\nimport { useAppConfig } from \"../AppConfig\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst useStyles = makeStyles({\n  bigButton: {\n    padding: 10,\n    width: 150,\n    height: 120,\n    border: \"1px solid #ccc\",\n    margin: 10,\n  },\n  bigIcon: {\n    width: 48,\n    height: 48,\n  },\n  cognitoIcon: {\n    width: 48,\n    height: 48,\n  },\n  howToSetupText: {\n    padding: 16,\n    color: colors.grey[600],\n    \"& a\": {\n      color: colors.blue[500],\n      textDecoration: \"none\",\n    },\n  },\n})\n\nconst forms = {\n  cognito: {\n    questions: [\n      {\n        name: \"auth.cognito.identity_pool_id\",\n        title: \"Amazon Cognito Identity Pool ID\",\n        placeholder: \"XX-XXXX-X:XXXXXXXX-XXXX-1234-abcd-1234567890ab\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.region\",\n        title: \"AWS Region\",\n        placeholder: \"XX-XXXX-X\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.user_pool_id\",\n        title: \"Amazon Cognito User Pool ID\",\n        placeholder: \"XX-XXXX-X_12ab34cd9\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.user_pool_web_client_id\",\n        title: \"Amazon Cognito Web Client ID\",\n        placeholder: \"26-char alphanumeric string\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.storage.aws_s3.bucket\",\n        title: \"Bucket AWS\",\n        placeholder: \"Name of the bucket\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.storage.aws_s3.region\",\n        title: \"Region of the bucket\",\n        placeholder: \"XX-XXXX-X\",\n        type: \"text\",\n        isRequired: true,\n      },\n    ],\n  },\n  s3iam: {\n    questions: [\n      {\n        name: \"auth.s3iam.access_key_id\",\n        title: \"Access Key ID\",\n        placeholder: \"\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.s3iam.secret_access_key\",\n        title: \"Secret Access Key\",\n        placeholder: \"\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.s3iam.region\",\n        title: \"Region\",\n        placeholder: \"us-east-1\",\n        type: \"text\",\n        isRequired: true,\n      },\n    ],\n  },\n  proxy: {\n    questions: [\n      {\n        name: \"auth.proxy.corsproxy\",\n        type: \"text\",\n        title: \"CORS Proxy\",\n        description:\n          \"Some requests for images or APIs (like AWS S3) are blocked by browsers for security reasons, this CORs proxy will be used to enable blocked functionality when not using the desktop application.\",\n      },\n    ],\n  },\n}\n\nexport default ({ open, onClose, onSelect, onFinish, onAuthConfigured }) => {\n  const c = useStyles()\n  const [authProvider, setAuthProvider] = useState(null)\n  const [dialogTitle, setDialogTitle] = useState(\"Add Authentication\")\n  const [errors, addError] = useErrors()\n  const { appConfig, setAppConfig, fromConfig, setInConfig } = useAppConfig()\n\n  const getDefaultsFromConfig = (form) => {\n    const questionIds = form.questions.map((q) => q.name)\n    const defaults = {}\n    for (const questionId of questionIds) {\n      const configValue = fromConfig(questionId)\n      if (configValue !== undefined) {\n        defaults[questionId] = configValue\n      }\n    }\n    return defaults\n  }\n\n  // TODO useAppConfig to load in existing configuration\n\n  const validateAuthProvider = async (answers) => {\n    if (answers.provider === \"cognito\") {\n      const config = {\n        Auth: {\n          identityPoolId: answers[\"auth.cognito.identity_pool_id\"],\n          region: answers[\"auth.cognito.region\"],\n          userPoolId: answers[\"auth.cognito.user_pool_id\"],\n          userPoolWebClientId: answers[\"auth.cognito.user_pool_web_client_id\"],\n          mandatorySignIn: true,\n          authenticationFlowType: \"USER_PASSWORD_AUTH\",\n        },\n        Storage: {\n          AWSS3: {\n            bucket: answers[\"auth.cognito.storage.aws_s3.bucket\"],\n            region: answers[\"auth.cognito.storage.aws_s3.region\"],\n          },\n        },\n      }\n\n      try {\n        Amplify.configure(config)\n      } catch (err) {\n        addError(\"Invalid Cognito config: \" + err.toString())\n      }\n    }\n    setAppConfig({\n      ...appConfig,\n      ...answers,\n      \"auth.provider\": answers.provider,\n    })\n    // TODO some kind of success message\n    onClose()\n    setAuthProvider(null)\n  }\n\n  return (\n    <>\n      <SimpleDialog\n        title={dialogTitle}\n        open={open}\n        onClose={() => {\n          onClose()\n        }}\n        onFinish={onFinish}\n      >\n        {isEmpty(authProvider) &&\n          authTemplates.map((template, i) => (\n            <Button\n              key={template.name}\n              onClick={() => {\n                setAuthProvider(template.provider)\n                setDialogTitle(`Add Authentication for ${template.name}`)\n              }}\n              className={c.bigButton}\n            >\n              <div>\n                <div>{template.name}</div>\n                <div>\n                  <template.Icon className={c.cognitoIcon} />\n                </div>\n              </div>\n            </Button>\n          ))}\n        {authProvider === \"cognito\" && (\n          <div className={c.howToSetupText}>\n            Check this wiki{\" \"}\n            <a href=\"https://github.com/UniversalDataTool/universal-data-tool/wiki/Cognito---Amplify-Authentication-Setup-Instructions\">\n              guide for setting up AWS Cognito with the Universal Data Tool\n            </a>\n            .\n          </div>\n        )}\n        {!isEmpty(authProvider) && forms[authProvider] && (\n          <Survey\n            variant=\"flat\"\n            form={forms[authProvider]}\n            onQuestionChange={(questionId, newValue) => {\n              setInConfig(questionId, newValue)\n            }}\n            onFinish={(answers) => {\n              answers[\"provider\"] = authProvider\n              validateAuthProvider(answers)\n            }}\n            defaultAnswers={{\n              ...getDefaultsFromConfig(forms[authProvider]),\n              \"auth.provider\": fromConfig(\"auth.provider\"),\n            }}\n          />\n        )}\n        <ErrorToasts errors={errors} />\n      </SimpleDialog>\n    </>\n  )\n}\n","export default (url) => {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/\n  const match = url.match(regExp)\n\n  const id = match && match[2].length === 11 ? match[2] : null\n\n  if (!id) return null\n\n  return `https://youtube.com/embed/${id}`\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Header from \"../Header\"\nimport Button from \"@material-ui/core/Button\"\nimport templates from \"./templates\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useDropzone } from \"react-dropzone\"\nimport CreateFromTemplateDialog from \"../CreateFromTemplateDialog\"\nimport AddAuthFromTemplateDialog from \"../AddAuthFromTemplateDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport packageInfo from \"../../../package.json\"\nimport useEventCallback from \"use-event-callback\"\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\nimport Box from \"@material-ui/core/Box\"\nimport Select from \"react-select\"\nimport { useTranslation } from \"react-i18next\"\nimport getEmbedYoutubeUrl from \"./get-embed-youtube-url.js\"\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: colors.grey[900],\n    height: \"100vh\",\n  },\n  headerButton: {\n    fontSize: 12,\n    backgroundColor: \"#fff\",\n  },\n  downloadIcon: {\n    marginTop: 2,\n    width: 18,\n    height: 18,\n    marginRight: 4,\n    marginLeft: -6,\n    color: colors.grey[700],\n  },\n  languageSelectionWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n  },\n})\n\nconst ContentContainer = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexGrow: 1,\n  color: \"#fff\",\n  overflowY: \"scroll\",\n  padding: 100,\n  [theme.breakpoints.down(\"sm\")]: {\n    padding: 50,\n  },\n}))\nconst Content = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"calc(100% - 32px)\",\n  marginLeft: 16,\n  maxWidth: 1000,\n}))\n\nconst Title = styled(\"div\")({\n  marginTop: 20,\n  fontSize: 36,\n  fontWeight: 600,\n  color: colors.grey[300],\n})\n\nconst languageSelectionFormStyle = {\n  control: (base, state) => ({\n    ...base,\n    border: \"1px solid #9e9e9e\",\n    background: \"transparent\",\n    color: \"#e0e0e0\",\n  }),\n  menuList: (base) => ({\n    ...base,\n    padding: 0,\n    margin: 0,\n    color: \"black\",\n  }),\n  singleValue: (base) => ({\n    ...base,\n    color: \"white\",\n  }),\n}\n\nconst Subtitle = styled(\"div\")({\n  fontSize: 18,\n  // fontWeight: \"bold\",\n  marginTop: 8,\n  color: colors.grey[500],\n})\nconst ActionList = styled(\"div\")({ marginTop: 48 })\nconst Action = styled(\"a\")({\n  display: \"block\",\n  color: colors.blue[500],\n  marginTop: 4,\n  cursor: \"pointer\",\n  textDecoration: \"none\",\n})\nconst ActionTitle = styled(\"div\")({\n  // fontWeight: \"bold\",\n  fontSize: 24,\n  marginBottom: 8,\n  color: colors.grey[500],\n})\nconst ActionText = styled(\"div\")({\n  color: colors.grey[300],\n  \"& a\": {\n    cursor: \"pointer\",\n    color: colors.blue[500],\n    textDecoration: \"none\",\n  },\n})\nconst Actionless = styled(\"div\")({\n  color: colors.grey[600],\n  paddingTop: 16,\n})\n\nconst BottomSpacer = styled(\"div\")({ height: 100 })\n\nconst languageOptions = [\n  { label: \"English\", value: \"en\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Chinese\", value: \"cn\" },\n]\n\nexport default ({\n  onFileDrop,\n  onOpenTemplate,\n  showDownloadLink = true,\n  recentItems = [],\n  onOpenRecentItem,\n  onClickOpenSession,\n}) => {\n  const c = useStyles()\n  const posthog = usePosthog()\n\n  // internalization hook\n  const { t, i18n } = useTranslation()\n\n  //const isDesktop = useIsDesktop()\n  const [newVersionAvailable, changeNewVersionAvailable] = useState(false)\n  useEffect(() => {\n    // if (!isDesktop) return\n    async function checkNewVersion() {\n      const newPackage = await fetch(\n        \"https://raw.githubusercontent.com/UniversalDataTool/universal-data-tool/master/package.json\"\n      ).then((r) => r.json())\n      if (newPackage.version !== packageInfo.version) {\n        changeNewVersionAvailable(newPackage.version)\n      }\n    }\n    checkNewVersion()\n  }, [])\n\n  const [latestCommunityUpdate, setLatestCommunityUpdate] = useState(null)\n  useEffect(() => {\n    async function getLatestREADME() {\n      const readme = await fetch(\n        \"https://raw.githubusercontent.com/UniversalDataTool/universal-data-tool/master/README.md\"\n      ).then((r) => r.text())\n      const startCU = readme.search(\"COMMUNITY-UPDATE:START\")\n      const endCU = readme.search(\"COMMUNITY-UPDATE:END\")\n      const communityUpdates = readme\n        .slice(startCU, endCU)\n        .split(\"\\n\")\n        .slice(1, -1)\n      const latestYtLink = communityUpdates[0].match(/\\((.*)\\)/)[1]\n      setLatestCommunityUpdate({\n        name: communityUpdates[0].match(/\\[(.*)\\]/)[1],\n        ytLink: latestYtLink,\n        embedYTLink: getEmbedYoutubeUrl(latestYtLink),\n      })\n    }\n    getLatestREADME()\n  }, [])\n\n  const [\n    createFromTemplateDialogOpen,\n    changeCreateFromTemplateDialogOpen,\n  ] = useState(false)\n  const [addAuthFromDialogOpen, changeAddAuthFromDialogOpen] = useState(false)\n  const onDrop = useEventCallback((acceptedFiles) => {\n    onFileDrop(acceptedFiles[0])\n  })\n\n  const changeLanguage = (language) => {\n    i18n.changeLanguage(language)\n  }\n\n  let { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n  return (\n    <div className={c.container}>\n      <CreateFromTemplateDialog\n        open={createFromTemplateDialogOpen}\n        onSelect={(template) => {\n          posthog.capture(\"template_clicked\", {\n            clicked_template: template.name,\n          })\n          onOpenTemplate(template)\n        }}\n        onClose={() => changeCreateFromTemplateDialogOpen(false)}\n      />\n      <AddAuthFromTemplateDialog\n        open={addAuthFromDialogOpen}\n        onSelect={(template) => onOpenTemplate(template)}\n        onClose={() => changeAddAuthFromDialogOpen(false)}\n      />\n      <Header\n        additionalButtons={[\n          newVersionAvailable && (\n            <Button\n              variant=\"outlined\"\n              key=\"download-latest\"\n              className={c.headerButton}\n              href=\"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n            >\n              <DownloadIcon className={c.downloadIcon} />\n              {t(\"Download Version\")} v{newVersionAvailable}\n            </Button>\n          ),\n          !newVersionAvailable && showDownloadLink && (\n            <Button\n              variant=\"outlined\"\n              key=\"download\"\n              href=\"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n              className={c.headerButton}\n            >\n              <DownloadIcon className={c.downloadIcon} />\n              {t(\"download\")}\n            </Button>\n          ),\n        ].filter(Boolean)}\n      />\n      <ContentContainer>\n        <Content>\n          <Grid container>\n            <Grid xs={6} item>\n              <Title>Universal Data Tool</Title>\n              <Subtitle>{t(\"universaldatatool-description\")}</Subtitle>\n            </Grid>\n            <Grid xs={6}>\n              <Box display=\"flex\" justifyContent=\"flex-end\" paddingTop={3}>\n                <Box\n                  width=\"100%\"\n                  maxWidth={200}\n                  className={c.languageSelectionWrapper}\n                >\n                  <Select\n                    styles={languageSelectionFormStyle}\n                    defaultValue={languageOptions[0]}\n                    options={languageOptions}\n                    onChange={({ value }) => changeLanguage(value)}\n                  />\n                </Box>\n              </Box>\n            </Grid>\n            <Grid xs={6} item>\n              <ActionList>\n                <ActionTitle>Start</ActionTitle>\n                <Action\n                  onClick={() => {\n                    posthog.capture(\"template_clicked\", {\n                      clicked_template: \"empty\",\n                    })\n                    onOpenTemplate(templates.find((t) => t.name === \"Empty\"))\n                  }}\n                >\n                  {t(\"new-file\")}\n                </Action>\n                <Action\n                  onClick={() => changeCreateFromTemplateDialogOpen(true)}\n                >\n                  {t(\"start-from-template\")}\n                </Action>\n                <Action {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  {t(\"open-file\")}\n                </Action>\n                {onClickOpenSession && (\n                  <Action onClick={onClickOpenSession}>\n                    {t(\"open-collaborative-session\")}\n                  </Action>\n                )}\n                <Action onClick={() => changeAddAuthFromDialogOpen(true)}>\n                  {t(\"add-authentication\")}\n                </Action>\n                <Action\n                  onClick={() => {\n                    window.location.href =\n                      \"https://universaldatatool.com/courses\"\n                  }}\n                >\n                  Create a Training Course\n                </Action>\n                {/* <Action>Open Folder</Action> */}\n              </ActionList>\n              <ActionList>\n                <ActionTitle>Recent</ActionTitle>\n                {recentItems.length === 0 ? (\n                  <Actionless>{t(\"no-recent-files\")}</Actionless>\n                ) : (\n                  recentItems.map((ri, i) => (\n                    <Action key={i} onClick={() => onOpenRecentItem(ri)}>\n                      {ri.fileName}\n                    </Action>\n                  ))\n                )}\n              </ActionList>\n              <ActionList>\n                <ActionTitle>Help</ActionTitle>\n                <Action href=\"https://github.com/UniversalDataTool/universal-data-tool/releases\">\n                  {t(\"downloading-and-installing-udt\")}\n                </Action>\n                <Action href=\"https://dev.to/seveibar/make-bounding-boxes-for-artificial-intelligence-with-udt-1kai\">\n                  {t(\"labeling-images\")}\n                </Action>\n                {/* <Action>Custom Data Entry</Action> */}\n                <Action href=\"https://github.com/UniversalDataTool/universal-data-tool\">\n                  Github Repository\n                </Action>\n                <Action href=\"https://www.youtube.com/channel/UCgFkrRN7CLt7_iTa2WDjf2g\">\n                  Youtube Channel\n                </Action>\n\n                {/* <Action href=\"#\">\n                  How to Collaborate in Real-Time with UDT\n                </Action> */}\n              </ActionList>\n            </Grid>\n            <Grid xs={6} item>\n              <ActionList>\n                <ActionTitle>About</ActionTitle>\n                <ActionText>\n                  {t(\"start-page-about-first-paragraph\")}\n                  <br />\n                  <br />\n                  {t(\"start-page-about-second-paragraph\")}\n                  <br />\n                  <br />\n                  {t(\"the-udt-uses-an\")}{\" \"}\n                  <a href=\"https://github.com/UniversalDataTool/udt-format\">\n                    open-source data format (.udt.json / .udt.csv)\n                  </a>{\" \"}\n                  {t(\"start-page-about-third-paragraph\")}\n                  <br />\n                  <br />\n                </ActionText>\n              </ActionList>\n              <ActionList>\n                {latestCommunityUpdate && (\n                  <>\n                    <ActionTitle>{latestCommunityUpdate.name}</ActionTitle>\n                    <iframe\n                      title={latestCommunityUpdate.name}\n                      width=\"320\"\n                      height=\"178\"\n                      // src=\"https://www.youtube.com/embed/QW-s4XVK3Ok\"\n                      src={latestCommunityUpdate.embedYTLink}\n                      frameborder=\"0\"\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                      allowfullscreen=\"true\"\n                    ></iframe>\n                  </>\n                )}\n                {/* <ActionText>\n                  <Action\n                    style={{ display: \"inline\" }}\n                    onClick={() => changeCreateFromTemplateDialogOpen(true)}\n                  >\n                    {t(\"open-a-template\")}\n                  </Action>{\" \"}\n                  {t(\"to-see-how-the-udt-could-work-for-your-data\")}\n                </ActionText> */}\n              </ActionList>\n            </Grid>\n            <Grid xs={12} item>\n              <BottomSpacer />\n            </Grid>\n          </Grid>\n        </Content>\n      </ContentContainer>\n    </div>\n  )\n}\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport isEmpty from \"lodash/isEmpty\"\n\nconst useStyles = makeStyles({\n  textField: {\n    marginLeft: 8,\n  },\n})\n\nconst SAVE_WAIT = 2000\n\nexport default ({ value, onChange }) => {\n  const c = useStyles()\n  const [{ editing, newValue }, changeEditing] = useState({\n    editing: false,\n    newValue: value || \"\",\n  })\n\n  useEffect(() => {\n    if (!isEmpty(newValue) && newValue !== \"unnamed\") {\n      changeEditing({ editing, newValue: newValue })\n    } else {\n      changeEditing({ editing, newValue: value })\n    }\n  }, [newValue, editing, value])\n\n  useEffect(() => {\n    if (!editing) return\n    let listener = (e) => {\n      if (e.key === \"Enter\") {\n        onChange(newValue)\n        changeEditing({ editing: false })\n      }\n    }\n    window.addEventListener(\"keydown\", listener)\n    return () => {\n      window.removeEventListener(\"keydown\", listener)\n    }\n  }, [editing, newValue, onChange])\n\n  useEffect(() => {\n    if (!newValue) return\n    if (editing) {\n      let timeout = setTimeout(\n        () => {\n          onChange(newValue)\n          changeEditing({ editing: false })\n        },\n        value === newValue ? SAVE_WAIT * 5 : SAVE_WAIT\n      )\n\n      return () => clearTimeout(timeout)\n    } else {\n      return () => {}\n    }\n  }, [editing, newValue, value, onChange])\n\n  return (\n    <TextField\n      className={c.textField}\n      label=\"File Name\"\n      variant=\"outlined\"\n      size=\"small\"\n      InputProps={{\n        inputProps: { style: { color: \"#000\" } },\n      }}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          e.preventDefault()\n          e.stopPropagation()\n          e.target.blur()\n        }\n      }}\n      onKeyPress={(e) => {\n        e.stopPropagation()\n      }}\n      onChange={(e) => {\n        changeEditing({\n          editing: true,\n          newValue: e.target.value,\n        })\n      }}\n      value={newValue || \"\"}\n    />\n  )\n}\n","// @flow weak\n\nimport React, { memo, useCallback, useReducer, useEffect } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport { useLocalStorage } from \"react-use\"\nimport { styled } from \"@material-ui/core/styles\"\nimport range from \"lodash/range\"\nimport * as colors from \"@material-ui/core/colors\"\nimport classNames from \"classnames\"\nimport TablePagination from \"@material-ui/core/TablePagination\"\nimport Box from \"@material-ui/core/Box\"\nimport getBrushColorPalette from \"../../utils/get-brush-color-palette\"\n\nconst Container = styled(\"div\")({\n  flexWrap: \"wrap\",\n  height: \"100%\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\nconst EmptyState = styled(\"div\")({\n  fontSize: 24,\n  color: colors.grey[500],\n  padding: 30,\n  textAlign: \"center\",\n})\nconst SampleDiv = styled(\"div\")(({ color }) => ({\n  color: \"#fff\",\n  fontVariantNumeric: \"tabular-nums\",\n  margin: 4,\n  padding: 4,\n  backgroundColor: color[500],\n  display: \"inline-flex\",\n  fontSize: 14,\n  fontWeight: 500,\n  textAlign: \"center\",\n  justifyContent: \"center\",\n  minWidth: \"3em\",\n  borderRadius: 3,\n  cursor: \"pointer\",\n  userSelect: \"none\",\n  transition:\n    \"box-shadow 200ms ease, transform 200ms ease, background-color 200ms ease\",\n  \"&:hover\": {\n    backgroundColor: color[700],\n  },\n  // color: color.isFaded ? \"#000\" : \"#fff\",\n  \"&.selected\": {\n    backgroundColor: color[700],\n    boxShadow: `0px 0px 2px 1px ${color[\"A200\"]}`,\n    transform: \"scale(1.05,1.05)\",\n  },\n}))\n\nconst Sample = memo(\n  ({\n    index,\n    onClick,\n    completed,\n    selected,\n    onMouseDown,\n    onMouseUp,\n    onMouseEnter,\n    brush,\n  }) => {\n    return (\n      <SampleDiv\n        className={classNames({ completed, selected })}\n        onClick={() => onClick(index)}\n        onMouseDown={() => onMouseDown(index)}\n        onMouseUp={() => onMouseUp(index)}\n        onMouseEnter={() => onMouseEnter(index)}\n        color={getBrushColorPalette(brush)}\n      >\n        {index}\n      </SampleDiv>\n    )\n  },\n  function (p, n) {\n    return (\n      p.index === n.index &&\n      p.completed === n.completed &&\n      p.selected === n.selected &&\n      p.brush === n.brush\n    )\n  }\n)\n\nexport default ({\n  count,\n  completed = [],\n  samples,\n  onClick,\n  tablePaginationPadding = 0,\n}) => {\n  const [samplesPerPage, changeSamplesPerPage] = useLocalStorage(\n    \"samplesPerPage\",\n    100\n  )\n  const [sampleOffset, changeSampleOffset] = useLocalStorage(\"sampleOffset\", 0)\n\n  useEffect(() => {\n    if (sampleOffset > count) {\n      changeSampleOffset(0)\n    }\n  }, [changeSampleOffset, sampleOffset, count])\n\n  const [selectRange, changeSelectRange] = useReducer((state, newValue) => {\n    if (newValue === null) return null\n    if (typeof newValue === \"number\") {\n      if (!state) return null\n      return [Math.min(newValue, state[0]), Math.max(newValue + 1, state[1])]\n    }\n    return newValue\n  }, null)\n\n  const startSelectRange = useCallback(\n    (index) => changeSelectRange([index, index + 1]),\n    [changeSelectRange]\n  )\n  const moveSelectRange = useCallback((index) => changeSelectRange(index), [\n    changeSelectRange,\n  ])\n  const endSelectRange = useCallback(() => {}, [])\n  const checkAndNullifySelectRange = useCallback(\n    (e) => {\n      if (e.buttons !== 1) {\n        changeSelectRange(null)\n      }\n    },\n    [changeSelectRange]\n  )\n  const onClickMemo = useEventCallback(onClick)\n\n  return (\n    <Container\n      onMouseUp={checkAndNullifySelectRange}\n      onMouseEnter={checkAndNullifySelectRange}\n    >\n      {count === 0 && (\n        <EmptyState>\n          No samples, try using \"Import Toy Dataset\" in Samples > Import\n        </EmptyState>\n      )}\n      <Box flexGrow={1}>\n        {range(\n          sampleOffset,\n          Math.min(count, sampleOffset + samplesPerPage)\n        ).map((i) => (\n          <Sample\n            onClick={onClickMemo}\n            key={i}\n            index={i}\n            completed={completed[i]}\n            brush={completed[i] ? samples[i].brush || \"complete\" : \"incomplete\"}\n            selected={selectRange && i >= selectRange[0] && i < selectRange[1]}\n            onMouseDown={startSelectRange}\n            onMouseEnter={moveSelectRange}\n            onMouseUp={endSelectRange}\n          />\n        ))}\n        {sampleOffset + samplesPerPage < count && (\n          <>\n            {range(3).map((i) => (\n              <Sample\n                onClick={() => {\n                  changeSampleOffset(sampleOffset + samplesPerPage)\n                }}\n                key={sampleOffset + samplesPerPage + i}\n                selected={false}\n                brush={`ellipsis${i + 1}`}\n                index={sampleOffset + samplesPerPage + i}\n                completed={false}\n                onMouseEnter={() => {}}\n                onMouseDown={() => {}}\n                onMouseUp={() => {}}\n              />\n            ))}\n            <Box textAlign=\"center\" marginTop=\"16px\" color={colors.grey[700]}>\n              More Samples on Next Page\n            </Box>\n          </>\n        )}\n      </Box>\n      <Box paddingRight={tablePaginationPadding}>\n        <TablePagination\n          rowsPerPageOptions={[100, 250, 500, 1000, 2000, 10000]}\n          component=\"div\"\n          count={count}\n          rowsPerPage={samplesPerPage}\n          page={Math.floor(sampleOffset / samplesPerPage)}\n          labelRowsPerPage=\"Samples per Page:\"\n          onChangePage={(e, newPage) =>\n            changeSampleOffset(newPage * samplesPerPage)\n          }\n          onChangeRowsPerPage={(e) => {\n            changeSampleOffset(0)\n            changeSamplesPerPage(+e.target.value)\n          }}\n        />\n      </Box>\n    </Container>\n  )\n}\n","export default (s, opts = {}) => {\n  console.log(s)\n  let extension = s.replace(/\\?.*/g, \"\").split(\".\").slice(-1)[0]\n  if (s.includes(\"gstatic.com/images\")) {\n    extension = \"jpg\"\n  }\n  switch (extension.toLowerCase()) {\n    case \"png\":\n    case \"jpg\":\n    case \"gif\":\n    case \"jpeg\":\n    case \"bmp\": {\n      return { imageUrl: s }\n    }\n    case \"pdf\": {\n      return { pdfUrl: s }\n    }\n    case \"mp3\":\n    case \"wav\": {\n      return { audioUrl: s }\n    }\n    default: {\n      if (opts.returnNulls) return null\n      throw new Error(`extension not recognized: \"${extension}\" in \"${s}\"`)\n      // TODO if the user doesn't care, return null (this\n      // behavior could be enabled with textfield option)\n    }\n  }\n}\n","// @flow weak\nimport React, { useState } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Select from \"react-select\"\nimport * as colors from \"@material-ui/core/colors\"\nimport getSampleFromUrl from \"./get-sample-from-url\"\n\nconst SelectContainer = styled(\"div\")({\n  marginTop: 8,\n  marginBottom: 16,\n})\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\nconst ErrorText = styled(\"div\")({\n  color: colors.red[600],\n  padding: 16,\n})\n\nconst autoDetectOptions = [\n  {\n    label: \"Auto Detect File Type\",\n    value: \"auto_detect\",\n  },\n  {\n    label: \"Image URLs\",\n    value: \"images\",\n  },\n]\n\nexport default ({ open, onClose, onAddSamples }) => {\n  const [content, changeContent] = useState(\"\")\n  const [urlType, changeURLType] = useState(\"auto_detect\")\n  const [error, setError] = useState(\"\")\n  return (\n    <SimpleDialog\n      title=\"Paste Urls\"\n      open={open}\n      onClose={onClose}\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            try {\n              onAddSamples(\n                content\n                  .split(\"\\n\")\n                  .map((l) => l.trim())\n                  .filter(Boolean)\n                  .map((s) =>\n                    urlType === \"images\"\n                      ? { imageUrl: s }\n                      : getSampleFromUrl(s, { returnNulls: true })\n                  )\n                  .filter(Boolean)\n              )\n            } catch (e) {\n              setError(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      <SelectContainer>\n        <Select\n          options={autoDetectOptions}\n          defaultValue={autoDetectOptions[0]}\n          onChange={(opt) => {\n            changeURLType(opt.value)\n          }}\n        />\n      </SelectContainer>\n      {error && <ErrorText>{error}</ErrorText>}\n      <TextArea\n        onChange={(e, v) => changeContent(e.target.value)}\n        placeholder={\"Paste URLs here\\nOne URL per line\"}\n      />\n    </SimpleDialog>\n  )\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (sample) => {\n  var sampleName\n  if (!isEmpty(sample)) {\n    if (!isEmpty(sample.imageUrl)) {\n      sampleName = decodeURI(sample.imageUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.videoUrl)) {\n      sampleName = decodeURI(sample.videoUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.audioUrl)) {\n      sampleName = decodeURI(sample.audioUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.pdfUrl)) {\n      sampleName = decodeURI(sample.pdfUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n  }\n  return sampleName\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (UrlOfAFile) => {\n  var typeOfFile = \"File\"\n  var fileExtension = UrlOfAFile.match(\n    `\\\\/?([^\\\\/\\\\\\\\&\\\\?]*\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n  )\n  if (!isEmpty(fileExtension)) {\n    fileExtension = fileExtension[2].toLowerCase()\n  }\n  if (\n    fileExtension === \"jpg\" ||\n    fileExtension === \"jpeg\" ||\n    fileExtension === \"png\" ||\n    fileExtension === \"ico\" ||\n    fileExtension === \"jpe\" ||\n    fileExtension === \"gif\"\n  )\n    typeOfFile = \"Image\"\n  if (fileExtension === \"mp4\" || fileExtension === \"mkv\") typeOfFile = \"Video\"\n  if (fileExtension === \"mp3\") typeOfFile = \"Audio\"\n  if (fileExtension === \"pdf\") typeOfFile = \"PDF\"\n  if (fileExtension === \"txt\") typeOfFile = \"Texte\"\n  return typeOfFile\n}\n","import isEmpty from \"lodash/isEmpty\"\n\nexport default (objectOfRef, objectToCheck) => {\n  var resultSet = {\n    fileName: false,\n    content: {\n      interface: {\n        type: false,\n        labels: false,\n        regionTypesAllowed: false,\n      },\n      samples: false,\n    },\n    id: false,\n    mode: false,\n    any: false,\n  }\n  // Check if the object to check exist if not return false\n  if (isEmpty(objectToCheck)) return resultSet\n\n  // Check if the object of reference exist if not return true\n  if (isEmpty(objectOfRef)) {\n    resultSet.fileName = true\n    resultSet.content.interface.type = true\n    resultSet.content.interface.labels = true\n    resultSet.content.interface.regionTypesAllowed = true\n    resultSet.content.samples = true\n    resultSet.id = true\n    resultSet.mode = true\n    resultSet.any = true\n    return resultSet\n  }\n\n  if (objectOfRef !== objectToCheck) {\n    resultSet.any = true\n  } else {\n    return resultSet\n  }\n\n  // Check if the id doesn't exist or have change\n  if (!isEmpty(objectToCheck.id)) {\n    if (isEmpty(objectOfRef.id)) resultSet.id = true\n    else if (objectToCheck.id !== objectOfRef.id) resultSet.id = true\n  }\n\n  // Check if the content doesn't exist or have change\n  if (!isEmpty(objectToCheck.content)) {\n    if (isEmpty(objectOfRef.content)) {\n      resultSet.content.interface.type = true\n      resultSet.content.interface.labels = true\n      resultSet.content.interface.regionTypesAllowed = true\n      resultSet.content.samples = true\n    } else if (objectToCheck.content !== objectOfRef.content) {\n      //Check if the interface doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.interface)) {\n        if (isEmpty(objectOfRef.content.interface)) {\n          resultSet.content.interface.type = true\n          resultSet.content.interface.labels = true\n          resultSet.content.interface.regionTypesAllowed = true\n        } else if (\n          objectToCheck.content.interface !== objectOfRef.content.interface\n        ) {\n          //Check if the type doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.type)) {\n            if (isEmpty(objectOfRef.content.interface.type)) {\n              resultSet.content.interface.type = true\n            } else if (\n              objectToCheck.content.interface.type !==\n              objectOfRef.content.interface.type\n            ) {\n              resultSet.content.interface.type = true\n            }\n          }\n          //Check if the labels doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.labels)) {\n            if (isEmpty(objectOfRef.content.interface.labels)) {\n              resultSet.content.interface.labels = true\n            } else if (\n              objectToCheck.content.interface.labels !==\n              objectOfRef.content.interface.labels\n            ) {\n              resultSet.content.interface.labels = true\n            }\n          }\n          //Check if the regionsTypesAllowed doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.regionTypesAllowed)) {\n            if (isEmpty(objectOfRef.content.interface.regionTypesAllowed)) {\n              resultSet.content.interface.regionTypesAllowed = true\n            } else if (\n              objectToCheck.content.interface.regionTypesAllowed !==\n              objectOfRef.content.interface.regionTypesAllowed\n            ) {\n              resultSet.content.interface.regionTypesAllowed = true\n            }\n          }\n        }\n      }\n      //Check if the samples doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.samples)) {\n        if (isEmpty(objectOfRef.content.samples)) {\n          resultSet.content.samples = true\n        } else if (\n          objectToCheck.content.samples !== objectOfRef.content.samples\n        ) {\n          resultSet.content.samples = true\n        }\n      }\n    }\n  }\n\n  // Check if the mode doesn't exist or have change\n  if (!isEmpty(objectToCheck.mode)) {\n    if (isEmpty(objectOfRef.mode)) resultSet.mode = true\n    else if (objectToCheck.mode !== objectOfRef.mode) resultSet.mode = true\n  }\n\n  // Check if the fileName doesn't exist or have change\n  if (!isEmpty(objectToCheck.fileName)) {\n    if (isEmpty(objectOfRef.fileName)) resultSet.fileName = true\n    else if (objectToCheck.fileName !== objectOfRef.fileName)\n      resultSet.fileName = true\n  }\n  console.log({ resultSet })\n  //Default behavior return false\n  return resultSet\n}\n","// @flow weak\n\nimport getSampleNameFromURL from \"../get-sample-name-from-url\"\nimport RecognizeFileExtension from \"../RecognizeFileExtension\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { setIn } from \"seamless-immutable\"\nimport getFilesDifferencesImport from \"./get-files-differences.js\"\n\nexport const getFilesDifferences = getFilesDifferencesImport\n\nexport const getSampleName = (sample) => {\n  var sampleName\n  if (!isEmpty(sample.sampleName)) {\n    sampleName = sample.sampleName\n  } else {\n    sampleName = getSampleNameFromURL(sample)[1]\n  }\n  return sampleName\n}\n\nexport const getSampleUrl = (sample) => {\n  return (\n    sample.imageUrl ||\n    sample.videoUrl ||\n    sample.audioUrl ||\n    sample.pdfUrl ||\n    undefined\n  )\n}\n\nexport const constructSample = (sampleName, url, annotation) => {\n  var type = RecognizeFileExtension(url)\n  if (type === \"Image\") {\n    return {\n      annotation: annotation,\n      imageUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"Video\") {\n    return {\n      annotation: annotation,\n      videoUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"Audio\") {\n    return {\n      annotation: annotation,\n      audioUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"PDF\") {\n    return {\n      annotation: annotation,\n      pdfUrl: url,\n      sampleName: sampleName,\n    }\n  }\n}\nexport const createOneNewSample = constructSample\n\nexport const getSampleWithName = (dataset, sampleName) => {\n  if (!dataset || !dataset.samples || !sampleName) return null\n  const { samples } = dataset\n  for (var i = 0; i < samples.length; i++) {\n    if (!isEmpty(samples[i])) {\n      const nameToSearch = getSampleNameFromURL(samples[i])\n      if (typeof samples[i].sampleName !== \"undefined\") {\n        nameToSearch[1] = samples[i].sampleName\n      }\n      if (nameToSearch[1] === sampleName) {\n        return samples[i]\n      }\n    }\n  }\n  return null\n}\nexport const getSampleWithThisSampleName = getSampleWithName\n\nexport const addNamesToSamples = (dataset) => {\n  if (!dataset || !dataset.samples) return\n  for (var i = 0; i < dataset.samples.length; i++) {\n    if (isEmpty(dataset.samples[i])) continue\n    var oldsample = dataset.samples[i]\n    var sampleName\n    if (!isEmpty(oldsample.document)) {\n      // Deal with the exception of the text file (they don't have url)\n      sampleName = [\n        oldsample.document,\n        \"sample\" + i.toString() + \".txt\",\n        \"sample\",\n        \"txt\",\n      ]\n    } else {\n      sampleName = getSampleNameFromURL(oldsample)\n      sampleName = renameSampleFromUrl(dataset.samples, oldsample, sampleName)\n    }\n    oldsample = setIn(oldsample, [\"sampleName\"], sampleName[1])\n    dataset = setIn(dataset, [\"samples\", i], oldsample)\n  }\n  return dataset\n}\nexport const setSamplesName = addNamesToSamples\n\nexport const renameSampleFromUrl = (samples, sampleToChange, sampleName) => {\n  var boolName = true\n  var v = 1\n  while (boolName) {\n    var sampletocompare1 = getSampleWithThisSampleName(sampleName[1], samples)\n    if (\n      sampletocompare1 !== null &&\n      getSampleUrl(sampletocompare1) !== getSampleUrl(sampleToChange)\n    ) {\n      if (isEmpty(sampleName[2].match(\"(.*)\\\\([0-9]*\\\\)$\"))) {\n        sampleName[1] =\n          sampleName[2] + \"(\" + v.toString() + \").\" + sampleName[3]\n      } else {\n        sampleName[1] =\n          sampleName[2].match(\"(.*)\\\\([0-9]*\\\\)$\")[1] +\n          \"(\" +\n          v.toString() +\n          \")\" +\n          +\".\" +\n          sampleName[3]\n      }\n      v++\n    } else {\n      boolName = false\n    }\n  }\n  return sampleName\n}\n\nexport const eraseAnnotation = (samples) => {\n  var samplesWithoutAnnotation = []\n  for (let i = 0; i < samples.length; i++) {\n    let Newsample = samples[i]\n    if (!isEmpty(Newsample.annotation)) {\n      Newsample = setIn(Newsample, [\"annotation\"], null)\n    }\n    samplesWithoutAnnotation.push(Newsample)\n  }\n  return samplesWithoutAnnotation\n}\n\nexport const concatSample = (actualSamples, newSamples, annotationToKeep) => {\n  var Tabsamples = actualSamples\n  if (annotationToKeep === \"incoming\") {\n    Tabsamples = eraseAnnotation(actualSamples)\n  }\n\n  var Tabsamples2 = newSamples\n  if (annotationToKeep === \"current\") {\n    Tabsamples2 = eraseAnnotation(newSamples)\n  }\n  var concatSamples = Tabsamples.concat(Tabsamples2)\n  return concatSamples\n}\n\nexport const getFileDifferences = (objectOfRef, objectToCheck) => {\n  var resultSet = {\n    fileName: false,\n    content: {\n      interface: {\n        type: false,\n        labels: false,\n        regionTypesAllowed: false,\n      },\n      samples: false,\n    },\n    id: false,\n    mode: false,\n    any: false,\n  }\n  // Check if the object to check exist if not return false\n  if (isEmpty(objectToCheck)) return resultSet\n\n  // Check if the object of reference exist if not return true\n  if (isEmpty(objectOfRef)) {\n    resultSet.fileName = true\n    resultSet.content.interface.type = true\n    resultSet.content.interface.labels = true\n    resultSet.content.interface.regionTypesAllowed = true\n    resultSet.content.samples = true\n    resultSet.id = true\n    resultSet.mode = true\n    resultSet.any = true\n    return resultSet\n  }\n\n  if (objectOfRef !== objectToCheck) {\n    resultSet.any = true\n  } else {\n    return resultSet\n  }\n\n  // Check if the id doesn't exist or have change\n  if (!isEmpty(objectToCheck.id)) {\n    if (isEmpty(objectOfRef.id)) resultSet.id = true\n    else if (objectToCheck.id !== objectOfRef.id) resultSet.id = true\n  }\n\n  // Check if the content doesn't exist or have change\n  if (!isEmpty(objectToCheck.content)) {\n    if (isEmpty(objectOfRef.content)) {\n      resultSet.content.interface.type = true\n      resultSet.content.interface.labels = true\n      resultSet.content.interface.regionTypesAllowed = true\n      resultSet.content.samples = true\n    } else if (objectToCheck.content !== objectOfRef.content) {\n      //Check if the interface doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.interface)) {\n        if (isEmpty(objectOfRef.content.interface)) {\n          resultSet.content.interface.type = true\n          resultSet.content.interface.labels = true\n          resultSet.content.interface.regionTypesAllowed = true\n        } else if (\n          objectToCheck.content.interface !== objectOfRef.content.interface\n        ) {\n          //Check if the type doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.type)) {\n            if (isEmpty(objectOfRef.content.interface.type)) {\n              resultSet.content.interface.type = true\n            } else if (\n              objectToCheck.content.interface.type !==\n              objectOfRef.content.interface.type\n            ) {\n              resultSet.content.interface.type = true\n            }\n          }\n          //Check if the labels doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.labels)) {\n            if (isEmpty(objectOfRef.content.interface.labels)) {\n              resultSet.content.interface.labels = true\n            } else if (\n              objectToCheck.content.interface.labels !==\n              objectOfRef.content.interface.labels\n            ) {\n              resultSet.content.interface.labels = true\n            }\n          }\n          //Check if the regionsTypesAllowed doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.regionTypesAllowed)) {\n            if (isEmpty(objectOfRef.content.interface.regionTypesAllowed)) {\n              resultSet.content.interface.regionTypesAllowed = true\n            } else if (\n              objectToCheck.content.interface.regionTypesAllowed !==\n              objectOfRef.content.interface.regionTypesAllowed\n            ) {\n              resultSet.content.interface.regionTypesAllowed = true\n            }\n          }\n        }\n      }\n      //Check if the samples doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.samples)) {\n        if (isEmpty(objectOfRef.content.samples)) {\n          resultSet.content.samples = true\n        } else if (\n          objectToCheck.content.samples !== objectOfRef.content.samples\n        ) {\n          resultSet.content.samples = true\n        }\n      }\n    }\n  }\n\n  // Check if the mode doesn't exist or have change\n  if (!isEmpty(objectToCheck.mode)) {\n    if (isEmpty(objectOfRef.mode)) resultSet.mode = true\n    else if (objectToCheck.mode !== objectOfRef.mode) resultSet.mode = true\n  }\n\n  // Check if the fileName doesn't exist or have change\n  if (!isEmpty(objectToCheck.fileName)) {\n    if (isEmpty(objectOfRef.fileName)) resultSet.fileName = true\n    else if (objectToCheck.fileName !== objectOfRef.fileName)\n      resultSet.fileName = true\n  }\n  //Default behavior return false\n  return resultSet\n}\n\nexport const fileHasChanged = getFileDifferences\n","import isEmpty from \"lodash/isEmpty\"\nimport Amplify, { Storage } from \"aws-amplify\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nfunction CheckIfAnnotationExist(result, folderToFetch) {\n  return result.find(\n    (element) => element.key === `${folderToFetch}/annotations/annotations.json`\n  )\n}\n\nfunction GetSampleFromAnnotation(json, samples) {\n  if (isEmpty(json.content.samples)) return\n  var newSamples = []\n  for (var i = 0; i < json.content.samples.length; i++) {\n    var sampleName = datasetHelper.getSampleName(json.content.samples[i])\n    var annotation = json.content.samples[i].annotation\n    var sampleFound = datasetHelper.getSampleWithThisSampleName(\n      sampleName,\n      samples\n    )\n    var url\n    if (sampleFound === null) {\n      url = datasetHelper.getSampleUrl(samples)\n    } else {\n      url = datasetHelper.getSampleUrl(sampleFound)\n    }\n    newSamples.push(\n      datasetHelper.createOneNewSample(sampleName, url, annotation)\n    )\n  }\n  json.content.samples = newSamples\n}\n\nexport default async (result, samples, folderToFetch, authConfig) => {\n  Amplify.configure(authConfig)\n\n  var json = null\n  if (CheckIfAnnotationExist(result, folderToFetch)) {\n    await Storage.get(`${folderToFetch}/annotations/annotations.json`, {\n      expires: 24 * 60 * 60 * 2000,\n      level: \"private\",\n    })\n      .then(async (result) => {\n        await fetch(result).then(async (data) => {\n          return await data.json().then(async (result) => {\n            if (typeof result.content === \"undefined\") return\n            json = result\n            GetSampleFromAnnotation(json, samples)\n          })\n        })\n      })\n      .catch((err) => {\n        console.log(\"error getting link for s3 image\", err)\n        return null\n      })\n  }\n  return json\n}\n","import RecognizeFileExtension from \"../../utils/RecognizeFileExtension\"\nimport Amplify, { Storage } from \"aws-amplify\"\n\nasync function setUrl(result, configImport) {\n  if (configImport.loadProjectIsSelected) {\n    if (RecognizeFileExtension(result) === \"Image\") {\n      return { imageUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"Video\") {\n      return { videoUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"Audio\") {\n      return { audioUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"PDF\") {\n      return { pdfUrl: `${result}` }\n    }\n  } else {\n    if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Image\"\n    ) {\n      return { imageUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Video\"\n    ) {\n      return { videoUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Audio\"\n    ) {\n      return { audioUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"PDF\"\n    ) {\n      return { pdfUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Texte\"\n    ) {\n      var texte = await fetchTextInFile(result)\n      return { document: `${texte}` }\n    }\n  }\n}\nasync function fetchTextInFile(urlSource) {\n  var proxyUrl = \"https://cors-anywhere.herokuapp.com/\"\n  var response\n  var url\n  url = proxyUrl + urlSource\n  response = await fetch(url, {\n    method: \"GET\",\n  }).catch((error) => {\n    console.log(\"Looks like there was a problem: \\n\", error)\n  })\n  const texte = await response.text()\n  return texte\n}\nexport default async (result, folderToFetch, configImport, authConfig) => {\n  Amplify.configure(authConfig)\n  var samples = []\n  for (let i = 0; i < result.length; i++) {\n    if (result[i].key.match(`(${folderToFetch}/data).*(\\\\.).*`)) {\n      await Storage.get(result[i].key, {\n        expires: 24 * 60 * 60,\n        level: \"private\",\n      })\n        .then(async (result) => {\n          samples.push(await setUrl(result, configImport))\n        })\n        .catch((err) => {\n          console.log(\"error getting link for s3 image\", err)\n          return null\n        })\n    }\n  }\n  return samples\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (typeAuthorize, file) => {\n  function interfaceFileType(type) {\n    if (\n      type === \"image_classification\" ||\n      type === \"image_segmentation\" ||\n      type === \"composite\"\n    )\n      return \"Image\"\n    if (type === \"video_segmentation\") return \"Video\"\n    if (type === \"audio_transcription\") return \"Audio\"\n    if (type === \"data_entry\") return \"PDF\"\n    if (type === \"text_entity_recognition\" || type === \"text_classification\")\n      return \"Texte\"\n    if (isEmpty(type)) return \"Empty\"\n    return \"File\"\n  }\n\n  function typesamplesSample(samples) {\n    if (isEmpty(samples) || isEmpty(samples[0])) return \"Empty\"\n    if (!isEmpty(samples[0].imageUrl)) return \"Image\"\n    if (!isEmpty(samples[0].videoUrl)) return \"Video\"\n    if (!isEmpty(samples[0].audioUrl)) return \"Audio\"\n    if (!isEmpty(samples[0].pdfUrl)) return \"PDF\"\n    if (!isEmpty(samples[0].document)) return \"Texte\"\n    return \"File\"\n  }\n  var result = [null, null]\n  if (isEmpty(file)) return false\n  result[0] = interfaceFileType(file.content.interface.type)\n  result[1] = typesamplesSample(file.content.samples)\n  if (typeAuthorize.includes(result[0]) && typeAuthorize.includes(result[1]))\n    return true\n  return false\n}\n","import { setIn } from \"seamless-immutable\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nimport isEmpty from \"lodash/isEmpty\"\nexport default (file, json, configImport) => {\n  var contentOldFile = file.content\n  contentOldFile = setIn(\n    contentOldFile,\n    [\"samples\"],\n    datasetHelper.concatSample(\n      file.content.samples,\n      json.content.samples,\n      configImport.annotationToKeep\n    )\n  )\n\n  contentOldFile = setIn(contentOldFile, [\"interface\"], json.content.interface)\n  file = setIn(file, [\"content\"], contentOldFile)\n  if (isEmpty(file.fileName) || file.fileName === \"unnamed\")\n    file = setIn(file, [\"fileName\"], json.fileName)\n  return file\n}\n","// @flow weak\nimport React, { useState, useEffect, useRef, useCallback } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport DataTable from \"react-data-table-component\"\nimport Radio from \"@material-ui/core/Radio\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport { Storage } from \"aws-amplify\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { useLocalStorage } from \"react-use\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport StorageIcon from \"@material-ui/icons/Storage\"\nimport Button from \"@material-ui/core/Button\"\nimport GetAnnotationFromAFolderAWS from \"./get-annotation-from-aws\"\nimport GetImageFromAFolderAWS from \"./get-images-from-aws\"\nimport setButtonNameAddSample from \"./set-button-add-sample-name\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nimport setTypeOfFileToLoadAndDisable from \"./set-type-of-file-to-load-and-disable\"\nimport initConfigImport from \"./init-config-import\"\nimport setAnnotationFromAws from \"./set-annotation-from-aws\"\nimport useAuth from \"../../utils/auth-handlers/use-auth.js\"\n\nconst selectedStyle = { color: \"DodgerBlue\" }\nconst tableStyle = {\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  width: \"100%\",\n}\nconst expandedDataColumns = [\n  { name: \"Data\", selector: \"data\", sortable: true },\n  { name: \"Last Modified\", selector: \"lastModified\", sortable: true },\n]\n\nconst expandedAnnotationsColumns = [\n  { name: \"Annotations\", selector: \"annotation\" },\n  { name: \"Last Modified\", selector: \"lastModified\", sortable: true },\n]\n\nconst columns = [{ name: \"Projects\", selector: \"folder\", sortable: true }]\n\nconst customStyles = {\n  headCells: {\n    style: {\n      paddingLeft: \"10px\",\n      \"font-weight\": \"bold\",\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: \"25px\",\n    },\n  },\n}\n\nconst ExpandedRow = ({ data }) => {\n  const { rowData, rowAnnotations } = data\n  return (\n    <>\n      <DataTable\n        style={{\n          boxSizing: \"border-box\",\n          paddingLeft: \"50px\",\n          paddingRight: \"10px\",\n        }}\n        dense\n        striped\n        noHeader\n        columns={expandedAnnotationsColumns}\n        data={rowAnnotations}\n        noDataComponent='Make sure the project has \"annotations\" folder'\n        pagination={rowData.length > 10}\n        paginationPerPage={10}\n        paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n        customStyles={customStyles}\n      />\n      <DataTable\n        style={{\n          boxSizing: \"border-box\",\n          paddingLeft: \"50px\",\n          paddingRight: \"10px\",\n        }}\n        dense\n        striped\n        noHeader\n        columns={expandedDataColumns}\n        data={rowData}\n        noDataComponent={'Make sure the project has \"data\" folder'}\n        pagination={rowData.length > 10}\n        paginationPerPage={10}\n        paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n        customStyles={customStyles}\n      />\n    </>\n  )\n}\n\nexport default ({ file, open, onClose, onAddSamples, onChangeFile }) => {\n  const { authProvider, user, authConfig } = useAuth()\n  const [textButtonAdd, changetextButtonAdd] = useState(\"Add Samples\")\n  const [s3Content, changeS3Content] = useState(null)\n  const [dataForTable, changeDataForTable] = useState(null)\n  const [folderToFetch, setFolderToFetch] = useState(\"\")\n\n  const [configImport, setConfigImport] = useLocalStorage(\n    \"configImport\",\n    initConfigImport(file)\n  )\n  const lastObjectRef = useRef({})\n  const hasProjectStarted = useCallback(() => {\n    if (authProvider !== \"cognito\") return\n    if (\n      isEmpty(file) ||\n      isEmpty(file.content) ||\n      (isEmpty(file.content.interface) && isEmpty(file.content.samples))\n    )\n      return false\n    return true\n  }, [file, authProvider])\n\n  useEffect(() => {\n    if (authProvider !== \"cognito\") return\n    if (file === lastObjectRef.current) return\n    var configToSet = configImport\n    var changes = datasetHelper.fileHasChanged(lastObjectRef.current, file)\n    if (changes.content.interface.type || changes.content.samples) {\n      if (lastObjectRef.current !== {})\n        configToSet = setTypeOfFileToLoadAndDisable(configToSet, file)\n    }\n    setConfigImport({\n      ...configToSet,\n      projectStarted: hasProjectStarted(),\n      loadProjectIsSelected: hasProjectStarted()\n        ? false\n        : setConfigImport.loadProjectIsSelected,\n    })\n    lastObjectRef.current = file\n  }, [file, configImport, setConfigImport, hasProjectStarted, authProvider])\n\n  const handleAddSample = async () => {\n    var samples = await GetImageFromAFolderAWS(\n      s3Content,\n      folderToFetch,\n      configImport,\n      authConfig\n    )\n    var json = null\n    if (configImport.loadProjectIsSelected) {\n      json = await GetAnnotationFromAFolderAWS(\n        s3Content,\n        samples,\n        folderToFetch,\n        authConfig\n      )\n    }\n\n    if (\n      isEmpty(json) ||\n      isEmpty(json.content) ||\n      isEmpty(json.content.samples) ||\n      isEmpty(json.fileName)\n    ) {\n      onAddSamples(samples)\n    } else {\n      file = setAnnotationFromAws(file, json, configImport)\n      onChangeFile(file, true)\n      onAddSamples([])\n    }\n  }\n\n  const handleRowSelected = (whatsChanging) => {\n    if (!isEmpty(whatsChanging.selectedRows[0])) {\n      setFolderToFetch(whatsChanging.selectedRows[0].folder)\n      changeDataForTable((prevState) =>\n        prevState.map((row) => {\n          if (whatsChanging.selectedRows[0].id === row.id) {\n            row.isSelected = true\n          } else {\n            row.isSelected = false\n          }\n          return row\n        })\n      )\n    } else {\n      setFolderToFetch(null)\n      changeDataForTable((prevState) =>\n        prevState.map((row) => {\n          row.isSelected = false\n          return row\n        })\n      )\n    }\n  }\n  function changeLoadProjectIsSelected() {\n    setConfigImport({\n      ...configImport,\n      loadProjectIsSelected: !configImport.loadProjectIsSelected,\n    })\n  }\n\n  useEffect(() => {\n    var textToSet = setButtonNameAddSample(\n      configImport.loadProjectIsSelected,\n      configImport.typeOfFileToLoad,\n      dataForTable\n    )\n    changetextButtonAdd(textToSet)\n  }, [\n    configImport.loadProjectIsSelected,\n    configImport.typeOfFileToLoad,\n    dataForTable,\n  ])\n\n  useEffect(() => {\n    if (isEmpty(user)) {\n      changeS3Content(null)\n    } else if (!isEmpty(authConfig)) {\n      Storage.list(\"\", { level: \"private\" })\n        .then((result) => {\n          changeS3Content(result)\n          let _dataForTable = result\n            .filter((obj) => {\n              return obj.key.endsWith(\"/\") & (obj.key.split(\"/\").length === 2)\n            })\n            .map((obj, index) => {\n              const folder = obj.key.split(\"/\")[0]\n              const rowDataContent = result\n                .filter((obj) => {\n                  return (\n                    obj.key.startsWith(`${folder}/data/`) &\n                    !obj.key.endsWith(\"/\")\n                  )\n                })\n                .map((obj) => {\n                  return {\n                    data: obj.key.split(\"/data/\")[1],\n                    lastModified: obj.lastModified.toDateString(),\n                  }\n                })\n              const rowAnnotationsContent = result\n                .filter((obj) => {\n                  return (\n                    obj.key.startsWith(`${folder}/annotations/`) &\n                    !obj.key.endsWith(\"/\")\n                  )\n                })\n                .map((obj) => {\n                  return {\n                    annotation: obj.key.split(\"/annotations/\")[1],\n                    lastModified: obj.lastModified.toDateString(),\n                  }\n                })\n              return {\n                id: `${index}`,\n                folder: folder,\n                rowData: rowDataContent,\n                rowAnnotations: rowAnnotationsContent,\n                isSelected: true,\n              }\n            })\n          changeDataForTable(_dataForTable)\n        })\n        .catch((err) => console.log(err))\n    }\n  }, [user, authConfig])\n  return (\n    <SimpleDialog\n      title=\"Select Project\"\n      open={open}\n      onClose={onClose}\n      actions={[\n        {\n          text: textButtonAdd,\n          onClick: () => {\n            handleAddSample()\n          },\n          disabled: configImport.contentDialogBoxIsSetting,\n        },\n      ]}\n    >\n      <table style={tableStyle}>\n        <tbody>\n          <tr>\n            <th>\n              {configImport.loadProjectIsSelected ? (\n                <Button\n                  style={selectedStyle}\n                  onClick={changeLoadProjectIsSelected}\n                  disabled\n                >\n                  Load Project\n                </Button>\n              ) : (\n                <Button\n                  onClick={changeLoadProjectIsSelected}\n                  disabled={configImport.projectStarted}\n                >\n                  Load Project\n                </Button>\n              )}\n              {configImport.loadProjectIsSelected ? (\n                <Button onClick={changeLoadProjectIsSelected}>\n                  Load Samples\n                </Button>\n              ) : (\n                <Button\n                  style={selectedStyle}\n                  onClick={changeLoadProjectIsSelected}\n                  disabled\n                >\n                  Load Samples\n                </Button>\n              )}\n              <IconButton\n                onClick={() => {\n                  setConfigImport({\n                    ...configImport,\n                    contentDialogBoxIsSetting: !configImport.contentDialogBoxIsSetting,\n                  })\n                }}\n              >\n                {configImport.contentDialogBoxIsSetting ? (\n                  <StorageIcon></StorageIcon>\n                ) : (\n                  <SettingsIcon></SettingsIcon>\n                )}\n              </IconButton>\n            </th>\n          </tr>\n\n          {!configImport.contentDialogBoxIsSetting ? (\n            !isEmpty(dataForTable) && (\n              <tr>\n                <th>\n                  <DataTable\n                    expandableRows\n                    expandableRowsComponent={<ExpandedRow />}\n                    selectableRows\n                    selectableRowsHighlight\n                    selectableRowsNoSelectAll\n                    selectableRowsComponent={Radio}\n                    dense\n                    noHeader\n                    noTableHead\n                    columns={columns}\n                    onSelectedRowsChange={handleRowSelected}\n                    selectableRowSelected={(row) => row.isSelected}\n                    data={dataForTable}\n                    pagination={dataForTable.length > 10}\n                    paginationPerPage={10}\n                    paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n                  />\n                </th>\n              </tr>\n            )\n          ) : (\n            <tr>\n              <th>\n                {configImport.loadProjectIsSelected ? (\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                      Annotation processing\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"option1\"\n                      onChange={(event) => {\n                        setConfigImport({\n                          ...configImport,\n                          annotationToKeep: event.target.value,\n                        })\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"both\"\n                        control={<Radio />}\n                        label=\"Keep both annotations\"\n                        checked={configImport.annotationToKeep === \"both\"}\n                      />\n                      <FormControlLabel\n                        value=\"incoming\"\n                        control={<Radio />}\n                        label=\"Keep incoming annotations\"\n                        checked={configImport.annotationToKeep === \"incoming\"}\n                      />\n                      <FormControlLabel\n                        value=\"current\"\n                        control={<Radio />}\n                        label=\"Keep current annotations\"\n                        checked={configImport.annotationToKeep === \"current\"}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                ) : (\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Choose file type</FormLabel>\n                    <RadioGroup\n                      aria-label=\"option2\"\n                      onChange={(event) => {\n                        setConfigImport({\n                          ...configImport,\n                          typeOfFileToLoad: event.target.value,\n                        })\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"Image\"\n                        control={<Radio />}\n                        label=\"Load image file\"\n                        disabled={configImport.typeOfFileToDisable.Image}\n                        checked={configImport.typeOfFileToLoad === \"Image\"}\n                      />\n                      <FormControlLabel\n                        value=\"Video\"\n                        control={<Radio />}\n                        label=\"Load video file\"\n                        disabled={configImport.typeOfFileToDisable.Video}\n                        checked={configImport.typeOfFileToLoad === \"Video\"}\n                      />\n                      <FormControlLabel\n                        value=\"Audio\"\n                        control={<Radio />}\n                        label=\"Load audio file\"\n                        disabled={configImport.typeOfFileToDisable.Audio}\n                        checked={configImport.typeOfFileToLoad === \"Audio\"}\n                      />\n                      <FormControlLabel\n                        value=\"PDF\"\n                        control={<Radio />}\n                        label=\"Load PDF file\"\n                        disabled={configImport.typeOfFileToDisable.PDF}\n                        checked={configImport.typeOfFileToLoad === \"PDF\"}\n                      />\n                      <FormControlLabel\n                        value=\"Texte\"\n                        control={<Radio />}\n                        label=\"Load texte file\"\n                        disabled={configImport.typeOfFileToDisable.Texte}\n                        checked={configImport.typeOfFileToLoad === \"Texte\"}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                )}\n              </th>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </SimpleDialog>\n  )\n}\n","import checkInterfaceAndsamples from \"./check-interface-and-sample-type\"\nexport default (file) => {\n  return {\n    annotationToKeep: \"both\",\n    typeOfFileToLoad: checkInterfaceAndsamples([\"Image\", \"Empty\"], file)\n      ? \"Image\"\n      : checkInterfaceAndsamples([\"Video\", \"Empty\"], file)\n      ? \"Video\"\n      : checkInterfaceAndsamples([\"Audio\", \"Empty\"], file)\n      ? \"Audio\"\n      : checkInterfaceAndsamples([\"PDF\", \"Empty\"], file)\n      ? \"PDF\"\n      : checkInterfaceAndsamples([\"Texte\", \"Empty\"], file)\n      ? \"Texte\"\n      : \"None\",\n    typeOfFileToDisable: {\n      Image: checkInterfaceAndsamples([\"Image\", \"Empty\"], file) ? false : true,\n      Video: checkInterfaceAndsamples([\"Video\", \"Empty\"], file) ? false : true,\n      Audio: checkInterfaceAndsamples([\"Audio\", \"Empty\"], file) ? false : true,\n      PDF: checkInterfaceAndsamples([\"PDF\", \"Empty\"], file) ? false : true,\n      Texte: checkInterfaceAndsamples([\"Texte\", \"Empty\"], file) ? false : true,\n    },\n    loadProjectIsSelected: true,\n    contentDialogBoxIsSetting: false,\n    projectStarted: false,\n  }\n}\n","import isEmpty from \"lodash/isEmpty\"\nimport checkInterfaceAndsamples from \"./check-interface-and-sample-type\"\nexport default (configImport, file) => {\n  return {\n    ...configImport,\n    typeOfFileToLoad:\n      !isEmpty(configImport) &&\n      !isEmpty(configImport.typeOfFileToLoad) &&\n      checkInterfaceAndsamples([configImport.typeOfFileToLoad, \"Empty\"], file)\n        ? configImport.typeOfFileToLoad\n        : checkInterfaceAndsamples([\"Image\", \"Empty\"], file)\n        ? \"Image\"\n        : checkInterfaceAndsamples([\"Video\", \"Empty\"], file)\n        ? \"Video\"\n        : checkInterfaceAndsamples([\"Audio\", \"Empty\"], file)\n        ? \"Audio\"\n        : checkInterfaceAndsamples([\"PDF\", \"Empty\"], file)\n        ? \"PDF\"\n        : checkInterfaceAndsamples([\"Texte\", \"Empty\"], file)\n        ? \"Texte\"\n        : \"None\",\n    typeOfFileToDisable: {\n      Image: checkInterfaceAndsamples([\"Image\", \"Empty\"], file) ? false : true,\n      Video: checkInterfaceAndsamples([\"Video\", \"Empty\"], file) ? false : true,\n      Audio: checkInterfaceAndsamples([\"Audio\", \"Empty\"], file) ? false : true,\n      PDF: checkInterfaceAndsamples([\"PDF\", \"Empty\"], file) ? false : true,\n      Texte: checkInterfaceAndsamples([\"Texte\", \"Empty\"], file) ? false : true,\n    },\n  }\n}\n","import RecognizeFileExtension from \"../../utils/RecognizeFileExtension\"\nimport isEmpty from \"lodash/isEmpty\"\nexport default (loadProjectIsSelected, typeOfFileToLoad, dataForTable) => {\n  var numberOfSamples = 0\n  var textToSet = \"\"\n  var folderName\n  if (!isEmpty(dataForTable)) {\n    for (var i = 0; i < dataForTable.length; i++) {\n      if (dataForTable[i].isSelected) {\n        folderName = dataForTable[i].folder\n        if (!isEmpty(dataForTable[i].rowData)) {\n          for (var y = 0; y < dataForTable[i].rowData.length; y++) {\n            if (\n              RecognizeFileExtension(dataForTable[i].rowData[y].data) ===\n              typeOfFileToLoad\n            ) {\n              numberOfSamples++\n            }\n          }\n        }\n      }\n    }\n    if (loadProjectIsSelected) {\n      textToSet = \"Load \" + folderName\n    } else {\n      textToSet = \"Add \" + numberOfSamples + \" \" + typeOfFileToLoad\n    }\n  }\n  return textToSet\n}\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nexport default (props) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 50 50\">\n      <g id=\"Working\">\n        <path\n          style={props.color}\n          d=\"M21.17,42.88H13.76a1,1,0,0,1-1-1v-7.5a1,1,0,0,1,1-1h7.41a1,1,0,0,1,1,1v7.5A1,1,0,0,1,21.17,42.88Zm-6.41-2h5.41v-5.5H14.76Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M31,39.17a5.24,5.24,0,1,1,5.22-5.24A5.23,5.23,0,0,1,31,39.17Zm0-8.48a3.24,3.24,0,1,0,3.22,3.24A3.23,3.23,0,0,0,31,30.69Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M20.22,29.75H10.85a1,1,0,0,1-.87-.51,1,1,0,0,1,0-1l4.69-7.82a1,1,0,0,1,1.71,0l4.69,7.82a1,1,0,0,1,0,1A1,1,0,0,1,20.22,29.75Zm-7.61-2h5.85l-2.92-4.87Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,48.5c-6.39,0-16.5-1.45-16.63-5.34L2.51,9.55a1,1,0,0,1,2-.39c.5,1.93,8.05,4.63,19.2,4.63s18.69-2.7,19.19-4.63a1,1,0,0,1,2,.39L40.29,43.16c0,1.32-1.22,2.45-3.51,3.36a22.87,22.87,0,0,1-3.12.94A46,46,0,0,1,23.67,48.5ZM4.9,12.27,9,43s0,.09,0,.13c0,1.18,5.69,3.42,14.63,3.42a43.75,43.75,0,0,0,9.54-1A21,21,0,0,0,36,44.66c1.85-.73,2.26-1.39,2.26-1.58V43l4.14-30.68c-3.86,2.3-11.64,3.52-18.77,3.52S8.75,14.57,4.9,12.27Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,15.79c-9.47,0-20.1-2.15-21.14-6.12,0-.05,0-.09,0-.13l0-.41a.62.62,0,0,1,0-.13c0-4.42,11.18-7.5,21.22-7.5S44.88,4.58,44.88,9v.13l-.06.41a.69.69,0,0,1,0,.13C43.76,13.64,33.13,15.79,23.67,15.79ZM4.48,9.21c.62,1.93,8.14,4.58,19.19,4.58s18.56-2.65,19.18-4.58l0-.27C42.75,7,34.86,3.5,23.67,3.5S4.59,7,4.45,8.94Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M44.93,29.62c-4.76,0-15.18-4.71-21.7-7.91l.88-1.8c9,4.42,19.6,8.52,21.41,7.75-.14-.29-.81-1.19-4-2.92l-.16-.1,1-1.74.15.09c3.21,1.77,4.74,3.13,5,4.41a1.82,1.82,0,0,1-.4,1.52A2.77,2.77,0,0,1,44.93,29.62Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,23a2.17,2.17,0,1,1,2.17-2.17A2.18,2.18,0,0,1,23.67,23Zm0-2.34a.17.17,0,0,0-.18.17c0,.19.35.19.35,0A.17.17,0,0,0,23.67,20.64Z\"\n        />\n      </g>\n    </SvgIcon>\n  )\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport BucketIcon from \"../ImportPage/S3Icon\"\nimport DirectoryIcon from \"@material-ui/icons/FolderOpen\"\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\"\nimport BackIcon from \"@material-ui/icons/KeyboardArrowUp\"\nimport IconButton from \"@material-ui/core/IconButton\"\n\nconst Container = styled(Box)({})\nconst Items = styled(Box)({ height: 300, width: 400, overflowY: \"scroll\" })\nconst Path = styled(Box)({\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n})\nconst Item = styled(Button)({ width: \"100%\" })\n\nexport const S3BucketSelector = ({\n  currentPath,\n  options,\n  canCreateNew,\n  onChangePath,\n  showFiles = true,\n}) => {\n  return (\n    <Container>\n      <Path display=\"flex\" alignItems=\"center\">\n        <IconButton\n          disabled={!currentPath}\n          onClick={() => {\n            const newPath = currentPath.split(\"/\").slice(0, -2).join(\"/\") + \"/\"\n            if (newPath === \"s3://\") {\n              onChangePath(\"\")\n            } else {\n              onChangePath(newPath)\n            }\n          }}\n        >\n          <BackIcon />\n        </IconButton>\n        <Box>{currentPath}</Box>\n      </Path>\n      <Items>\n        {options\n          .filter((option) => (option.type === \"file\" ? showFiles : true))\n          .map((option, i) => (\n            <Item\n              key={i}\n              onClick={() => {\n                if (option.type === \"file\") {\n                  onChangePath(currentPath + option.name)\n                } else {\n                  if (!currentPath) {\n                    onChangePath(`s3://${option.name}/`)\n                  } else {\n                    onChangePath(`${currentPath}${option.name}`)\n                  }\n                }\n              }}\n            >\n              {option.type === \"bucket\" ? (\n                <BucketIcon className=\"icon\" />\n              ) : option.type === \"directory\" ? (\n                <DirectoryIcon className=\"icon\" />\n              ) : (\n                <FileIcon className=\"icon\" />\n              )}\n              <Box\n                flexGrow={1}\n                className=\"text\"\n                textAlign=\"left\"\n                paddingLeft={1}\n              >\n                {option.name}\n              </Box>\n            </Item>\n          ))}\n        {currentPath !== \"\" && canCreateNew && (\n          <Item\n            key=\"create-new\"\n            onClick={() => {\n              // TODO switch to MUI dialog\n              const newDirectory = window.prompt(\n                \"Enter the name of new directory\"\n              )\n              if (newDirectory) {\n                onChangePath(currentPath + newDirectory + \"/\")\n              }\n            }}\n          >\n            <DirectoryIcon className=\"icon\" />\n            <Box flexGrow={1} className=\"text\" textAlign=\"left\" paddingLeft={1}>\n              Create New\n            </Box>\n          </Item>\n        )}\n      </Items>\n    </Container>\n  )\n}\n\nexport default S3BucketSelector\n","// @flow\n\nexport default () => {\n  if (window.require) {\n    return Boolean(window.require(\"electron\"))\n  }\n  return false\n}\n","import { useMemo } from \"react\"\nimport { useAppConfig } from \"../../components/AppConfig\"\nimport xmlParser from \"fast-xml-parser\"\nimport useIsDesktop from \"../use-is-desktop\"\nimport { AwsClient } from \"aws4fetch\"\n\nfunction parseS3URI(s3Path) {\n  const bucket = s3Path.match(/s3:\\/\\/([^/]+)/)[1]\n  const path = s3Path.replace(/s3:\\/\\/[^/]+\\//, \"\")\n  return { bucket, path }\n}\n\nexport default () => {\n  const { appConfig } = useAppConfig()\n  const isDesktop = useIsDesktop()\n  let {\n    \"auth.s3iam.access_key_id\": accessKeyId,\n    \"auth.s3iam.secret_access_key\": secretAccessKey,\n    \"auth.s3iam.region\": region,\n    \"auth.proxy.corsproxy\": corsProxy,\n  } = appConfig\n  if (isDesktop) {\n    corsProxy = \"{URL}\"\n  }\n  // TODO if electron don't use CORS proxy\n\n  const awsClient = useMemo(\n    () =>\n      accessKeyId\n        ? new AwsClient({ accessKeyId, secretAccessKey, region, service: \"s3\" })\n        : null,\n    // eslint-disable-next-line\n    []\n  )\n\n  const fetchS3 = async (url, opts = {}) => {\n    const request = await awsClient.sign(url, opts)\n    const corsProxyRequest = new Request(\n      corsProxy.replace(\"{URL}\", encodeURIComponent(request.url)),\n      {\n        headers: request.headers,\n        method: request.method,\n        body: opts.body,\n      }\n    )\n    const response = await fetch(corsProxyRequest).then((r) => r.text())\n    return xmlParser.parse(response)\n  }\n\n  if (!accessKeyId) return {}\n\n  return useMemo(\n    () => ({\n      parseS3URI,\n      listBuckets: () => fetchS3(\"https://s3.amazonaws.com\"),\n      listBucketItemsAt: (s3Path, opts = {}) => {\n        const { bucket, path } = parseS3URI(s3Path)\n        return fetchS3(\n          `https://s3.${region}.amazonaws.com/${bucket}?list-type=2&delimiter=/&prefix=${path}`,\n          {\n            headers: { Host: bucket },\n          }\n        )\n      },\n      putBucketItem: async (s3Path, file) => {\n        const { bucket, path } = parseS3URI(s3Path)\n        const res = await fetchS3(\n          `https://s3.${region}.amazonaws.com/${bucket}/${path}`,\n          {\n            method: \"PUT\",\n            headers: {\n              Host: `s3.amazonaws.com/${bucket}`,\n              \"Content-Type\": file.type,\n              \"x-amz-acl\": \"public-read\",\n            },\n            body: file,\n          }\n        )\n        if (res.Error) {\n          throw new Error(`${res.Error.Code}: ${res.Error.Message}`)\n        }\n        return res\n      },\n    }),\n    // eslint-disable-next-line\n    [awsClient]\n  )\n}\n","import JAC from \"jac-format\"\n\nconst alternativeSpellings = {\n  imageUrl: [\n    \"image_url\",\n    \"image_urls\",\n    \"image\",\n    \"image_src\",\n    \"img_url\",\n    \"img\",\n    \"img_src\",\n  ],\n  document: [\"text\"],\n}\nconst badSpellingMap = {}\nfor (const [correct, badSpellings] of Object.entries(alternativeSpellings)) {\n  for (const badSpelling of badSpellings) {\n    badSpellingMap[badSpelling] = correct\n  }\n}\n\nconst convertTaskDatumMistakes = (sample) => {\n  for (const key in sample) {\n    const normalizedKey = key.toLowerCase().replace(/ /g, \"_\")\n    const correction = badSpellingMap[normalizedKey]\n    if (correction) {\n      sample[correction] = sample[key]\n      delete sample[key]\n    }\n  }\n  return sample\n}\n\nexport default (csv) => {\n  const json = JAC.fromCSV(csv, { derivePath: () => \"samples.*\" })\n  if (!json.samples) throw new Error(\"No samples\")\n  return {\n    interface: json.interface,\n    taskOutput: json.samples.map((sample) => sample.output),\n    samples: json.samples.map(convertTaskDatumMistakes).map((sample) => {\n      delete sample.output\n      return sample\n    }),\n  }\n}\n","import React, { useState, useEffect } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport S3PathSelector from \"../S3PathSelector\"\nimport getSampleFromUrl from \"../PasteUrlsDialog/get-sample-from-url.js\"\n// import { useAppConfig } from \"../AppConfig\"\nimport useIAMS3API from \"../../utils/auth-handlers/use-iam-s3-api\"\n\nexport const ImportFromS3Dialog = ({ open, onClose, onAddSamples }) => {\n  const { listBuckets, listBucketItemsAt } = useIAMS3API()\n  const [s3Path, setS3Path] = useState(\"\")\n  const [{ options, optionsLoading }, setOptions] = useState({\n    optionsLoading: true,\n  })\n  useEffect(() => {\n    if (!open) return\n    if (!listBuckets) return\n    async function loadS3Path() {\n      if (s3Path === \"\") {\n        setOptions({\n          optionsLoading: false,\n          options: (\n            await listBuckets()\n          ).ListAllMyBucketsResult.Buckets.Bucket.map((b) => ({\n            name: b.Name,\n            type: \"bucket\",\n          })),\n        })\n      } else {\n        setOptions({\n          optionsLoading: false,\n          options: (\n            (await listBucketItemsAt(s3Path)).ListBucketResult.CommonPrefixes ||\n            []\n          ).map((a) => ({\n            name: a.Prefix.split(\"/\").slice(-2).join(\"/\"),\n            type: \"directory\",\n          })),\n        })\n      }\n    }\n    loadS3Path()\n    // eslint-disable-next-line\n  }, [s3Path, listBuckets, listBucketItemsAt, open])\n  if (!open) return null\n  return (\n    <SimpleDialog\n      onClose={onClose}\n      open={open}\n      title=\"Import from S3\"\n      actions={[\n        {\n          onClick: async () => {\n            const bucket = s3Path.match(/s3:\\/\\/([^/]+)/)[1]\n\n            // TODO support more than 1000 file import by using\n            // continuation-token on S3\n            const items = (\n              await listBucketItemsAt(s3Path, { files: true })\n            ).ListBucketResult.Contents.filter(\n              (item) => !item.Key.endsWith(\"/\")\n            )\n              .map((item) => `https://s3.amazonaws.com/${bucket}/${item.Key}`)\n              .map((url) => getSampleFromUrl(url, { returnNulls: true }))\n              .filter(Boolean)\n            onAddSamples(items)\n          },\n          disabled: !s3Path,\n          text: \"Import All Files in Directory\",\n        },\n      ]}\n    >\n      {optionsLoading ? (\n        <Box height={300} width={400} paddingTop={4} textAlign=\"center\">\n          <CircularProgress size={100} />\n        </Box>\n      ) : (\n        <S3PathSelector\n          currentPath={s3Path}\n          options={options || []}\n          onChangePath={(newS3Path) => {\n            setS3Path(newS3Path)\n            setOptions({ optionsLoading: true })\n          }}\n        />\n      )}\n    </SimpleDialog>\n  )\n}\n\nexport default ImportFromS3Dialog\n","import React, { useCallback, useState } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Box from \"@material-ui/core/Box\"\nimport { useDropzone } from \"react-dropzone\"\n\nconst Container = styled(Box)({\n  width: 400,\n  height: 200,\n  padding: 20,\n  border: `2px dotted ${colors.grey[400]}`,\n  textAlign: \"center\",\n  fontSize: 24,\n})\n\nconst FileCounter = styled(Box)({\n  fontSize: 24,\n  color: colors.grey[700],\n  fontWeight: \"bold\",\n})\n\n/*\n  This component allows you to upload multiple files, then reads the files in\n  serial. It's perfect for an uploading process where you don't want to upload one\n  file at a time. It gives a progress bar indicating upload progres.\n*/\n\nexport const MultiFileDrop = ({ loadFile, onComplete }) => {\n  const [totalUploaded, setTotalUploaded] = useState(0)\n  const [errors, setErrors] = useState([])\n  const [{ totalFiles, filesSelected }, setUploadStartState] = useState({\n    filesSelected: false,\n  })\n  const onDrop = useCallback(async (acceptedFiles) => {\n    setUploadStartState({\n      totalFiles: acceptedFiles.length,\n      filesSelected: true,\n    })\n    const errors = []\n    for (const [index, file] of acceptedFiles.entries()) {\n      await loadFile(file).catch((err) => {\n        errors.push(err.toString())\n        setErrors(errors)\n      })\n      setTotalUploaded(index + 1)\n    }\n    onComplete()\n    // eslint-disable-next-line\n  }, [])\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  if (!filesSelected) {\n    return (\n      <Container {...getRootProps()}>\n        <input {...getInputProps()} />\n        {isDragActive ? (\n          <p>Drop the files here ...</p>\n        ) : (\n          <p>Drag 'n' drop some files here, or click to select files</p>\n        )}\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <FileCounter>\n        {totalUploaded} / {totalFiles} Files Processed\n      </FileCounter>\n      {/* TODO progress bar */}\n      <Box\n        maxHeight={100}\n        overflowY=\"auto\"\n        textAlign=\"left\"\n        color=\"red\"\n        fontSize={12}\n      >\n        {errors.map((err, i) => (\n          <div key={i}>{err}</div>\n        ))}\n      </Box>\n    </Container>\n  )\n}\n\nexport default MultiFileDrop\n","import React, { useState, useEffect, useRef } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport S3PathSelector from \"../S3PathSelector\"\nimport getSampleFromUrl from \"../PasteUrlsDialog/get-sample-from-url.js\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport BackIcon from \"@material-ui/icons/KeyboardArrowLeft\"\n// import { useAppConfig } from \"../AppConfig\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport useIAMS3API from \"../../utils/auth-handlers/use-iam-s3-api\"\nimport MultiFileDrop from \"../MultiFileDrop\"\nimport Stepper from \"@material-ui/core/Stepper\"\nimport Step from \"@material-ui/core/Step\"\nimport StepLabel from \"@material-ui/core/StepLabel\"\n\nconst SelectedPath = styled(\"div\")({\n  fontSize: 14,\n  color: colors.grey[700],\n  fontWeight: \"bold\",\n})\n\nexport const UploadToS3Dialog = ({ open, onClose, onAddSamples }) => {\n  const {\n    listBuckets,\n    listBucketItemsAt,\n    putBucketItem,\n    parseS3URI,\n  } = useIAMS3API()\n  const [complete, setComplete] = useState(false)\n  const uploadedPaths = useRef([])\n  const [s3Path, setS3Path] = useState(\"\")\n  const [activeStep, setActiveStep] = useState(0)\n  const [{ options, optionsLoading }, setOptions] = useState({\n    optionsLoading: true,\n  })\n  useEffect(() => {\n    if (!listBuckets) return\n    if (!open) return\n    async function loadS3Path() {\n      if (s3Path === \"\") {\n        setOptions({\n          optionsLoading: false,\n          options: (\n            await listBuckets()\n          ).ListAllMyBucketsResult.Buckets.Bucket.map((b) => ({\n            name: b.Name,\n            type: \"bucket\",\n          })),\n        })\n      } else {\n        setOptions({\n          optionsLoading: false,\n          options: (\n            (await listBucketItemsAt(s3Path)).ListBucketResult.CommonPrefixes ||\n            []\n          ).map((a) => ({\n            name: a.Prefix.split(\"/\").slice(-2).join(\"/\"),\n            type: \"directory\",\n          })),\n        })\n      }\n    }\n    loadS3Path()\n    // eslint-disable-next-line\n  }, [open, s3Path, listBuckets, listBucketItemsAt])\n  if (!open) return null\n  return (\n    <SimpleDialog\n      onClose={onClose}\n      open={open}\n      title=\"Upload to S3\"\n      actions={[\n        activeStep === 0 && {\n          onClick: () => setActiveStep(1),\n          disabled: !s3Path,\n          text: \"Upload to this directory\",\n        },\n        activeStep === 1 && {\n          disabled: !complete,\n          onClick: () => {\n            const samples = uploadedPaths.current\n              .map((url) => getSampleFromUrl(url, { returnNulls: true }))\n              .filter(Boolean)\n            onAddSamples(samples)\n          },\n          text: \"Add Samples\",\n        },\n      ].filter(Boolean)}\n    >\n      <Stepper activeStep={activeStep}>\n        <Step>\n          <StepLabel>Directory to Upload To</StepLabel>\n        </Step>\n        <Step>\n          <StepLabel>Upload Files</StepLabel>\n        </Step>\n      </Stepper>\n      {activeStep === 0 && (\n        <>\n          {optionsLoading ? (\n            <Box height={300} width={400} paddingTop={4} textAlign=\"center\">\n              <CircularProgress size={100} />\n            </Box>\n          ) : (\n            <S3PathSelector\n              currentPath={s3Path}\n              canCreateNew\n              options={options || []}\n              onChangePath={(newS3Path) => {\n                setS3Path(newS3Path)\n                setOptions({ optionsLoading: true })\n              }}\n            />\n          )}\n        </>\n      )}\n      {activeStep === 1 && (\n        <>\n          <Box display=\"flex\" alignItems=\"center\">\n            <IconButton onClick={() => setActiveStep(0)}>\n              <BackIcon />\n            </IconButton>\n            <SelectedPath>Uploading to: {s3Path}</SelectedPath>\n          </Box>\n          <Box>\n            <MultiFileDrop\n              loadFile={async (file) => {\n                const filePath = s3Path + file.name\n                await putBucketItem(filePath, file)\n                const { bucket, path } = parseS3URI(filePath)\n                uploadedPaths.current.push(\n                  `https://s3.amazonaws.com/${bucket}/${path}`\n                )\n              }}\n              onComplete={() => {\n                setComplete(true)\n              }}\n            />\n          </Box>\n        </>\n      )}\n    </SimpleDialog>\n  )\n}\n\nexport default UploadToS3Dialog\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useEventCallback from \"use-event-callback\"\nimport { useDropzone } from \"react-dropzone\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\n\nconst UploadHover = styled(\"div\")({\n  fontSize: 24,\n  color: colors.grey[600],\n  textAlign: \"center\",\n  padding: 48,\n})\n\nconst emptyFunc = () => null\n\nexport default ({ content, onChangeContent, placeholder }) => {\n  const onDrop = useEventCallback((acceptedFiles) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const fileContent = e.target.result\n      onChangeContent(fileContent)\n    }\n    reader.readAsText(acceptedFiles[0])\n  })\n\n  const [lastClickTime, changeLastClickTime] = useState(0)\n  const onClick = useEventCallback((e) => {\n    if (Date.now() - lastClickTime < 400) {\n      getRootProps().onClick(e)\n    }\n    changeLastClickTime(Date.now())\n  })\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div {...getRootProps()} onClick={emptyFunc}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <UploadHover>Drop the text or csv file here.</UploadHover>\n      ) : (\n        <TextArea\n          value={content}\n          onChange={(e, v) => onChangeContent(e.target.value)}\n          onClick={onClick}\n          placeholder={placeholder}\n        />\n      )}\n    </div>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport TextAreaWithUpload from \"../TextAreaWithUpload\"\n\nconst ImportTextSnippetsDialog = ({ open, onClose, onAddSamples }) => {\n  const [content, changeContent] = useState(\"\")\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Import Text Snippets\"\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            onAddSamples(\n              content\n                .split(\"\\n\")\n                .map((l) => l.trim())\n                .filter(Boolean)\n                .map((s) => ({ document: s }))\n            )\n          },\n        },\n      ]}\n    >\n      <TextAreaWithUpload\n        content={content}\n        onChangeContent={changeContent}\n        placeholder={\n          \"Paste Snippets here\\nOne snippet per line.\\n\\nYou can also drag a text or csv file here (double click to open file dialog)\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n\nexport default ImportTextSnippetsDialog\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Button from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { useTranslation } from \"react-i18next\"\n\nconst ExplainText = styled(\"div\")({\n  marginTop: 8,\n  marginBottom: 8,\n})\nconst GoogleDriveScreenshot = styled(\"img\")({\n  width: \"100%\",\n  boxSizing: \"border-box\",\n})\n\n// Example for Google OAuth\n// https://developers.google.com/drive/api/v3/picker\n\nconst credentials = {\n  web: {\n    client_id:\n      process.env.REACT_APP_GOOGLE_DRIVE_CLIENT_ID ||\n      \"294393711342-h5aqqt3pvn8othepvsmi16iakdhi7m6j.apps.googleusercontent.com\",\n    app_id: process.env.REACT_APP_GOOGLE_DRIVE_APP_ID || \"294393711342\",\n    developer_key:\n      process.env.REACT_APP_GOOGLE_DRIVE_DEVELOPER_KEY ||\n      \"AIzaSyCoNoDnfzDBSXpt84Q75LU9UMTzvyLkRhg\",\n  },\n}\n\nconst scope = \"https://www.googleapis.com/auth/drive.readonly\"\n\nexport default ({ open, onClose, onAddSamples }) => {\n  const { t } = useTranslation()\n  const [googleScriptLoaded, setGoogleScriptLoaded] = useState(false)\n  const [pickerApiLoaded, setPickerApiLoaded] = useState(false)\n  const [oauthToken, setOAuthToken] = useState(null)\n  const [userSelectedItemsFromDrive, setUserSelectedItemsFromDrive] = useState(\n    []\n  )\n  const [isPickerOpen, setIsPickerOpen] = useState(false)\n\n  useEffect(() => {\n    const scriptElement = document.createElement(\"script\")\n    scriptElement.src = \"https://apis.google.com/js/api.js\"\n    scriptElement.async = true\n\n    scriptElement.onload = () => {\n      setGoogleScriptLoaded(true)\n    }\n\n    document.body.appendChild(scriptElement)\n    return () => {\n      scriptElement.remove()\n    }\n  }, [])\n\n  const googlePickerActionCallback = useCallback(\n    (data) => {\n      if (data.action === window.google.picker.Action.PICKED) {\n        setUserSelectedItemsFromDrive(\n          data.docs.map((googleDriveDocument) => ({\n            url: googleDriveDocument.url,\n            mimeType: googleDriveDocument.mimeType,\n            name: googleDriveDocument.name,\n            id: googleDriveDocument.id,\n          }))\n        )\n\n        setIsPickerOpen(false)\n      } else if (data.action === \"cancel\") {\n        onClose()\n      }\n    },\n    [onClose]\n  )\n\n  const createPicker = useCallback(() => {\n    if (pickerApiLoaded && oauthToken) {\n      const view = new window.google.picker.DocsView(\n        window.google.picker.ViewId.Docs,\n        window.google.picker.ViewId.FOLDERS\n      )\n        .setIncludeFolders(true)\n        .setSelectFolderEnabled(true)\n\n      const picker = new window.google.picker.PickerBuilder()\n        .enableFeature(window.google.picker.Feature.NAV_HIDDEN)\n        .enableFeature(window.google.picker.Feature.MINE_ONLY)\n        .enableFeature(window.google.picker.Feature.MULTISELECT_ENABLED)\n        .setAppId(credentials.web.app_id)\n        .setOAuthToken(oauthToken)\n        .addView(view)\n        .addView(window.google.picker.ViewId.DOCS)\n        .setDeveloperKey(credentials.web.developer_key)\n        .setCallback(googlePickerActionCallback)\n        .build()\n      picker.setVisible(true)\n      setIsPickerOpen(true)\n    }\n  }, [googlePickerActionCallback, oauthToken, pickerApiLoaded])\n\n  useEffect(() => {\n    createPicker()\n  }, [pickerApiLoaded, oauthToken, createPicker])\n\n  const handleAuthenticationResponse = useCallback(\n    (authenticationResponse) => {\n      if (authenticationResponse && !authenticationResponse.error) {\n        setOAuthToken(authenticationResponse.access_token)\n        createPicker()\n      }\n    },\n    [createPicker]\n  )\n\n  const onAuthApiLoad = useCallback(() => {\n    window.gapi.auth.authorize(\n      {\n        client_id: credentials.web.client_id,\n        scope: scope,\n        immediate: false,\n      },\n      handleAuthenticationResponse\n    )\n  }, [handleAuthenticationResponse])\n\n  const onPickerApiLoad = useCallback(() => {\n    setPickerApiLoaded(true)\n    createPicker()\n  }, [createPicker])\n\n  const onLoadPicker = useCallback(() => {\n    if (googleScriptLoaded === true) {\n      window.gapi.load(\"auth\", { callback: onAuthApiLoad })\n      window.gapi.load(\"picker\", { callback: onPickerApiLoad })\n    }\n  }, [googleScriptLoaded, onAuthApiLoad, onPickerApiLoad])\n\n  const onAddSamplesClicked = () => {\n    const samples = []\n    for (const item of userSelectedItemsFromDrive) {\n      if (item.mimeType.includes(\"image/\")) {\n        samples.push({ imageUrl: `https://drive.google.com/uc?id=${item.id}` })\n      } else if (item.mimeType.includes(\"video/\")) {\n        samples.push({ videoUrl: `https://drive.google.com/uc?id=${item.id}` })\n      }\n    }\n\n    onAddSamples(samples)\n  }\n\n  useEffect(() => {\n    if (open) {\n      onLoadPicker()\n    }\n  }, [open, googleScriptLoaded, onLoadPicker])\n\n  return (\n    <SimpleDialog\n      open={open && !isPickerOpen}\n      onClose={onClose}\n      title=\"Import from Google Drive\"\n      actions={[\n        userSelectedItemsFromDrive &&\n          userSelectedItemsFromDrive.length > 0 && {\n            text: `Add ${userSelectedItemsFromDrive.length} Samples`,\n            onClick: onAddSamplesClicked,\n          },\n      ].filter(Boolean)}\n    >\n      <Button variant=\"outlined\" onClick={onLoadPicker}>\n        {t(\"reopen-google-drive-picker\")}\n      </Button>\n      <ExplainText>\n        {t(\"import-from-google-drive-explanation-text\")}.{\" \"}\n        <b>{t(\"import-from-google-drive-explanation-bold-text\")}!</b>\n      </ExplainText>\n      <GoogleDriveScreenshot\n        src={\n          \"https://s3.amazonaws.com/asset.workaround.online/google-share-screenshot.png\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport TextAreaWithUpload from \"../TextAreaWithUpload\"\nimport * as colors from \"@material-ui/core/colors\"\nimport fromUDTCSV from \"../../utils/from-udt-csv.js\"\n\nconst InfoText = styled(\"div\")({\n  fontFamily: \"Inter\",\n  marginBottom: 20,\n  \"& a\": {\n    color: colors.blue[500],\n  },\n})\n\nconst Error = styled(\"div\")({\n  color: colors.red[500],\n  whiteSpace: \"pre-wrap\",\n  marginBottom: 20,\n})\n\nconst ImportUDTFileDialog = ({ open, onClose, onAddSamples }) => {\n  const [error, changeError] = useState(null)\n  const [content, setContent] = useState(\"\")\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Import JSON/CSV Samples\"\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            changeError(null)\n            let samples, taskOutput\n            try {\n              ;[samples, taskOutput] = JSON.parse(content).samples\n            } catch (e1) {\n              try {\n                const udt = fromUDTCSV(content)\n                ;({ samples, taskOutput } = udt)\n              } catch (e2) {\n                console.log({\n                  message: \"CSV/JSON Error Stacks\",\n                  jsonError: e1.stack,\n                  csvError: e2.stack,\n                })\n                changeError(\n                  `JSON did not parse. CSV did not parse.\\n\\nJSON Error: ${e1.toString()}\\nCSV Error: ${e2.toString()}`\n                )\n                return\n              }\n            }\n            if (!samples || samples.length === 0) {\n              changeError(\"No task data found\")\n              return\n            }\n            onAddSamples(samples, taskOutput)\n          },\n        },\n      ]}\n    >\n      <InfoText>\n        See the{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format\">\n          UDT JSON format\n        </a>{\" \"}\n        or the{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format\">\n          UDT CSV format\n        </a>{\" \"}\n        for formatting details. Or take a look at a{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format/blob/master/SAMPLE.udt.json\">\n          sample JSON\n        </a>{\" \"}\n        or{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format/blob/master/SAMPLE.udt.csv\">\n          sample CSV\n        </a>{\" \"}\n        file.\n      </InfoText>\n      <Error>{error}</Error>\n      <TextAreaWithUpload\n        content={content}\n        onChangeContent={setContent}\n        placeholder={\n          \"Paste CSV/JSON here. The file should be in the UDT JSON/CSV format.\\n\\nYou can also drag a json or csv file here (double click to open file dialog)\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n\nexport default ImportUDTFileDialog\n","// @flow weak\n\nimport React from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport { useTranslation } from \"react-i18next\"\n\nconst datasets = [\n  { name: \"Elon Musk Tweets\", type: \"text\", size: 2800 },\n  { name: \"Cats\", type: \"image\", size: 360 },\n  { name: \"VR Hand Pinching\", type: \"image\", size: 20517 },\n  { name: \"AI Generated Faces\", type: \"image\", size: 1999 },\n  { name: \"Text to Speech Audio\", type: \"audio\", size: 200 },\n]\n\nasync function getSamples(dataset) {\n  const datasetName =\n    dataset.name.toLowerCase().replace(/ /g, \"_\") + \".udt.json\"\n\n  const datasetUrl = `https://s3.amazonaws.com/datasets.workaround.online/${datasetName}`\n\n  return await fetch(datasetUrl)\n    .then((r) => r.json())\n    .then((r) => r.samples || r.taskData)\n}\n\nconst StyledButton = styled(Button)({})\n\nconst ImportToyDatasetDialog = ({ onClose, onAddSamples, open }) => {\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog onClose={onClose} open={open} title=\"Import Toy Dataset\">\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t(\"name\")}</TableCell>\n              <TableCell>{t(\"type\")}</TableCell>\n              <TableCell>{t(\"size\")}</TableCell>\n              <TableCell>{t(\"actions\")}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {datasets.map((dataset) => (\n              <TableRow key={dataset.name}>\n                <TableCell>{dataset.name}</TableCell>\n                <TableCell>{dataset.type}</TableCell>\n                <TableCell>{dataset.size}</TableCell>\n                <TableCell>\n                  <StyledButton\n                    data-import-toy-dataset-name={dataset.name}\n                    onClick={async () => {\n                      onAddSamples(await getSamples(dataset))\n                    }}\n                    variant=\"outlined\"\n                  >\n                    {t(\"import\")}\n                  </StyledButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </SimpleDialog>\n  )\n}\n\nexport default ImportToyDatasetDialog\n","const idify = (s) =>\n  s\n    .toLowerCase()\n    .replace(/[^a-z0-9]/g, \"_\")\n    .replace(/_+/g, \"_\")\n\nexport default ({\n  youtubeUrl,\n  title: videoTitle,\n  remote,\n  videoQuality,\n  downloadPath,\n  onProgress,\n  onComplete,\n  onChangeOverallProgress,\n}) => {\n  //let starttime = Date.now()\n\n  const ytdl = remote.require(\"ytdl-core\")\n  const path = remote.require(\"path\")\n\n  const videoName = videoQuality.includes(\"audio\")\n    ? `${idify(videoTitle) + \".mp3\"}`\n    : `${idify(videoTitle) + \".mp4\"}`\n\n  const fullVideoPath = path.join(downloadPath, videoName)\n  const writableVideoFile = remote\n    .require(\"fs\")\n    .createWriteStream(fullVideoPath)\n\n  const videoFormat = videoName.endsWith(\".mp3\") ? \"audio/mp3\" : \"video/mp4\"\n\n  const youtubeVideoWithOptions = ytdl(youtubeUrl, {\n    format: videoFormat,\n    quality: videoQuality !== null ? videoQuality : \"highest\",\n  })\n\n  youtubeVideoWithOptions.pipe(writableVideoFile)\n\n  /*youtubeVideoWithOptions.once(\"response\", () => {\n    starttime = Date.now()\n  })*/\n\n  youtubeVideoWithOptions.on(\"progress\", (chunkLength, downloaded, total) => {\n    const percent = downloaded / total\n    // const downloadedMinutes = (Date.now() - starttime) / 1000 / 60\n\n    // const downloadedPercentage = (percent * 100).toFixed(2)\n    // const downloadedSize = (downloaded / 1024 / 1024).toFixed(2)\n    // const downloadedMBs = (\n    //   downloaded /\n    //   1024 /\n    //   1024\n    // ).toFixed(2)\n    // const totalSize = (total / 1024 / 1024).toFixed(2)\n    // const informationText = `${downloadedPercentage}% downloaded (${downloadedMBs}MB of ${totalSize}MB)\\nestimated time left: ${(downloadedMinutes / percent -downloadedMinutes).toFixed(2)}minutes`\n\n    onProgress({\n      progress: percent * 100,\n    })\n\n    onChangeOverallProgress(percent * 100)\n  })\n\n  youtubeVideoWithOptions.on(\"end\", () => onComplete(fullVideoPath))\n\n  return {\n    cancel: () => {\n      youtubeVideoWithOptions.destroy()\n    },\n  }\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  height: 36,\n  width: \"100%\",\n  boxSizing: \"border-box\",\n  position: \"relative\",\n  marginTop: 8,\n  marginBottom: 8,\n  backgroundColor: colors.blue[50],\n})\nconst Text = styled(\"div\")({\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  paddingTop: 4,\n  fontSize: 18,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n})\nconst Bar = styled(\"div\")({\n  position: \"absolute\",\n  left: 0,\n  bottom: 0,\n  top: 0,\n  backgroundColor: colors.blue[300],\n})\n\nexport default ({ progress }) => {\n  return (\n    <Container>\n      <Bar style={{ right: 100 - progress + \"%\" }} />\n      <Text>{Math.floor(progress)}%</Text>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ProgressBar from \"../ProgressBar\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\n\nconst ProgressContainer = styled(\"div\")({\n  width: \"100%\",\n  height: \"100%\",\n})\n\nconst TotalPercentageWrapper = styled(\"div\")({\n  flexDirection: \"row\",\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n})\n\nconst Progress = ({ unitProgress, overallProgress, completedVideoTitles }) => {\n  return (\n    <ProgressContainer>\n      <ProgressBar progress={overallProgress} />\n      <ProgressBar progress={unitProgress.progress} />\n\n      <h3>Downloading: {unitProgress.title}</h3>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <TotalPercentageWrapper>\n            <h3>Downloaded Video Titles</h3>\n          </TotalPercentageWrapper>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <ul>\n            {completedVideoTitles && completedVideoTitles.length > 0\n              ? completedVideoTitles\n              : null}\n          </ul>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </ProgressContainer>\n  )\n}\n\nexport default Progress\n","const getYoutubeVideoInformation = async (\n  remote,\n  splittedURLsArray,\n  progressCallback = () => null\n) => {\n  const ytdl = remote.require(\"ytdl-core\")\n  const checkedVideos = []\n  if (splittedURLsArray.length > 0) {\n    for (let i = 0; i < splittedURLsArray.length; i++) {\n      const url = splittedURLsArray[i]\n      const video = await new Promise((resolve, reject) => {\n        ytdl.getBasicInfo(url, (err, info) => {\n          if (info && !err) {\n            resolve({\n              url,\n              title: info.title,\n            })\n          } else {\n            const errorText = `Error with video at \"${url}\"\\n\\n${err.toString()}`\n            reject(new Error(errorText))\n          }\n        })\n      })\n      checkedVideos.push(video)\n      progressCallback({\n        progress: (i / (splittedURLsArray.length - 1)) * 100,\n        text: \"Inspecting Video Information...\",\n      })\n    }\n  }\n  return checkedVideos\n}\n\nexport default getYoutubeVideoInformation\n","const splitURLsFromTextArea = (stringURLs) => {\n  const urlsHasHTTPS = []\n  const splittedURLsByNewLines = stringURLs.split(\"\\n\")\n  for (const url of splittedURLsByNewLines) {\n    if (url.includes(\"https://\")) {\n      urlsHasHTTPS.push(url)\n    }\n  }\n  return urlsHasHTTPS\n}\n\nexport default splitURLsFromTextArea\n","import React, { useState, useRef } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport Select from \"react-select\"\nimport downloadYoutubeVideo from \"./download-youtube-video\"\nimport Progress from \"./progress\"\nimport getYoutubeVideoInformation from \"./get-youtube-video-information\"\nimport splitURLsFromTextArea from \"./split-urls-from-text-area\"\nimport { useTranslation } from \"react-i18next\"\n\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\n\nconst SelectVideoQualityHeader = styled(\"h3\")({\n  lineHeight: 0,\n  textAlign: \"center\",\n})\n\nconst SelectVideoQuality = styled(\"div\")({\n  width: \"100%\",\n  marginBottom: 8,\n  paddingBottom: 4,\n})\n\nconst ErrorText = styled(\"pre\")({\n  whiteSpace: \"pre-wrap\",\n  color: \"#f00\",\n})\n\nconst LoadingText = styled(\"h2\")({\n  width: \"100%\",\n  height: \"100%\",\n  margin: \"auto auto\",\n  textAlign: \"center\",\n})\n\nconst CompletedVideoTitle = styled(\"h3\")({\n  textDecoration: \"line-through\",\n  lineHeight: 0,\n})\n\nconst qualityOptions = [\n  { value: \"136\", label: \"720p\" },\n  { value: \"135\", label: \"480p\" },\n  { value: \"lowestvideo\", label: \"Lowest Video Only\" },\n  // TODO these did not seem to work in a local test (missing video)\n  // { value: \"lowest\", label: \"lowest\" },\n  // { value: \"highest\", label: \"Highest\" },\n  { value: \"highestvideo\", label: \"Highest Video Only\" },\n  { value: \"lowestaudio\", label: \"Lowest Audio Only\" },\n  { value: \"highestaudio\", label: \"Highest Audio Only\" },\n]\n\nconst ImportFromYoutubeUrls = ({ open, onClose, onAddSamples }) => {\n  const { remote } = useElectron() || {}\n  const { t } = useTranslation()\n\n  const [urlsFromTextArea, setUrlsFromTextArea] = useState([])\n  const [videoQuality, setVideoQuality] = useState(qualityOptions[0].value)\n  const [error, setError] = useState(null)\n\n  const [unitProgress, setUnitProgress] = useState({ progress: 0 })\n  const [overallProgress, setOverallProgress] = useState(0)\n  const [isDownloading, setIsDownloading] = useState(false)\n  const [completedVideoTitles, setCompletedVideoTitles] = useState(null)\n\n  const cancelRef = useRef()\n\n  const setDefaultState = async () => {\n    setUnitProgress({ progress: 0, title: \"\" })\n    setOverallProgress(0)\n    setIsDownloading(false)\n  }\n\n  const closeDialog = async () => {\n    await setDefaultState()\n    onClose()\n  }\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={closeDialog}\n      title=\"Import from Youtube URLs\"\n      actions={[\n        {\n          text: \"Cancel Downloads\",\n          disabled: !isDownloading,\n          onClick: () => {\n            cancelRef.current()\n            setIsDownloading(false)\n          },\n        },\n        {\n          text: \"Download Youtube URLs\",\n          onClick: async () => {\n            setIsDownloading(true)\n            const { canceled, filePaths } = await remote.dialog.showOpenDialog({\n              title: \"Directory to download files to\",\n              buttonLabel: \"Download Files Here\",\n              properties: [\n                \"createDirectory\",\n                \"openDirectory\",\n                \"promptToCreate\",\n              ],\n            })\n\n            if (canceled || !filePaths) return setIsDownloading(false)\n\n            const downloadPath = filePaths[0]\n\n            const youtubeVideoInfos = await getYoutubeVideoInformation(\n              remote,\n              urlsFromTextArea,\n              ({ progress, text }) => {\n                setUnitProgress({ progress })\n              }\n            ).catch((errorMessage) => {\n              console.error(errorMessage.stack)\n              setError(errorMessage.toString())\n              return null\n            })\n            if (!youtubeVideoInfos) return setIsDownloading(false)\n\n            const completedVideoPaths = []\n            const completedVideoTitlesArray = []\n\n            const youtubeVideosCount = youtubeVideoInfos.length\n\n            for (let i = 0; i < youtubeVideosCount; i++) {\n              const youtubeVideoInfo = youtubeVideoInfos[i]\n              const videoPath = await new Promise((resolve, reject) => {\n                const { cancel } = downloadYoutubeVideo({\n                  remote,\n                  downloadPath,\n                  youtubeUrl: youtubeVideoInfo.url,\n                  title: youtubeVideoInfo.title,\n                  videoQuality,\n                  onChangeOverallProgress: (currentProgress) =>\n                    setOverallProgress(\n                      ((completedVideoTitlesArray.length * 100 +\n                        currentProgress) /\n                        (youtubeVideosCount * 100)) *\n                        100\n                    ),\n                  onProgress: ({ progress, text }) =>\n                    setUnitProgress({\n                      progress,\n                      title: youtubeVideoInfo.title,\n                      progressText: text,\n                    }),\n                  onComplete: (filePath) => resolve(filePath),\n                })\n                cancelRef.current = cancel\n              })\n\n              completedVideoTitlesArray.push(\n                <li key={i + youtubeVideoInfo.title}>\n                  <CompletedVideoTitle>\n                    {youtubeVideoInfo.title}\n                  </CompletedVideoTitle>\n                </li>\n              )\n              setCompletedVideoTitles(completedVideoTitlesArray)\n\n              completedVideoPaths.push(videoPath)\n            }\n\n            onAddSamples(\n              completedVideoPaths.map((videoPath) => ({\n                videoUrl: `file://${videoPath}`,\n              }))\n            )\n\n            setIsDownloading(false)\n          },\n          disabled: isDownloading,\n        },\n      ]}\n    >\n      {error && <ErrorText>{error}</ErrorText>}\n      {isDownloading &&\n      ((unitProgress && unitProgress.progress && unitProgress.progress > 0) ||\n        (completedVideoTitles &&\n          Array.isArray(completedVideoTitles) === true &&\n          completedVideoTitles.length > 0)) ? (\n        <Progress\n          unitProgress={unitProgress}\n          completedVideoTitles={completedVideoTitles}\n          overallProgress={overallProgress}\n        />\n      ) : isDownloading === true ? (\n        <LoadingText>Information is Loading</LoadingText>\n      ) : null}\n      {!isDownloading && (\n        <React.Fragment>\n          <SelectVideoQuality>\n            <SelectVideoQualityHeader>\n              {t(\"select-video-quality\")}\n            </SelectVideoQualityHeader>\n            <Select\n              defaultValue={qualityOptions[0]}\n              options={qualityOptions}\n              onChange={({ value }) => setVideoQuality(value)}\n            />\n          </SelectVideoQuality>\n          <TextArea\n            onChange={(e, v) => {\n              setUrlsFromTextArea(splitURLsFromTextArea(e.target.value))\n            }}\n            placeholder={\"Paste Youtube URLs here\\nOne URL per line\"}\n          />\n        </React.Fragment>\n      )}\n    </SimpleDialog>\n  )\n}\n\nexport default ImportFromYoutubeUrls\n","// @flow weak\n\nconst convertToSamplesObject = (fp) => {\n  const ext = fp.split(\".\").slice(-1)[0].toLowerCase()\n  if ([\"png\", \"jpg\", \"jpeg\"].includes(ext)) {\n    return { imageUrl: `file://${fp}` }\n  }\n  if ([\"pdf\"].includes(ext)) {\n    return { pdfUrl: `file://${fp}` }\n  }\n  if ([\"mp4\", \"webm\", \"mkv\"].includes(ext)) {\n    return { videoUrl: `file://${fp}` }\n  }\n  return null\n}\n\nasync function promptAndGetSamplesLocalDirectory({ electron }) {\n  const {\n    canceled,\n    filePaths: dirPaths,\n  } = await electron.remote.dialog.showOpenDialog({\n    title: \"Select Directory to Import Files\",\n    properties: [\"openDirectory\"],\n  })\n  if (canceled) return\n  const dirPath = dirPaths[0]\n  const fs = electron.remote.require(\"fs\")\n  const path = electron.remote.require(\"path\")\n  return (await fs.promises.readdir(dirPath))\n    .filter((fn) => fn.includes(\".\"))\n    .map((fileName) => path.join(dirPath, fileName))\n    .map(convertToSamplesObject)\n    .filter(Boolean)\n}\n\nexport default promptAndGetSamplesLocalDirectory\n","// @flow weak\n\nimport React, { useState, createContext } from \"react\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport AssignmentReturnedIcon from \"@material-ui/icons/AssignmentReturned\"\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\"\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\"\nimport DescriptionIcon from \"@material-ui/icons/Description\"\nimport PetsIcon from \"@material-ui/icons/Pets\"\nimport * as colors from \"@material-ui/core/colors\"\nimport PasteUrlsDialog from \"../PasteUrlsDialog\"\nimport ImportFromCognitoS3Dialog from \"../ImportFromCognitoS3Dialog\"\nimport ImportFromS3Dialog from \"../ImportFromS3Dialog\"\nimport UploadToS3Dialog from \"../UploadToS3Dialog\"\nimport ImportTextSnippetsDialog from \"../ImportTextSnippetsDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport classnames from \"classnames\"\nimport S3Icon from \"./S3Icon\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { setIn } from \"seamless-immutable\"\nimport useEventCallback from \"use-event-callback\"\nimport ImportFromGoogleDriveDialog from \"../ImportFromGoogleDriveDialog\"\nimport ImportUDTFileDialog from \"../ImportUDTFileDialog\"\nimport ImportToyDataset from \"../ImportToyDatasetDialog\"\nimport ImportFromYoutubeUrls from \"../ImportFromYoutubeUrls\"\nimport { FaGoogleDrive, FaYoutube } from \"react-icons/fa\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport promptAndGetSamplesFromLocalDirectory from \"./prompt-and-get-samples-from-local-directory.js\"\nimport { useTranslation } from \"react-i18next\"\nimport useAuth from \"../../utils/auth-handlers/use-auth.js\"\nimport { useAppConfig } from \"../AppConfig\"\n\nconst ButtonBase = styled(MuiButton)({\n  width: 240,\n  height: 140,\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  \"&.disabled\": {\n    backgroundColor: colors.grey[200],\n  },\n  margin: 8,\n  \"& .icon\": {\n    width: 48,\n    height: 48,\n    color: colors.grey[600],\n    \"&.disabled\": {\n      color: colors.grey[400],\n    },\n  },\n})\n\nconst DesktopOnlyText = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  \"&.disabled\": {\n    color: colors.grey[500],\n  },\n})\n\nconst SelectDialogContext = createContext()\n\nconst Button = ({\n  Icon,\n  desktopOnly,\n  isDesktop,\n  children,\n  dialog,\n  authConfiguredOnly,\n  signedInOnly,\n  disabledReason,\n  user,\n  onlySupportType,\n  type,\n}) => {\n  const posthog = usePosthog()\n\n  const { isLoggedIn, authConfig } = useAuth()\n\n  const isDisabled = () => {\n    if (disabledReason) {\n      return { disabled: true, disabledText: disabledReason }\n    } else if (desktopOnly) {\n      return { disabled: !isDesktop, disabledText: \"DESKTOP ONLY\" }\n    } else if (onlySupportType && !onlySupportType.includes(type)) {\n      return { disabled: true, disabledText: `DOESN'T SUPPORT THIS INTERFACE` }\n    } else if (authConfiguredOnly && !isLoggedIn) {\n      if (signedInOnly) {\n        return { disabled: isEmpty(user), disabledText: \"MUST BE SIGNED IN\" }\n      } else {\n        return {\n          disabled: isEmpty(authConfig),\n          disabledText: \"AUTH MUST BE CONFIGURED\",\n        }\n      }\n    } else {\n      return { disabled: false, disabledText: \"\" }\n    }\n  }\n\n  const { disabled, disabledText } = isDisabled()\n\n  return (\n    <SelectDialogContext.Consumer>\n      {({ onChangeDialog }) => {\n        return (\n          <ButtonBase\n            onClick={() => {\n              posthog.capture(\"import_button_clicked\", {\n                import_button: dialog,\n              })\n              onChangeDialog(dialog)\n            }}\n            className={classnames({ disabled })}\n            variant=\"outlined\"\n            disabled={disabled}\n          >\n            <div>\n              <Icon className={classnames(\"icon\", { disabled })} />\n              <div>{children}</div>\n              {disabled && (\n                <DesktopOnlyText className={classnames({ disabled })}>\n                  {disabledText}\n                </DesktopOnlyText>\n              )}\n            </div>\n          </ButtonBase>\n        )\n      }}\n    </SelectDialogContext.Consumer>\n  )\n}\n\nexport default ({\n  // TODO remove file, onChangeFile\n  file,\n  onChangeFile,\n\n  dataset,\n  onChangeDataset,\n  isDesktop,\n  authConfig,\n  user,\n}) => {\n  const { t } = useTranslation()\n  const [selectedDialog, changeDialog] = useState()\n  const electron = useElectron()\n  const { fromConfig } = useAppConfig()\n  const onChangeDialog = async (dialog) => {\n    switch (dialog) {\n      case \"upload-directory\": {\n        if (!electron) return\n        const localSamples = await promptAndGetSamplesFromLocalDirectory({\n          electron,\n        })\n\n        if (typeof localSamples === \"undefined\") {\n          return\n        }\n\n        onChangeDataset(\n          setIn(\n            dataset,\n            [\"samples\"],\n            (dataset.samples || []).concat(localSamples)\n          ),\n          true\n        )\n        return\n      }\n      default: {\n        return changeDialog(dialog)\n      }\n    }\n  }\n\n  const closeDialog = () => changeDialog(null)\n\n  const onAddSamples = useEventCallback(async (samplesToAdd) => {\n    onChangeDataset(\n      setIn(dataset, [\"samples\"], (dataset.samples || []).concat(samplesToAdd))\n    )\n    closeDialog()\n  })\n\n  const onAddSamplesAsToyDataset = useEventCallback(async (samplesToAdd) => {\n    onChangeDataset(\n      setIn(\n        dataset,\n        [\"samples\"],\n        (dataset.samples || []).concat(samplesToAdd)\n      ).setIn([\"usedToyDataset\"], true)\n    )\n    closeDialog()\n  })\n\n  return (\n    <SelectDialogContext.Provider value={{ onChangeDialog }}>\n      <div>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"paste-image-urls\"\n          Icon={AssignmentReturnedIcon}\n          authConfig={authConfig}\n          signedInOnly={false}\n          user={user}\n        >\n          {t(\"paste-urls\")}\n        </Button>\n        <Button\n          desktopOnly\n          isDesktop={isDesktop}\n          dialog=\"upload-directory\"\n          Icon={CreateNewFolderIcon}\n          authConfig={authConfig}\n          signedInOnly={false}\n          user={user}\n        >\n          {t(\"files-from-directory\")}\n        </Button>\n        <Button\n          dialog=\"import-text-snippets\"\n          Icon={TextFieldsIcon}\n          onlySupportType={[\"text_entity_recognition\", \"text_classification\"]}\n          type={dataset.interface.type}\n        >\n          {t(\"import-text-snippets\")}\n        </Button>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"import-toy-dataset\"\n          Icon={PetsIcon}\n        >\n          {t(\"import-toy-dataset\")}\n        </Button>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"youtube-urls\"\n          Icon={FaYoutube}\n          desktopOnly\n        >\n          {t(\"import-from\")} Youtube URLs\n        </Button>\n        <Button\n          Icon={S3Icon}\n          dialog=\"import-from-s3\"\n          disabledReason={\n            fromConfig(\"auth.s3iam.access_key_id\") ? null : \"NEED AWS IAM AUTH\"\n          }\n        >\n          {t(\"import-from-s3\")}\n        </Button>\n        <Button\n          Icon={S3Icon}\n          dialog=\"upload-to-s3\"\n          disabledReason={\n            fromConfig(\"auth.s3iam.access_key_id\") ? null : \"NEED AWS IAM AUTH\"\n          }\n        >\n          {t(\"upload-to-s3\")}\n        </Button>\n        {file && (\n          <Button\n            isDesktop={isDesktop}\n            dialog=\"import-from-cognito-s3\"\n            Icon={S3Icon}\n            authConfiguredOnly={true}\n            signedInOnly={true}\n            user={user}\n          >\n            {t(\"import-from-cognito-s3\")}\n          </Button>\n        )}\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"google-drive-file-picker\"\n          Icon={FaGoogleDrive}\n          onAddSamples={onAddSamples}\n        >\n          {t(\"import-from\")} Google Drive\n        </Button>\n        <Button dialog=\"import-csv-json\" Icon={DescriptionIcon}>\n          {t(\"import-from\")} CSV / JSON\n        </Button>\n        <ImportTextSnippetsDialog\n          open={selectedDialog === \"import-text-snippets\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <PasteUrlsDialog\n          open={selectedDialog === \"paste-image-urls\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <ImportFromS3Dialog\n          open={selectedDialog === \"import-from-s3\"}\n          onChangeFile={onChangeFile}\n          onClose={closeDialog}\n          user={user}\n          onAddSamples={onAddSamples}\n        />\n        <UploadToS3Dialog\n          open={selectedDialog === \"upload-to-s3\"}\n          onChangeFile={onChangeFile}\n          onClose={closeDialog}\n          user={user}\n          onAddSamples={onAddSamples}\n        />\n        {file && (\n          <ImportFromCognitoS3Dialog\n            file={file}\n            open={selectedDialog === \"import-from-cognito-s3\"}\n            onChangeFile={onChangeFile}\n            onClose={closeDialog}\n            user={user}\n            onAddSamples={onAddSamples}\n          />\n        )}\n        <ImportFromGoogleDriveDialog\n          open={selectedDialog === \"google-drive-file-picker\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <ImportToyDataset\n          open={selectedDialog === \"import-toy-dataset\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamplesAsToyDataset}\n        />\n        <ImportFromYoutubeUrls\n          open={selectedDialog === \"youtube-urls\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <ImportUDTFileDialog\n          open={selectedDialog === \"import-csv-json\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n      </div>\n    </SelectDialogContext.Provider>\n  )\n}\n","// @flow weak\n\nimport React from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Box from \"@material-ui/core/Box\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport immutable from \"seamless-immutable\"\nimport { useTranslation } from \"react-i18next\"\n\nconst Code = styled(\"pre\")({\n  fontSize: 8,\n})\n\nconst StyledExpansionPanel = styled(ExpansionPanel)({\n  backgroundColor: colors.grey[100],\n  border: `1px solid ${colors.grey[500]}`,\n  marginTop: 16,\n  marginBottom: 16,\n})\n\nconst StyledExpansionPanelSummary = styled(ExpansionPanelSummary)({\n  fontWeight: \"bold\",\n})\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Transform Video Keyframes\"\n      actions={[\n        {\n          text: \"Transform Video Keyframes\",\n          disabled: !dataset.samples,\n          onClick: () => {\n            const samples = dataset.samples.flatMap((item, index) => {\n              if (!item.videoUrl) return { data: item, output: item.annotation }\n              if (item.videoUrl && !item.videoFrameAt) {\n                if (!item.annotation) return []\n                if (!item.annotation.keyframes) return []\n                const { keyframes } = item[index].annotation\n                return Object.keys(keyframes).map((kf) => ({\n                  videoUrl: item.videoUrl,\n                  videoFrameAt: parseInt(kf),\n                  annotation: keyframes[kf].regions || [],\n                }))\n              }\n            })\n\n            onChangeDataset(\n              immutable(dataset)\n                .setIn(\n                  [\"samples\"],\n                  samples.map((s) => s.data)\n                )\n                .setIn([\"interface\", \"type\"], \"image_segmentation\")\n            )\n          },\n        },\n      ]}\n    >\n      {t(\"transform-video-keyframes-dialog-explanation-text\")}\n      {!dataset.samples && (\n        <b>\n          <br />\n          <br />\n          {t(\"transform-video-keyframes-dialog-explanation-warning\")}\n        </b>\n      )}\n      <StyledExpansionPanel>\n        <StyledExpansionPanelSummary>Details</StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Box display=\"flex\">\n            <Box>\n              <Code>\n                {`{\n  \"interface\": { \"type\": \"video_segmentation\" },\n  samples: [\n    {\n      videoUrl: \"https://example.com/video1.mp4\"\n    }\n  ],\n  taskOutput: [\n    {\n      keyframes: {\n        \"0\": { /* labels */ },\n        \"1000\": { /* labels */ },\n        \"2000\": { /* labels */ }\n      }\n    }\n  ]\n}`}\n              </Code>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n              <ArrowForwardIcon\n                style={{ color: colors.grey[500], width: 48, height: 48 }}\n              />\n            </Box>\n            <Box>\n              <Code>\n                {`{\n  \"interface\": { \"type\": \"image_segmentation\" },\n  samples: [\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 0\n    },\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 1000\n    },\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 2000\n    }\n  ],\n  taskOutput: [\n    { /* labels */ },\n    { /* labels */ },\n    { /* labels */ }\n  ]\n}`}\n              </Code>\n            </Box>\n          </Box>\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useElectron from \"../../utils/use-electron\"\nimport ProgressBar from \"../ProgressBar\"\nimport md5 from \"js-md5\"\nimport path from \"path\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nfunction downloadFile(urlToDownload, directoryPath, remote) {\n  const fileName = `sample_${md5(urlToDownload).slice(0, 6)}__${urlToDownload\n    .split(\"/\")\n    .slice(-1)[0]\n    .replace(/[^a-zA-Z0-9_\\-.]/g, \"\")}`\n  const downloadPath = path.join(directoryPath, fileName)\n  if (remote.require(\"fs\").existsSync(downloadPath)) return downloadPath\n  return new Promise((resolve, reject) => {\n    remote.require(\"download-file\")(\n      urlToDownload,\n      {\n        directory: directoryPath,\n        filename: fileName,\n      },\n      (err) => {\n        if (err) return reject(err)\n        return resolve(downloadPath)\n      }\n    )\n  })\n}\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { remote } = useElectron() || {}\n  const [progress, changeProgress] = useState(null)\n  const [errors, changeErrors] = useState(\"\")\n\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Download URLs\"\n      actions={[\n        {\n          text: \"Download URLs\",\n          disabled: progress !== null,\n          onClick: async () => {\n            changeProgress(0)\n            const {\n              cancelled,\n              filePaths: [directoryPath] = [null],\n            } = await remote.dialog.showOpenDialog({\n              title: \"Directory to download files to\",\n              buttonLabel: \"Download Files Here\",\n              properties: [\n                \"createDirectory\",\n                \"openDirectory\",\n                \"promptToCreate\",\n              ],\n            })\n            if (cancelled || !directoryPath) {\n              changeProgress(null)\n              return\n            }\n\n            const newSamples = [...dataset.samples]\n            let errors = \"\"\n\n            // Iterate over each task datum and download the url, then convert\n            // the path to a filesystem path\n            for (let i = 0; i < dataset.samples.length; i++) {\n              const td = dataset.samples[i]\n              let urlKey\n              if (td.imageUrl) urlKey = \"imageUrl\"\n              if (td.videoUrl) urlKey = \"videoUrl\"\n              if (!urlKey || !td[urlKey].startsWith(\"http\")) continue\n              const urlToDownload = td[urlKey]\n              try {\n                const pathToFile = await downloadFile(\n                  urlToDownload,\n                  directoryPath,\n                  remote\n                )\n                newSamples[i] = {\n                  ...td,\n                  [urlKey]: `file://${pathToFile}`,\n                }\n              } catch (e) {\n                errors += `Skipping sample, error downloading samples[${i}] (${urlToDownload}): ${e.toString()} \\n`\n              }\n              changeProgress((i / dataset.samples.length) * 100)\n            }\n\n            onChangeDataset(setIn(dataset, [\"samples\"], newSamples))\n\n            changeErrors(errors)\n            changeProgress(100)\n          },\n        },\n      ]}\n    >\n      {t(\"download-urls-dialog\")}\n      <ProgressBar progress={progress || 0} />\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useElectron from \"../../utils/use-electron\"\nimport ProgressBar from \"../ProgressBar\"\nimport { setIn, without } from \"seamless-immutable\"\nimport { useTranslation } from \"react-i18next\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nconst getFfmpegTimeCode = (ms) => {\n  const cs = Math.floor(ms / 10) % 100\n  const ss = Math.floor(ms / 1000) % 60\n  const mn = Math.floor(ms / 1000 / 60) % 60\n  const hr = Math.floor(ms / 1000 / 60 / 60)\n  return [hr, \":\", mn, \":\", ss, \".\", cs]\n    .map((n) => (typeof n === \"number\" ? n.toString().padStart(2, \"0\") : n))\n    .join(\"\")\n}\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { remote } = useElectron() || {}\n  const [progress, changeProgress] = useState(null)\n  const [errors, changeErrors] = useState(\"\")\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Video Frames to Images\"\n      actions={[\n        {\n          text: \"Convert Video Frames to Images\",\n          disabled: progress !== null,\n          onClick: async () => {\n            changeProgress(0)\n            let errors = \"\"\n            const pathToFfmpeg = remote.require(\"ffmpeg-static\")\n            if (!pathToFfmpeg) {\n              changeErrors(\n                \"There was an issue using ffmpeg. Please create an issue on the github repository.\"\n              )\n            }\n\n            const shell = remote.require(\"any-shell-escape\")\n            const { exec } = remote.require(\"child_process\")\n            const newsamples = [...dataset.samples]\n            let transformsPerformed = 0\n\n            for (let i = 0; i < dataset.samples.length; i++) {\n              const td = dataset.samples[i]\n              if (td.videoUrl && td.videoFrameAt !== undefined) {\n                if (td.videoUrl.startsWith(\"http\")) {\n                  errors += `Sample ${i} has a url to a video, videos must be downloaded before extracting frames.`\n                  continue\n                }\n                transformsPerformed++\n\n                const videoPath = td.videoUrl.replace(/^file:\\/\\//, \"\")\n                const imageOutputPath =\n                  videoPath + \"__frameat__\" + td.videoFrameAt + \".jpg\"\n                const ffmpegCommand = shell([\n                  pathToFfmpeg,\n                  \"-y\",\n                  \"-ss\",\n                  getFfmpegTimeCode(td.videoFrameAt),\n                  \"-i\",\n                  videoPath,\n                  \"-frames:v\",\n                  1,\n                  imageOutputPath,\n                ])\n                await new Promise((resolve, reject) => {\n                  exec(ffmpegCommand, { timeout: 5000 }, (err) => {\n                    if (err) return reject(err)\n                    resolve()\n                  })\n                })\n                newsamples[i] = {\n                  ...without(\n                    without(dataset.samples[i], \"videoUrl\"),\n                    \"videoFrameAt\"\n                  ),\n                  imageUrl: `file://${imageOutputPath}`,\n                }\n              }\n              changeProgress((i / dataset.samples.length) * 100)\n            }\n\n            if (transformsPerformed === 0) {\n              errors +=\n                \"No transforms were performed, do all of your video samples have frames specified? You may need to convert the keyframes to samples.\"\n            }\n\n            onChangeDataset(setIn(dataset, [\"samples\"], newsamples))\n\n            changeErrors(errors)\n            changeProgress(100)\n          },\n        },\n      ]}\n    >\n      {t(\"transform-video-frames-to-images-dialog-explanation-text\")}\n      <ProgressBar progress={progress || 0} />\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","const uploadFileToTransferSh = async ({ fileName, fileURL, remote }) => {\n  window.remote = remote // TODO remove\n  const remoteURL = `https://files.universaldatatool.com/${fileName}` ///${hashedFileName}\n\n  const axios = remote.require(\"axios\")\n  const exactFilePath = fileURL.split(\"file://\")[1]\n\n  const fsFileBuffer = remote.require(\"fs\").readFileSync(exactFilePath)\n\n  const uploadedFileURL = await axios\n    .put(remoteURL, fsFileBuffer)\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data\n      }\n    })\n\n  return uploadedFileURL.replace(\n    \"universaldatatool.com/\",\n    \"universaldatatool.com/get/\"\n  )\n}\n\nexport default uploadFileToTransferSh\n","const splitFileNameFromFileURL = (fileURL) => {\n  if (fileURL.startsWith(\"file://\")) {\n    const splittedFullFileName = fileURL.split(\"/\")\n    const fullFileName = splittedFullFileName[splittedFullFileName.length - 1]\n    return fullFileName\n  }\n}\n\nexport default splitFileNameFromFileURL\n","const getFileURLKey = (item) => {\n  if (item.imageUrl) return \"imageUrl\"\n  if (item.videoUrl) return \"videoUrl\"\n  if (item.audioUrl) return \"audioUrl\"\n  return null\n}\n\nexport default getFileURLKey\n","import uploadFileToTransferSh from \"./upload-file-to-transfersh\"\nimport splitFileNameFromFileURL from \"./split-file-name-from-file-url\"\nimport getFileURLKey from \"./get-file-url-key\"\nimport { setIn } from \"seamless-immutable\"\n\n// TODO move to utils directory\nconst idify = (s) =>\n  s\n    .toLowerCase()\n    .replace(/[^a-z0-9]/g, \"_\")\n    .replace(/_+/g, \"_\")\n\nconst transformFileURLsToWebURLs = async ({\n  dataset,\n  onChangeDataset,\n  setProgress,\n  remote,\n}) => {\n  const newsamples = []\n\n  const progressUnit = 100 / dataset.samples.length\n  for (\n    let samplesIndex = 0;\n    samplesIndex < dataset.samples.length;\n    samplesIndex++\n  ) {\n    const samplesItem = dataset.samples[samplesIndex]\n\n    const fileURLKey = getFileURLKey(samplesItem)\n\n    if (!fileURLKey) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    const fileURL = samplesItem[fileURLKey]\n\n    if (!fileURL.startsWith(\"file://\")) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    const halfProgressOfUnit = progressUnit * samplesIndex\n    setProgress(halfProgressOfUnit)\n\n    const fileName = idify(splitFileNameFromFileURL(fileURL))\n\n    const webURLOfUploadedFile = await uploadFileToTransferSh({\n      fileName,\n      fileURL,\n      remote,\n    }).catch((e) => console.warn(e))\n\n    if (!webURLOfUploadedFile) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    newsamples.push({\n      ...samplesItem,\n      [fileURLKey]: webURLOfUploadedFile,\n    })\n  }\n  setProgress(100)\n  onChangeDataset(setIn(dataset, [\"samples\"], newsamples))\n}\n\nexport default transformFileURLsToWebURLs\n","import React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport transformFileURLsToWebURLs from \"./functions/transform-file-urls-to-web-urls\"\nimport ProgressBar from \"../ProgressBar\"\nimport useElectron from \"../../utils/use-electron\"\nimport { useTranslation } from \"react-i18next\"\n\nconst TransformLocalFilesToWebURLs = ({\n  open,\n  onClose,\n  dataset,\n  onChangeDataset,\n}) => {\n  const { t } = useTranslation()\n\n  const [progress, setProgress] = useState(0)\n  const { remote } = useElectron() || {}\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Local Files to Web URLs\"\n      actions={[\n        {\n          text: \"Convert Local Files to Web URLs\",\n          onClick: async () =>\n            await transformFileURLsToWebURLs({\n              dataset,\n              onChangeDataset,\n              setProgress,\n              remote,\n            }),\n        },\n      ]}\n    >\n      {t(\"transform-local-files-to-web-urls-explanation\")}\n      <ProgressBar progress={progress} />\n    </SimpleDialog>\n  )\n}\n\nexport default TransformLocalFilesToWebURLs\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { setIn } from \"seamless-immutable\"\nimport Box from \"@material-ui/core/Box\"\nimport range from \"lodash/range\"\nimport TextField from \"@material-ui/core/TextField\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const [errors, setErrors] = useState(\"\")\n  const [rows, setRows] = useState(\"2\")\n  const [columns, setColumns] = useState(\"2\")\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Image Samples into Segments\"\n      actions={[\n        {\n          text: \"Convert Image Samples into Segments\",\n          onClick: async () => {\n            const [nRows, nCols] = [parseInt(rows), parseInt(columns)]\n\n            try {\n              onChangeDataset(\n                setIn(\n                  dataset,\n                  [\"samples\"],\n                  range(nRows).flatMap((y) =>\n                    range(nCols).flatMap((x) =>\n                      dataset.samples.map((s) => {\n                        return setIn(s, [\"allowedArea\"], {\n                          x: x / nCols,\n                          y: y / nRows,\n                          width: 1 / nCols,\n                          height: 1 / nRows,\n                        })\n                      })\n                    )\n                  )\n                )\n              )\n              onClose()\n            } catch (e) {\n              setErrors(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      This transformation will multiply the number of image samples you have,\n      splitting each individual image into segments. The image is not processed\n      and clipped, but rather an \"allowedArea\" property is placed on the sample\n      which limits the labeling to a section of the image. This is useful when\n      trying to reduce the amount of work per image sample.\n      <Box padding={4}>\n        <TextField\n          label=\"Rows\"\n          value={rows}\n          onChange={(e) => setRows(e.target.value)}\n        />\n        <TextField\n          label=\"Columns\"\n          value={columns}\n          onChange={(e) => setColumns(e.target.value)}\n        />\n      </Box>\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { setIn } from \"seamless-immutable\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const [errors, setErrors] = useState(\"\")\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Segments to Image Samples\"\n      actions={[\n        {\n          text: \"Convert Segments to Image Samples\",\n          onClick: async () => {\n            try {\n              const imageUrls = Array.from(\n                new Set(dataset.samples.map((s) => s.imageUrl))\n              )\n              const newSamples = []\n              for (const imageUrl of imageUrls) {\n                const pieces = dataset.samples.filter(\n                  (s) => s.imageUrl === imageUrl\n                )\n                newSamples.push({\n                  imageUrl,\n                  annotation: pieces\n                    .flatMap((p) => p.annotation)\n                    .filter(Boolean),\n                })\n              }\n              onChangeDataset(setIn(dataset, [\"samples\"], newSamples))\n              onClose()\n            } catch (e) {\n              setErrors(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      This transformation will take image samples that have been split into\n      segments (each with an allowedArea), and combine them into one image\n      sample again. This is typically executed after a splitting operation when\n      the samples are to be recombined.\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState, createContext } from \"react\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ImageIcon from \"@material-ui/icons/Image\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport * as colors from \"@material-ui/core/colors\"\nimport useIsDesktop from \"../../utils/use-is-desktop\"\nimport classnames from \"classnames\"\nimport OndemandVideoIcon from \"@material-ui/icons/OndemandVideo\"\nimport TransformVideoKeyframesDialog from \"../TransformVideoKeyframesDialog\"\nimport DownloadURLsDialog from \"../DownloadURLsDialog\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport CollectionsIcon from \"@material-ui/icons/Collections\"\nimport TransformVideoFramesToImagesDialog from \"../TransformVideoFramesToImagesDialog\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport TransformLocalFilesToWebURLs from \"../TransformLocalFilesToWebURLs\"\nimport TransformImageSamplesIntoSegmentsDialog from \"../TransformImageSamplesIntoSegmentsDialog\"\nimport TransformSegmentsIntoImageSamplesDialog from \"../TransformSegmentsIntoImageSamplesDialog\"\n\nimport ComputerIcon from \"@material-ui/icons/Computer\"\nimport LanguageIcon from \"@material-ui/icons/Language\"\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\"\nimport GridOnIcon from \"@material-ui/icons/GridOn\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ButtonBase = styled(MuiButton)({\n  width: 240,\n  height: 140,\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  \"&.disabled\": {\n    backgroundColor: colors.grey[200],\n  },\n  margin: 8,\n  \"& .icon\": {\n    width: 36,\n    height: 36,\n    color: colors.grey[600],\n    \"&.disabled\": {\n      color: colors.grey[400],\n    },\n  },\n})\n\nconst DesktopOnlyText = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  \"&.disabled\": {\n    color: colors.grey[500],\n  },\n})\n\nconst SelectDialogContext = createContext()\n\nconst Button = ({ Icon1, Icon2, desktopOnly, children, dialog, disabled }) => {\n  const isDesktop = useIsDesktop()\n  const posthog = usePosthog()\n  const { t } = useTranslation()\n\n  disabled =\n    disabled === undefined ? (desktopOnly ? !isDesktop : false) : disabled\n  return (\n    <SelectDialogContext.Consumer>\n      {({ onChangeDialog }) => {\n        return (\n          <ButtonBase\n            onClick={() => {\n              onChangeDialog(dialog)\n              posthog.capture(\"transform_button_clicked\", {\n                transform_button: dialog,\n              })\n            }}\n            className={classnames({ disabled })}\n            variant=\"outlined\"\n            disabled={disabled}\n          >\n            <div>\n              {Icon1 && Icon2 ? (\n                <>\n                  <Icon1 className={classnames(\"icon\", { disabled })} />\n                  <ArrowForwardIcon\n                    className={classnames(\"icon\", { disabled })}\n                  />\n                  <Icon2 className={classnames(\"icon\", { disabled })} />\n                </>\n              ) : (\n                <Icon1 className={classnames(\"icon\", { disabled })} />\n              )}\n              <div>{children}</div>\n              {desktopOnly && (\n                <DesktopOnlyText className={classnames({ disabled })}>\n                  {t(\"desktop-only\").toUpperCase()}\n                </DesktopOnlyText>\n              )}\n            </div>\n          </ButtonBase>\n        )\n      }}\n    </SelectDialogContext.Consumer>\n  )\n}\n\nexport default ({ dataset, onChangeDataset }) => {\n  const { t } = useTranslation()\n  const [selectedDialog, changeDialog] = useState()\n  const onChangeDialog = async (dialog) => {\n    switch (dialog) {\n      case \"convert-keyframes-to-samples\": {\n        break\n      }\n      default: {\n        return changeDialog(dialog)\n      }\n    }\n  }\n  const closeDialog = () => changeDialog(null)\n  return (\n    <SelectDialogContext.Provider value={{ onChangeDialog }}>\n      <div>\n        <Button\n          disabled={dataset.interface.type !== \"video_segmentation\"}\n          dialog=\"convert-keyframes-to-samples\"\n          Icon1={OndemandVideoIcon}\n          Icon2={CollectionsIcon}\n        >\n          {t(\"convert-video-keyframes-to-samples\")}\n        </Button>\n        <Button\n          desktopOnly\n          dialog=\"convert-local-files-to-web-urls\"\n          Icon1={ComputerIcon}\n          Icon2={LanguageIcon}\n        >\n          {t(\"transform-local-files-to-web-urls\")}\n        </Button>\n        <Button desktopOnly dialog=\"download-urls\" Icon1={GetAppIcon}>\n          {t(\"download\")} URLs\n        </Button>\n        <Button\n          desktopOnly\n          dialog=\"convert-video-frames-to-images\"\n          Icon1={OndemandVideoIcon}\n          Icon2={ImageIcon}\n        >\n          {t(\"convert-video-frames-to-images\")}\n        </Button>\n        <Button\n          dialog=\"split-image-samples-into-segments\"\n          Icon1={CheckBoxOutlineBlankIcon}\n          Icon2={GridOnIcon}\n        >\n          Split Image Samples into Segments\n        </Button>\n        <Button\n          dialog=\"combine-segments-into-image-samples\"\n          Icon1={GridOnIcon}\n          Icon2={CheckBoxOutlineBlankIcon}\n        >\n          Combine Segments into Image Samples\n        </Button>\n        <TransformVideoKeyframesDialog\n          open={selectedDialog === \"convert-keyframes-to-samples\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          onChangeDataset={(...args) => {\n            onChangeDataset(...args)\n            closeDialog()\n          }}\n        />\n        <DownloadURLsDialog\n          open={selectedDialog === \"download-urls\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          desktopOnly\n          onChangeDataset={onChangeDataset}\n        ></DownloadURLsDialog>\n        <TransformLocalFilesToWebURLs\n          dataset={dataset}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n          desktopOnly\n          open={selectedDialog === \"convert-local-files-to-web-urls\"}\n        ></TransformLocalFilesToWebURLs>\n        <TransformVideoFramesToImagesDialog\n          open={selectedDialog === \"convert-video-frames-to-images\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          desktopOnly\n          onChangeDataset={onChangeDataset}\n        ></TransformVideoFramesToImagesDialog>\n        <TransformImageSamplesIntoSegmentsDialog\n          dataset={dataset}\n          open={selectedDialog === \"split-image-samples-into-segments\"}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n        ></TransformImageSamplesIntoSegmentsDialog>\n        <TransformSegmentsIntoImageSamplesDialog\n          dataset={dataset}\n          open={selectedDialog === \"combine-segments-into-image-samples\"}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n        ></TransformSegmentsIntoImageSamplesDialog>\n      </div>\n    </SelectDialogContext.Provider>\n  )\n}\n","// @flow weak\n\nimport React, { useMemo, useState } from \"react\"\nimport DataTable from \"react-data-table-component\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport SampleGrid from \"../SampleGrid\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport AppsIcon from \"@material-ui/icons/Apps\"\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\"\nimport TableChartIcon from \"@material-ui/icons/TableChart\"\nimport Box from \"@material-ui/core/Box\"\nimport ImportIcon from \"@material-ui/icons/Publish\"\nimport ImportPage from \"../ImportPage\"\nimport TransformPage from \"../TransformPage\"\nimport useIsDesktop from \"../../utils/use-is-desktop.js\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  padding: 16,\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  boxSizing: \"border-box\",\n})\n\nconst SampleCounter = styled(\"div\")({\n  fontSize: 14,\n  color: colors.grey[600],\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  flexGrow: 1,\n})\n\nconst ExpandedRowContainer = styled(\"div\")({\n  padding: 8,\n  border: \"#888 solid 1px\",\n  borderTop: \"none\",\n  borderRadius: 4,\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  boxShadow: \"inset 0 3px 3px rgba(0,0,0,0.2)\",\n})\nconst ExpandedRowTitle = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n})\nconst ExpandedRowCode = styled(\"pre\")({ whiteSpace: \"pre-wrap\", fontSize: 11 })\n\nconst ExpandedRow = ({ data }) => {\n  const { annotation, ...input } = data\n\n  return (\n    <ExpandedRowContainer>\n      <Grid spacing={2} container>\n        <Grid item xs={6}>\n          <ExpandedRowTitle>samples[{data.index}]:</ExpandedRowTitle>\n          <ExpandedRowCode>{JSON.stringify(input, null, \"  \")}</ExpandedRowCode>\n        </Grid>\n        <Grid item xs={6}>\n          <ExpandedRowTitle>samples[{data.index}].annotation:</ExpandedRowTitle>\n          <ExpandedRowCode>\n            {JSON.stringify(annotation, null, \"  \")}\n          </ExpandedRowCode>\n        </Grid>\n      </Grid>\n    </ExpandedRowContainer>\n  )\n}\n\nexport const SamplesView = ({\n  file,\n  dataset,\n  openSampleInputEditor,\n  openSampleLabelEditor,\n  deleteSample,\n  onChangeDataset,\n  onChangeFile,\n  authConfig,\n  user,\n}) => {\n  const isDesktop = useIsDesktop()\n  const [currentTab, changeTabState] = useState(\n    (dataset.samples || []).length === 0\n      ? \"import\"\n      : window.localStorage.lastSampleTab || \"grid\"\n  )\n  const changeTab = (tab) => {\n    changeTabState(tab)\n    window.localStorage.lastSampleTab = tab\n  }\n  const columns = useMemo(() => {\n    if (!dataset.samples) return []\n    const columns = [\n      {\n        name: \"Index\",\n        selector: \"index\",\n        sortable: true,\n      },\n    ]\n    const knownKeys = new Set()\n    for (const td of dataset.samples) {\n      for (const key in td) {\n        if (!knownKeys.has(key)) {\n          columns.push({\n            name: key,\n            selector: key,\n            cell: (row) =>\n              typeof row[key] !== \"object\"\n                ? row[key]\n                : JSON.stringify(row[key]).slice(0, 30) + \"...\",\n          })\n          knownKeys.add(key)\n        }\n      }\n    }\n    columns.push({\n      name: \"Edit\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised onClick={() => openSampleInputEditor(row.index)}>\n          <EditIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    columns.push({\n      name: \"Label\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised onClick={() => openSampleLabelEditor(row.index)}>\n          <BorderColorIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    columns.push({\n      name: \"Delete\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised primary onClick={() => deleteSample(row.index)}>\n          <DeleteIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    return columns\n  }, [\n    dataset.samples,\n    deleteSample,\n    openSampleInputEditor,\n    openSampleLabelEditor,\n  ])\n\n  const data = useMemo(() => {\n    if (!dataset.samples) return []\n    return dataset.samples.map((td, i) => ({\n      ...td,\n      index: i,\n    }))\n  }, [dataset.samples])\n  return (\n    <Container>\n      <Box display=\"flex\">\n        <Tabs value={currentTab} onChange={(e, newTab) => changeTab(newTab)}>\n          <Tab icon={<ImportIcon />} label=\"Import\" value=\"import\" />\n          <Tab icon={<SlideshowIcon />} label=\"Transform\" value=\"transform\" />\n          <Tab icon={<AppsIcon />} label=\"Grid\" value=\"grid\" />\n          <Tab icon={<TableChartIcon />} label=\"Table\" value=\"table\" />\n        </Tabs>\n        <SampleCounter>\n          {(dataset.samples || []).length} Samples\n          <br />\n          {(dataset.samples || []).filter((s) => s.annotation).length} Labels\n        </SampleCounter>\n      </Box>\n      <Box paddingTop={2} />\n      <Box flexGrow={1}>\n        {currentTab === \"import\" && (\n          <ImportPage\n            file={file}\n            isDesktop={isDesktop}\n            onChangeFile={(file) => onChangeFile(file)}\n            onImportPageShouldExit={() => changeTab(\"grid\")}\n            onChangeDataset={(newOHA) => onChangeDataset(newOHA)}\n            dataset={dataset}\n            authConfig={authConfig}\n            user={user}\n          />\n        )}\n        {currentTab === \"transform\" && (\n          <TransformPage\n            isDesktop={isDesktop}\n            dataset={dataset}\n            onChangeDataset={(dataset, shouldViewChange) => {\n              onChangeDataset(dataset)\n              if (shouldViewChange) {\n                changeTab(\"grid\")\n              }\n            }}\n          />\n        )}\n        {currentTab === \"grid\" && (\n          <SampleGrid\n            tablePaginationPadding={6}\n            count={(dataset.samples || []).length}\n            samples={dataset.samples || []}\n            completed={(dataset.samples || []).map((s) =>\n              Boolean(s.annotation)\n            )}\n            onClick={(sampleIndex) => {\n              openSampleLabelEditor(sampleIndex)\n            }}\n          />\n        )}\n        {currentTab === \"table\" && (\n          <DataTable\n            title=\"Samples\"\n            expandableRowsComponent={<ExpandedRow />}\n            expandableRows\n            dense\n            columns={columns}\n            data={data}\n            pagination\n            paginationPerPage={10}\n            paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n          />\n        )}\n      </Box>\n    </Container>\n  )\n}\nexport default SamplesView\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn, asMutable } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"regionTypesAllowed\",\n      title: \"Region Types Allowed\",\n      description: \"What types of regions can be drawn on the image.\",\n      type: \"multiple-dropdown\",\n      choices: [\"bounding-box\", \"polygon\", \"point\"],\n    },\n    {\n      name: \"multipleRegions\",\n      title: \"Can multiple regions be created?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"multipleRegionLabels\",\n      title: \"Multiple Region Labels Allowed?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Available Labels\",\n      description:\n        \"If you're labeling regions on an image, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () =>\n      asMutable(\n        {\n          multipleRegions: Boolean(\n            iface.multipleRegions || iface.multipleRegions === undefined\n          ),\n          multipleRegionLabels: Boolean(iface.multipleRegionLabels),\n          regionTypesAllowed: iface.regionTypesAllowed,\n          labels:\n            (iface.labels || []).map((a) =>\n              typeof a === \"string\" ? { id: a, description: a } : a\n            ) || [],\n        },\n        { deep: true }\n      ),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\n\nconst maxClusterPresets = {\n  low: 1000,\n  medium: 8000,\n  high: 64000,\n}\nconst maxClusterPresetsRev = Object.entries(maxClusterPresets).reduce(\n  (acc, curr) => {\n    acc[curr[1]] = curr[0]\n    return acc\n  },\n  {}\n)\n\nconst form = {\n  questions: [\n    {\n      name: \"labels\",\n      title: \"Available Labels\",\n      description:\n        \"If you're labeling regions on an image, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n    {\n      name: \"description\",\n      title: \"Sidebar Description\",\n      description: \"Any instructions or notes in markdown.\",\n      type: \"text\",\n    },\n    {\n      name: \"autosegMode\",\n      type: \"dropdown\",\n      title: \"Automatic Segmentation Engine\",\n      choices: [\"simple\", \"autoseg\"],\n    },\n    {\n      name: \"autosegPreset\",\n      type: \"dropdown\",\n      visibleIf: \"{autosegMode}='autoseg'\",\n      title: \"Super Pixel Quality\",\n      choices: [\"low\", \"medium\", \"high\", \"custom\"],\n    },\n    {\n      name: \"autosegMaxClusters\",\n      type: \"slider\",\n      visibleIf: \"{autosegPreset}='custom'\",\n      title: \"Total Super Pixels\",\n      min: 10,\n      max: 100000,\n      step: 10,\n      defaultValue: 1000,\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      description: iface.description,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n      autosegMode: iface.autoSegmentationEngine?.mode,\n      autosegPreset:\n        maxClusterPresetsRev[\n          iface.autoSegmentationEngine?.maxClusters || 1000\n        ] || \"custom\",\n      autosegMaxClusters: iface.autoSegmentationEngine?.maxClusters || 1000,\n    }),\n    [iface]\n  )\n  return (\n    <>\n      <Survey\n        noActions\n        variant=\"flat\"\n        defaultAnswers={defaultAnswers}\n        onQuestionChange={(questionId, newValue, answers) => {\n          onChange({\n            ...iface,\n            description: answers.description,\n            labels: answers.labels,\n            autoSegmentationEngine: {\n              mode: answers.autosegMode,\n              maxClusters:\n                answers.autosegPreset === \"custom\"\n                  ? answers.autosegMaxClusters\n                  : maxClusterPresets[answers.autosegPreset],\n            },\n          })\n        }}\n        form={form}\n      />\n    </>\n  )\n}\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"multiple\",\n      title: \"Allow multiple classifications per image?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description: \"Classifications or tags to be labeled.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      allowMultiple: false,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n    }),\n    [iface.labels]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"multiple\",\n      title: \"Allow Multiple Classifications\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description: \"Classifications or tags to be labeled.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        { cellType: \"text\", name: \"displayName\", title: \"Display Name\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      multiple: false,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, displayName: a, description: a } : a\n        ) || [],\n    }),\n    [iface.labels]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","import React from \"react\"\nimport Survey from \"material-survey/components/Survey\"\n\n// https://gist.github.com/DimazzzZ/4e2a5a6c8c6f67900091#gistcomment-2021620\nconst languages = [\n  { value: \"ab\", text: \"Abkhazian\" },\n  { value: \"aa\", text: \"Afar\" },\n  { value: \"af\", text: \"Afrikaans\" },\n  { value: \"ak\", text: \"Akan\" },\n  { value: \"sq\", text: \"Albanian\" },\n  { value: \"am\", text: \"Amharic\" },\n  { value: \"ar\", text: \"Arabic\" },\n  { value: \"an\", text: \"Aragonese\" },\n  { value: \"hy\", text: \"Armenian\" },\n  { value: \"as\", text: \"Assamese\" },\n  { value: \"av\", text: \"Avaric\" },\n  { value: \"ae\", text: \"Avestan\" },\n  { value: \"ay\", text: \"Aymara\" },\n  { value: \"az\", text: \"Azerbaijani\" },\n  { value: \"bm\", text: \"Bambara\" },\n  { value: \"ba\", text: \"Bashkir\" },\n  { value: \"eu\", text: \"Basque\" },\n  { value: \"be\", text: \"Belarusian\" },\n  { value: \"bn\", text: \"Bengali\" },\n  { value: \"bh\", text: \"Bihari languages\" },\n  { value: \"bi\", text: \"Bislama\" },\n  { value: \"bs\", text: \"Bosnian\" },\n  { value: \"br\", text: \"Breton\" },\n  { value: \"bg\", text: \"Bulgarian\" },\n  { value: \"my\", text: \"Burmese\" },\n  { value: \"ca\", text: \"Catalan, Valencian\" },\n  { value: \"km\", text: \"Central Khmer\" },\n  { value: \"ch\", text: \"Chamorro\" },\n  { value: \"ce\", text: \"Chechen\" },\n  { value: \"ny\", text: \"Chichewa, Chewa, Nyanja\" },\n  { value: \"zh\", text: \"Chinese\" },\n  { value: \"cu\", text: \"Church Slavonic, Old Bulgarian, Old Church Slavonic\" },\n  { value: \"cv\", text: \"Chuvash\" },\n  { value: \"kw\", text: \"Cornish\" },\n  { value: \"co\", text: \"Corsican\" },\n  { value: \"cr\", text: \"Cree\" },\n  { value: \"hr\", text: \"Croatian\" },\n  { value: \"cs\", text: \"Czech\" },\n  { value: \"da\", text: \"Danish\" },\n  { value: \"dv\", text: \"Divehi, Dhivehi, Maldivian\" },\n  { value: \"nl\", text: \"Dutch, Flemish\" },\n  { value: \"dz\", text: \"Dzongkha\" },\n  { value: \"en\", text: \"English\" },\n  { value: \"eo\", text: \"Esperanto\" },\n  { value: \"et\", text: \"Estonian\" },\n  { value: \"ee\", text: \"Ewe\" },\n  { value: \"fo\", text: \"Faroese\" },\n  { value: \"fj\", text: \"Fijian\" },\n  { value: \"fi\", text: \"Finnish\" },\n  { value: \"fr\", text: \"French\" },\n  { value: \"ff\", text: \"Fulah\" },\n  { value: \"gd\", text: \"Gaelic, Scottish Gaelic\" },\n  { value: \"gl\", text: \"Galician\" },\n  { value: \"lg\", text: \"Ganda\" },\n  { value: \"ka\", text: \"Georgian\" },\n  { value: \"de\", text: \"German\" },\n  { value: \"ki\", text: \"Gikuyu, Kikuyu\" },\n  { value: \"el\", text: \"Greek (Modern)\" },\n  { value: \"kl\", text: \"Greenlandic, Kalaallisut\" },\n  { value: \"gn\", text: \"Guarani\" },\n  { value: \"gu\", text: \"Gujarati\" },\n  { value: \"ht\", text: \"Haitian, Haitian Creole\" },\n  { value: \"ha\", text: \"Hausa\" },\n  { value: \"he\", text: \"Hebrew\" },\n  { value: \"hz\", text: \"Herero\" },\n  { value: \"hi\", text: \"Hindi\" },\n  { value: \"ho\", text: \"Hiri Motu\" },\n  { value: \"hu\", text: \"Hungarian\" },\n  { value: \"is\", text: \"Icelandic\" },\n  { value: \"io\", text: \"Ido\" },\n  { value: \"ig\", text: \"Igbo\" },\n  { value: \"id\", text: \"Indonesian\" },\n  {\n    value: \"ia\",\n    text: \"Interlingua (International Auxiliary Language Association)\",\n  },\n  { value: \"ie\", text: \"Interlingue\" },\n  { value: \"iu\", text: \"Inuktitut\" },\n  { value: \"ik\", text: \"Inupiaq\" },\n  { value: \"ga\", text: \"Irish\" },\n  { value: \"it\", text: \"Italian\" },\n  { value: \"ja\", text: \"Japanese\" },\n  { value: \"jv\", text: \"Javanese\" },\n  { value: \"kn\", text: \"Kannada\" },\n  { value: \"kr\", text: \"Kanuri\" },\n  { value: \"ks\", text: \"Kashmiri\" },\n  { value: \"kk\", text: \"Kazakh\" },\n  { value: \"rw\", text: \"Kinyarwanda\" },\n  { value: \"kv\", text: \"Komi\" },\n  { value: \"kg\", text: \"Kongo\" },\n  { value: \"ko\", text: \"Korean\" },\n  { value: \"kj\", text: \"Kwanyama, Kuanyama\" },\n  { value: \"ku\", text: \"Kurdish\" },\n  { value: \"ky\", text: \"Kyrgyz\" },\n  { value: \"lo\", text: \"Lao\" },\n  { value: \"la\", text: \"Latin\" },\n  { value: \"lv\", text: \"Latvian\" },\n  { value: \"lb\", text: \"Letzeburgesch, Luxembourgish\" },\n  { value: \"li\", text: \"Limburgish, Limburgan, Limburger\" },\n  { value: \"ln\", text: \"Lingala\" },\n  { value: \"lt\", text: \"Lithuanian\" },\n  { value: \"lu\", text: \"Luba-Katanga\" },\n  { value: \"mk\", text: \"Macedonian\" },\n  { value: \"mg\", text: \"Malagasy\" },\n  { value: \"ms\", text: \"Malay\" },\n  { value: \"ml\", text: \"Malayalam\" },\n  { value: \"mt\", text: \"Maltese\" },\n  { value: \"gv\", text: \"Manx\" },\n  { value: \"mi\", text: \"Maori\" },\n  { value: \"mr\", text: \"Marathi\" },\n  { value: \"mh\", text: \"Marshallese\" },\n  { value: \"ro\", text: \"Moldovan, Moldavian, Romanian\" },\n  { value: \"mn\", text: \"Mongolian\" },\n  { value: \"na\", text: \"Nauru\" },\n  { value: \"nv\", text: \"Navajo, Navaho\" },\n  { value: \"nd\", text: \"Northern Ndebele\" },\n  { value: \"ng\", text: \"Ndonga\" },\n  { value: \"ne\", text: \"Nepali\" },\n  { value: \"se\", text: \"Northern Sami\" },\n  { value: \"no\", text: \"Norwegian\" },\n  { value: \"nb\", text: \"Norwegian Bokmål\" },\n  { value: \"nn\", text: \"Norwegian Nynorsk\" },\n  { value: \"ii\", text: \"Nuosu, Sichuan Yi\" },\n  { value: \"oc\", text: \"Occitan (post 1500)\" },\n  { value: \"oj\", text: \"Ojibwa\" },\n  { value: \"or\", text: \"Oriya\" },\n  { value: \"om\", text: \"Oromo\" },\n  { value: \"os\", text: \"Ossetian, Ossetic\" },\n  { value: \"pi\", text: \"Pali\" },\n  { value: \"pa\", text: \"Panjabi, Punjabi\" },\n  { value: \"ps\", text: \"Pashto, Pushto\" },\n  { value: \"fa\", text: \"Persian\" },\n  { value: \"pl\", text: \"Polish\" },\n  { value: \"pt\", text: \"Portuguese\" },\n  { value: \"qu\", text: \"Quechua\" },\n  { value: \"rm\", text: \"Romansh\" },\n  { value: \"rn\", text: \"Rundi\" },\n  { value: \"ru\", text: \"Russian\" },\n  { value: \"sm\", text: \"Samoan\" },\n  { value: \"sg\", text: \"Sango\" },\n  { value: \"sa\", text: \"Sanskrit\" },\n  { value: \"sc\", text: \"Sardinian\" },\n  { value: \"sr\", text: \"Serbian\" },\n  { value: \"sn\", text: \"Shona\" },\n  { value: \"sd\", text: \"Sindhi\" },\n  { value: \"si\", text: \"Sinhala, Sinhalese\" },\n  { value: \"sk\", text: \"Slovak\" },\n  { value: \"sl\", text: \"Slovenian\" },\n  { value: \"so\", text: \"Somali\" },\n  { value: \"st\", text: \"Sotho, Southern\" },\n  { value: \"nr\", text: \"South Ndebele\" },\n  { value: \"es\", text: \"Spanish, Castilian\" },\n  { value: \"su\", text: \"Sundanese\" },\n  { value: \"sw\", text: \"Swahili\" },\n  { value: \"ss\", text: \"Swati\" },\n  { value: \"sv\", text: \"Swedish\" },\n  { value: \"tl\", text: \"Tagalog\" },\n  { value: \"ty\", text: \"Tahitian\" },\n  { value: \"tg\", text: \"Tajik\" },\n  { value: \"ta\", text: \"Tamil\" },\n  { value: \"tt\", text: \"Tatar\" },\n  { value: \"te\", text: \"Telugu\" },\n  { value: \"th\", text: \"Thai\" },\n  { value: \"bo\", text: \"Tibetan\" },\n  { value: \"ti\", text: \"Tigrinya\" },\n  { value: \"to\", text: \"Tonga (Tonga Islands)\" },\n  { value: \"ts\", text: \"Tsonga\" },\n  { value: \"tn\", text: \"Tswana\" },\n  { value: \"tr\", text: \"Turkish\" },\n  { value: \"tk\", text: \"Turkmen\" },\n  { value: \"tw\", text: \"Twi\" },\n  { value: \"ug\", text: \"Uighur, Uyghur\" },\n  { value: \"uk\", text: \"Ukrainian\" },\n  { value: \"ur\", text: \"Urdu\" },\n  { value: \"uz\", text: \"Uzbek\" },\n  { value: \"ve\", text: \"Venda\" },\n  { value: \"vi\", text: \"Vietnamese\" },\n  { value: \"vo\", text: \"Volap_k\" },\n  { value: \"wa\", text: \"Walloon\" },\n  { value: \"cy\", text: \"Welsh\" },\n  { value: \"fy\", text: \"Western Frisian\" },\n  { value: \"wo\", text: \"Wolof\" },\n  { value: \"xh\", text: \"Xhosa\" },\n  { value: \"yi\", text: \"Yiddish\" },\n  { value: \"yo\", text: \"Yoruba\" },\n  { value: \"za\", text: \"Zhuang, Chuang\" },\n  { value: \"zu\", text: \"Zulu\" },\n]\n\nconst form = {\n  questions: [\n    {\n      name: \"transcriptionType\",\n      title: \"Transcription Type\",\n      type: \"dropdown\",\n      choices: [\"simple\", \"proper\"],\n    },\n    {\n      name: \"phraseBank\",\n      title: \"Phrase Bank\",\n      description: \"URL of single-column CSV or TXT file with allowed phrases\",\n      type: \"text\",\n    },\n    {\n      name: \"onlyUseWordsInPhraseBank\",\n      title: \"Only Use Words In Phrase Bank\",\n      type: \"boolean\",\n    },\n    {\n      name: \"language\",\n      title: \"Language\",\n      type: \"dropdown\",\n      // https://gist.github.com/DimazzzZ/4e2a5a6c8c6f67900091#gistcomment-2858621\n      choices: languages,\n    },\n    {\n      name: \"description\",\n      title: \"Description\",\n      type: \"multiline-text\",\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      onQuestionChange={(questionId, newValue, answers) => {\n        if (newValue.value) {\n          onChange({ ...iface, [questionId]: newValue.value })\n        } else {\n          onChange({ ...iface, [questionId]: newValue })\n        }\n      }}\n      form={form}\n    />\n  )\n}\n","import React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    // TODO uncomment when description can be seen in the interface somewhere\n    // {\n    //   name: \"description\",\n    //   title: \"Description\",\n    //   type: \"multiline-text\",\n    // },\n    // TODO enable when we support overlap\n    // {\n    //   name: \"overlapAllowed\",\n    //   title: \"Overlap Allowed\",\n    //   type: \"boolean\",\n    // },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      type: \"matrixdynamic\",\n      hasOther: true,\n      columns: [\n        {\n          cellType: \"text\",\n          name: \"id\",\n          title: \"ID\",\n        },\n        {\n          cellType: \"text\",\n          name: \"displayName\",\n          title: \"Display Name\",\n        },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      description: iface.description,\n      overlapAllowed: Boolean(\n        iface.overlapAllowed || iface.overlapAllowed === undefined\n      ),\n      labels: (iface.labels || []).map((column) =>\n        typeof column === \"string\"\n          ? {\n              id: column,\n              displayName: column,\n              description: column,\n            }\n          : column\n      ),\n    }),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n      defaultAnswers={defaultAnswers}\n    />\n  )\n}\n","import React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"entityLabels\",\n      title: \"Entity Labels\",\n      type: \"matrixdynamic\",\n      columns: [\n        {\n          cellType: \"text\",\n          name: \"id\",\n          title: \"ID\",\n        },\n        {\n          cellType: \"text\",\n          name: \"displayName\",\n          title: \"Display Name\",\n        },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description\",\n        },\n      ],\n    },\n    {\n      name: \"relationLabels\",\n      title: \"Relation Labels\",\n      type: \"matrixdynamic\",\n      columns: [\n        {\n          cellType: \"text\",\n          name: \"id\",\n          title: \"ID\",\n        },\n        {\n          cellType: \"text\",\n          name: \"displayName\",\n          title: \"Display Name\",\n        },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      entityLabels: (iface.entityLabels || []).map((column) =>\n        typeof column === \"string\"\n          ? {\n              id: column,\n              displayName: column,\n              description: column,\n            }\n          : column\n      ),\n      relationLabels: (iface.relationLabels || []).map((column) =>\n        typeof column === \"string\"\n          ? {\n              id: column,\n              displayName: column,\n              description: column,\n            }\n          : column\n      ),\n    }),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n      defaultAnswers={defaultAnswers}\n    />\n  )\n}\n","// @flow\n\nimport React, { useRef, useState } from \"react\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Survey from \"material-survey/components/Survey\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ButtonsContainer = styled(\"div\")({\n  textAlign: \"right\",\n})\nconst NoQuestions = styled(\"div\")({\n  fontSize: 18,\n  color: colors.grey[500],\n  fontWeight: \"bold\",\n  textAlign: \"center\",\n  padding: 16,\n})\n\nconst Question = styled(\"div\")({\n  position: \"relative\",\n  padding: 16,\n  margin: 16,\n  borderLeft: `4px solid ${colors.blue[400]}`,\n  // backgroundColor: colors.grey[50],\n  borderRadius: 4,\n  paddingRight: 64,\n  \"& .quitButton\": {\n    position: \"absolute\",\n    right: 4,\n    top: 4,\n  },\n  \"& > *\": {\n    margin: 8,\n  },\n})\nconst PreviewHeader = styled(\"div\")({\n  fontSize: 12,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  textTransform: \"uppercase\",\n  margin: 16,\n  marginBottom: 32,\n})\n\nconst StyledButton = styled(Button)({\n  position: \"relative\",\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n  },\n})\n\nexport default ({ iface, onChange }) => {\n  const anchorEl = useRef()\n  const [menuOpen, changeMenuOpen] = useState(false)\n  const { questions = [] } = iface.surveyjs || {}\n\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      {questions.length === 0 ? (\n        <NoQuestions>No Inputs, Click Add Input Below</NoQuestions>\n      ) : (\n        questions.map((q, i) => (\n          <Question key={i}>\n            <div style={{ display: \"flex\" }}>\n              <TextField\n                variant=\"outlined\"\n                label=\"Name / Identifier\"\n                value={q.name || \"\"}\n                onChange={(e) => {\n                  onChange(\n                    setIn(\n                      iface,\n                      [\"surveyjs\", \"questions\", i, \"name\"],\n                      e.target.value\n                    )\n                  )\n                }}\n              />\n              <TextField\n                style={{ marginLeft: 8, flexGrow: 1 }}\n                variant=\"outlined\"\n                label=\"Title / Instruction\"\n                value={q.title || \"\"}\n                onChange={(e) => {\n                  onChange(\n                    setIn(\n                      iface,\n                      [\"surveyjs\", \"questions\", i, \"title\"],\n                      e.target.value\n                    )\n                  )\n                }}\n              />\n            </div>\n            <Grid container>\n              <Grid item xs={6}>\n                {q.choices && (\n                  <TextField\n                    style={{\n                      marginTop: 8,\n                      paddingRight: 8,\n                      boxSizing: \"border-box\",\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"Choices (One per Line)\"\n                    defaultValue={q.choices.join(\"\\n\") || \"\"}\n                    onChange={(e) => {\n                      onChange(\n                        setIn(\n                          iface,\n                          [\"surveyjs\", \"questions\", i, \"choices\"],\n                          e.target.value.split(\"\\n\")\n                        )\n                      )\n                    }}\n                    multiline\n                    rows={6}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <PreviewHeader>Preview</PreviewHeader>\n                <Survey\n                  noActions\n                  variant=\"flat\"\n                  key={q}\n                  form={{ questions: [q] }}\n                />\n              </Grid>\n            </Grid>\n            <IconButton\n              className=\"quitButton\"\n              onClick={() => {\n                onChange(\n                  setIn(\n                    iface,\n                    [\"surveyjs\", \"questions\"],\n                    [...questions.slice(0, i), ...questions.slice(i + 1)]\n                  )\n                )\n              }}\n            >\n              <CancelIcon />\n            </IconButton>\n          </Question>\n        ))\n      )}\n      <ButtonsContainer>\n        <StyledButton onClick={(e) => changeMenuOpen(true)} ref={anchorEl}>\n          <AddCircleIcon className=\"icon\" />\n          {t(\"add-input\")}\n        </StyledButton>\n      </ButtonsContainer>\n      <Menu\n        anchorEl={anchorEl && anchorEl.current}\n        open={menuOpen}\n        onClose={() => changeMenuOpen(false)}\n      >\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                ((iface.surveyjs || {}).questions || []).concat([\n                  {\n                    name: \"input\" + questions.length,\n                    type: \"text\",\n                    title: \"New Text Input\",\n                  },\n                ])\n              )\n            )\n          }}\n        >\n          {t(\"text-input\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.surveyjs.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"radiogroup\",\n                  title: \"New Exclusive Choice Input\",\n                  choices: [\"Yes\", \"Maybe\", \"No\"],\n                })\n              )\n            )\n          }}\n        >\n          {t(\"exclusive-choice\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.surveyjs.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"checkbox\",\n                  title: \"New Checkbox Input\",\n                  choices: [\"A\", \"B\", \"C\"],\n                })\n              )\n            )\n          }}\n        >\n          Checkboxes\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                iface.surveyjs.questions.concat({\n                  name: \"input\" + questions.length,\n                  type: \"boolean\",\n                  title: \"New Boolean Input\",\n                })\n              )\n            )\n          }}\n        >\n          Boolean\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"dropdown\",\n                  title: \"New Dropdown Input\",\n                  choices: [\"A\", \"B\", \"C\"],\n                })\n              )\n            )\n          }}\n        >\n          {t(\"drop-down-autocomplete\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                iface.surveyjs.questions.concat([\n                  {\n                    name: \"input\" + questions.length,\n                    type: \"multiple-dropdown\",\n                    title: \"New Multiple Dropdown Input\",\n                    choices: [\"A\", \"B\", \"C\"],\n                  },\n                ])\n              )\n            )\n          }}\n        >\n          {t(\"multiple-item-dropdown-autocomplete\")}\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n","import React from \"react\"\nimport ConfigureInterface from \"../ConfigureInterface\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Fields = styled(\"div\")({})\nconst StyledExpansionPanel = styled(ExpansionPanel)({\n  marginTop: 16,\n  border: \"2px solid #000\",\n})\nconst StyledButton = styled(Button)({\n  width: \"100%\",\n  margin: 16,\n  marginLeft: 0,\n})\n\nexport default ({ iface, onChange }) => {\n  const { t } = useTranslation()\n\n  return (\n    <React.Fragment>\n      <Fields>\n        {(iface.fields || []).map((f, fieldIndex) => (\n          <StyledExpansionPanel key={fieldIndex}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              {f.fieldName}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Box display=\"flex\" flexDirection=\"column\">\n                <TextField\n                  label=\"Field Name\"\n                  value={f.fieldName}\n                  onChange={(e) => {\n                    onChange(\n                      setIn(\n                        [\"fields\", fieldIndex, \"fieldName\"],\n                        e.target.value,\n                        iface\n                      )\n                    )\n                  }}\n                />\n                <ConfigureInterface\n                  isNested\n                  dataset={{ interface: f.interface }}\n                  onChange={(newFieldInterface) => {\n                    onChange({\n                      ...iface,\n                      fields: iface.fields.map((field) =>\n                        field.fieldName === f.fieldName\n                          ? { ...f, interface: newFieldInterface }\n                          : field\n                      ),\n                    })\n                  }}\n                />\n                <Button\n                  onClick={() => {\n                    onChange({\n                      ...iface,\n                      fields: iface.fields.filter(\n                        ({ fieldName }) => fieldName !== f.fieldName\n                      ),\n                    })\n                  }}\n                >\n                  {t(\"remove-field\")}\n                </Button>\n              </Box>\n            </ExpansionPanelDetails>\n          </StyledExpansionPanel>\n        ))}\n        <StyledButton\n          onClick={() => {\n            onChange(\n              setIn(\n                iface,\n                [\"fields\"],\n                (iface.fields || []).concat({\n                  fieldOrder: (iface.fields || []).length,\n                  fieldName: \"New Field\",\n                  interface: {\n                    type: \"empty\",\n                  },\n                })\n              )\n            )\n          }}\n        >\n          {t(\"add-new-field\")}\n        </StyledButton>\n      </Fields>\n    </React.Fragment>\n  )\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ExplanationTextHeader = styled(\"div\")({\n  textAlign: \"center\",\n  paddingTop: 30,\n  paddingBottom: 50,\n  userSelect: \"none\",\n})\n\nconst ExplanationText = styled(\"h3\")({\n  fontWeight: \"bold\",\n  color: colors.grey[500],\n})\n\nconst GithubLink = styled(\"a\")({\n  color: colors.blue[500],\n})\n\nconst Configure3D = () => {\n  const { t } = useTranslation()\n\n  return (\n    <ExplanationTextHeader>\n      <ExplanationText>\n        {t(\"configure-3d-explanation-text-part-1\")}{\" \"}\n        <GithubLink\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/UniversalDataTool/universal-data-tool/issues/20\"\n        >\n          this\n        </GithubLink>{\" \"}\n        {t(\"github-issue\")}.\n      </ExplanationText>\n    </ExplanationTextHeader>\n  )\n}\n\nexport default Configure3D\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"regionTypesAllowed\",\n      title: \"Region Types Allowed\",\n      description: \"What types of regions can be drawn on the image.\",\n      type: \"multiple-dropdown\",\n      choices: [\"bounding-box\", \"polygon\", \"point\"],\n    },\n    {\n      name: \"multipleRegions\",\n      title: \"Can multiple regions be created?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"multipleRegionLabels\",\n      title: \"Multiple Region Labels Allowed?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description:\n        \"If you're labeling regions on an video frames, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      multipleRegions: Boolean(\n        iface.multipleRegions || iface.multipleRegions === undefined\n      ),\n      multipleRegionLabels: Boolean(iface.multipleRegionLabels),\n      regionTypesAllowed: iface.regionTypesAllowed,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n    }),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\nimport enTranslation from \"./locales/en/translation.json\"\nimport frTranslation from \"./locales/fr/translations.json\"\nimport cnTranslation from \"./locales/cn/translations.json\"\n\nimport LanguageDetector from \"i18next-browser-languagedetector\"\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n\n    resources: {\n      fr: {\n        translation: frTranslation,\n      },\n      en: {\n        translation: enTranslation,\n      },\n      cn: {\n        translation: cnTranslation,\n      },\n    },\n  })\n\nexport default i18n\n","import { useState, useMemo, useDebugValue } from \"react\"\n\nexport default (clobber, defaultIfNotClobbered) => {\n  const isClobbered = useMemo(\n    () => clobber !== undefined,\n    //eslint-disable-next-line\n    []\n  )\n  useDebugValue(isClobbered ? \"Clobbered\" : \"Not Clobbered\")\n  const [notClobberedValue, setNotClobberedValue] = useState(\n    defaultIfNotClobbered\n  )\n  if (isClobbered) {\n    return [clobber, undefined]\n  } else {\n    return [notClobberedValue, setNotClobberedValue]\n  }\n}\n","import React from \"react\"\nimport NLPAnnotator from \"react-nlp-annotate\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nexport const TextClassification = (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const { annotation } = props.samples[currentSampleIndex]\n  // TODO remove legacy support for availableLabels\n  if (!props.interface.labels && props.interface.availableLabels) {\n    props.interface.labels = props.interface.availableLabels\n  }\n  const initialLabels = annotation\n    ? typeof annotation === \"string\"\n      ? [annotation]\n      : annotation\n    : undefined\n  if (!props.interface.labels) {\n    throw new Error(\"Labels not defined. Try defining some labels in Setup\")\n  }\n  let labels = props.interface.labels\n    .map((l) =>\n      typeof l === \"string\" ? { id: l, description: l, displayName: l } : l\n    )\n    .map((l) => (!l.displayName ? { ...l, displayName: l.id } : l))\n  return (\n    <NLPAnnotator\n      key={currentSampleIndex}\n      type=\"label-document\"\n      labels={labels}\n      multipleLabels={props.interface.multiple}\n      document={props.samples[currentSampleIndex].document}\n      initialLabels={initialLabels}\n      hotkeysEnabled={!props.disableHotkeys}\n      onPrev={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex - 1)\n        } else {\n          props.onExit(\"go-to-previous\")\n        }\n      }}\n      onNext={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex + 1)\n        } else {\n          props.onExit(\"go-to-next\")\n        }\n      }}\n      onFinish={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        props.onExit()\n      }}\n    />\n  )\n}\n\nexport default TextClassification\n","export const simpleSequenceToEntitySequence = (simpleSeq) => {\n  const entSeq = []\n  let charsPassed = 0\n  for (const seq of simpleSeq) {\n    if (seq.label) {\n      entSeq.push({\n        text: seq.text,\n        label: seq.label,\n        start: charsPassed,\n        end: charsPassed + seq.text.length,\n      })\n    }\n    charsPassed += seq.text.length\n  }\n  return entSeq\n}\n\nexport const simpleSequenceAndRelationsToEntitySequence = ({\n  sequence: simpleSeq,\n  relationships,\n}) => {\n  const textIdsInRelation = new Set(\n    (relationships || []).flatMap((r) => [r.from, r.to])\n  )\n\n  const entSeq = []\n  let charsPassed = 0\n  for (const seq of simpleSeq) {\n    if (seq.label || (seq.textId && textIdsInRelation.has(seq.textId))) {\n      entSeq.push({\n        text: seq.text,\n        textId: seq.textId,\n        label: seq.label,\n        start: charsPassed,\n        end: charsPassed + seq.text.length,\n      })\n    }\n    charsPassed += seq.text.length\n  }\n  return { entities: entSeq, relations: relationships }\n}\n\nexport const entitySequenceToSimpleSeq = (doc, entSeq) => {\n  if (!entSeq) return undefined\n  const simpleSeq = []\n  entSeq = [...entSeq]\n  entSeq.sort((a, b) => a.start - b.start)\n  let nextEntity = 0\n  for (let i = 0; i < doc.length; i++) {\n    if ((entSeq[nextEntity] || {}).start === i) {\n      simpleSeq.push({\n        text: entSeq[nextEntity].text,\n        label: entSeq[nextEntity].label,\n        textId:\n          entSeq[nextEntity].textId || Math.random().toString(36).slice(-6),\n      })\n      i = entSeq[nextEntity].end\n      simpleSeq.push({ text: \"\" })\n      nextEntity += 1\n    } else {\n      if (simpleSeq.length === 0 || simpleSeq[simpleSeq.length - 1].label) {\n        simpleSeq.push({\n          text: doc[i],\n          textId: Math.random().toString(36).slice(-6),\n        })\n      } else {\n        simpleSeq[simpleSeq.length - 1].text += doc[i]\n      }\n    }\n  }\n  return simpleSeq.filter((item) => item.text.length > 0)\n}\n","import React from \"react\"\nimport NLPAnnotator from \"react-nlp-annotate\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\nimport Box from \"@material-ui/core/Box\"\nimport {\n  simpleSequenceToEntitySequence,\n  entitySequenceToSimpleSeq,\n} from \"./convert-react-nlp-annotate-types\"\n\nexport const TextEntityRecognition = (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const initialSequence = props.samples[currentSampleIndex].annotation\n    ? entitySequenceToSimpleSeq(\n        props.samples[currentSampleIndex].document,\n        props.samples[currentSampleIndex].annotation.entities\n      )\n    : undefined\n\n  if (!props.interface.labels && !props.interface.availableLabels) {\n    throw new Error(\"Labels not defined. Try adding some labels in setup.\")\n  }\n\n  return (\n    <NLPAnnotator\n      key={currentSampleIndex}\n      titleContent={<Box paddingLeft={4}>Sample {currentSampleIndex}</Box>}\n      type=\"label-sequence\"\n      document={props.samples[currentSampleIndex].document}\n      labels={props.interface.labels || props.interface.availableLabels}\n      initialSequence={initialSequence}\n      hotkeysEnabled={!props.disableHotkeys}\n      onPrev={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, {\n          entities: simpleSequenceToEntitySequence(result),\n        })\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex - 1)\n        } else {\n          props.onExit(\"go-to-previous\")\n        }\n      }}\n      onNext={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, {\n          entities: simpleSequenceToEntitySequence(result),\n        })\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex + 1)\n        } else {\n          props.onExit(\"go-to-next\")\n        }\n      }}\n      onFinish={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, {\n          entities: simpleSequenceToEntitySequence(result),\n        })\n        props.onExit()\n      }}\n    />\n  )\n}\n\nexport default TextEntityRecognition\n","import React from \"react\"\nimport NLPAnnotator from \"react-nlp-annotate\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\nimport Box from \"@material-ui/core/Box\"\nimport {\n  simpleSequenceAndRelationsToEntitySequence,\n  entitySequenceToSimpleSeq,\n} from \"../TextEntityRecognition/convert-react-nlp-annotate-types\"\n\nexport const TextEntityRelations = (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const initialSequence = props.samples[currentSampleIndex].annotation\n    ? entitySequenceToSimpleSeq(\n        props.samples[currentSampleIndex].document,\n        props.samples[currentSampleIndex].annotation.entities\n      )\n    : undefined\n\n  const initialRelations =\n    props.samples[currentSampleIndex].annotation?.relations || []\n\n  if (!props.interface.relationLabels) {\n    throw new Error(\n      \"Relation labels not defined. Try adding some labels in setup.\"\n    )\n  }\n\n  return (\n    <NLPAnnotator\n      key={currentSampleIndex}\n      titleContent={<Box paddingLeft={4}>Sample {currentSampleIndex}</Box>}\n      type=\"label-relationships\"\n      document={props.samples[currentSampleIndex].document}\n      entityLabels={props.interface.entityLabels}\n      relationshipLabels={props.interface.relationLabels}\n      initialSequence={initialSequence}\n      initialRelationships={initialRelations}\n      hotkeysEnabled={!props.disableHotkeys}\n      onPrev={(result) => {\n        props.onSaveTaskOutputItem(\n          currentSampleIndex,\n          simpleSequenceAndRelationsToEntitySequence(result)\n        )\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex - 1)\n        } else {\n          props.onExit(\"go-to-previous\")\n        }\n      }}\n      onNext={(result) => {\n        props.onSaveTaskOutputItem(\n          currentSampleIndex,\n          simpleSequenceAndRelationsToEntitySequence(result)\n        )\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex + 1)\n        } else {\n          props.onExit(\"go-to-next\")\n        }\n      }}\n      onFinish={(result) => {\n        props.onSaveTaskOutputItem(\n          currentSampleIndex,\n          simpleSequenceAndRelationsToEntitySequence(result)\n        )\n        props.onExit()\n      }}\n    />\n  )\n}\n\nexport default TextEntityRelations\n","// @flow\n\n// RIA = React Image Annotate\n\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandomColor() {\n  var h = getRandomInt(0, 360)\n  var s = 100\n  var l = 50\n  return \"hsl(\"\n    .concat(h.toString(), \",\")\n    .concat(s.toString(), \"%,\")\n    .concat(l.toString(), \"%)\")\n}\n\nexport const rid = () => Math.random().toString().split(\".\")[1]\n\nexport const convertToRIARegionFmt = (region) => {\n  switch (region.regionType) {\n    case \"bounding-box\": {\n      return {\n        id: region.id || rid(),\n        cls: region.classification,\n        tags: region.labels,\n        color: region.color || getRandomColor(),\n        type: \"box\",\n        x: region.centerX - region.width / 2,\n        y: region.centerY - region.height / 2,\n        w: region.width,\n        h: region.height,\n      }\n    }\n    case \"point\": {\n      return {\n        id: region.id || rid(),\n        type: \"point\",\n        tags: region.labels,\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        x: region.x,\n        y: region.y,\n      }\n    }\n    case \"polygon\": {\n      return {\n        id: region.id || rid(),\n        type: \"polygon\",\n        tags: region.labels,\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        open: false,\n        points: region.points.map((p) => [p.x, p.y]),\n      }\n    }\n    case \"line\":\n    case \"pixel-mask\": {\n      throw new Error(`Unsupported region \"${JSON.stringify(region)}\"`)\n    }\n    default:\n      return null\n  }\n}\n\nexport const convertFromRIARegionFmt = (riaRegion) => {\n  switch (riaRegion.type) {\n    case \"point\": {\n      return {\n        regionType: \"point\",\n        id: riaRegion.id,\n        x: riaRegion.x,\n        y: riaRegion.y,\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n      }\n    }\n    case \"box\": {\n      return {\n        regionType: \"bounding-box\",\n        id: riaRegion.id,\n        centerX: riaRegion.x + riaRegion.w / 2,\n        centerY: riaRegion.y + riaRegion.h / 2,\n        width: riaRegion.w,\n        height: riaRegion.h,\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n      }\n    }\n    case \"polygon\": {\n      return {\n        regionType: \"polygon\",\n        id: riaRegion.id,\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n        points: riaRegion.points.map(([x, y]) => ({ x, y })),\n      }\n    }\n    default:\n      throw new Error(`Unsupported riaRegion \"${JSON.stringify(riaRegion)}\"`)\n  }\n}\n\nexport const convertToRIAImageFmt = ({\n  title,\n  taskDatum: td,\n  index: i,\n  output,\n}) => {\n  td = td || {}\n  const regions = !output\n    ? undefined\n    : Array.isArray(output)\n    ? output.map(convertToRIARegionFmt)\n    : [convertToRIARegionFmt(output)]\n\n  if (td.imageUrl) {\n    return {\n      src: td.imageUrl,\n      name: title || `Sample ${i}`,\n      regions,\n    }\n  } else if (td.videoUrl && td.videoFrameAt !== undefined) {\n    return {\n      src: td.videoUrl,\n      frameTime: td.videoFrameAt,\n      name: title || `Sample ${i}`,\n      regions,\n    }\n  }\n  throw new Error(`Task Datum not supported \"${JSON.stringify(td)}\"`)\n}\n\nexport const convertToRIAKeyframes = (keyframes) => {\n  const newKeyframes = {}\n  for (const key in keyframes) {\n    newKeyframes[key] = {\n      regions: keyframes[key].regions.map(convertToRIARegionFmt),\n    }\n  }\n  return newKeyframes\n}\n","// @flow\n\nimport React, { useState, useMemo } from \"react\"\nimport Annotator from \"react-image-annotate\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useEventCallback from \"use-event-callback\"\nimport {\n  convertFromRIARegionFmt,\n  convertToRIAImageFmt,\n} from \"../../utils/ria-format.js\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nconst regionTypeToTool = {\n  \"bounding-box\": \"create-box\",\n  polygon: [\"create-polygon\", \"create-expanding-line\"],\n  point: \"create-point\",\n  \"allowed-area\": \"modify-allowed-area\",\n}\n\nconst Container = styled(\"div\")({\n  \"& .fullscreen\": { height: \"100%\" },\n})\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport default ({\n  sampleIndex: globalSampleIndex,\n  interface: iface,\n  sampleIndex,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  // TODO DEPRECATE onSaveTaskOutputItem\n  onSaveTaskOutputItem,\n  onModifySample,\n}) => {\n  // TODO remove legacy \"availableLabels\" support\n  if (iface.availableLabels && !iface.labels) {\n    iface.labels = iface.availableLabels\n  }\n\n  const [selectedIndex, setSelectedIndex] = useClobberedState(\n    globalSampleIndex,\n    0\n  )\n  const [showTags, changeShowTags] = useState(true)\n  const [selectedTool, changeSelectedTool] = useState(\"select\")\n\n  const { regionTypesAllowed = [\"bounding-box\"] } = iface\n\n  const isClassification = !Boolean(iface.multipleRegionLabels)\n  const isPixel = iface.type === \"image_pixel_segmentation\"\n\n  const saveCurrentIndexAnnotation = useEventCallback((output) => {\n    const img = output.images[0]\n    const annotation = multipleRegions\n      ? (img.regions || []).map(convertFromRIARegionFmt)\n      : convertToRIAImageFmt((img.regions || [])[0])\n    if (onModifySample) {\n      const { x, y, w: width, h: height } = output.allowedArea || {}\n      onModifySample(selectedIndex, {\n        annotation,\n        ...(output.allowedArea\n          ? {\n              allowedArea: { x, y, width, height },\n            }\n          : {}),\n      })\n    } else {\n      onSaveTaskOutputItem(selectedIndex, annotation)\n    }\n  })\n\n  const labelProps = useMemo(\n    () =>\n      isPixel\n        ? {\n            regionClsList: [\"background\"]\n              .concat(iface.labels || [])\n              .map((l) => (typeof l === \"string\" ? l : l.id)),\n          }\n        : isClassification\n        ? {\n            regionClsList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          }\n        : {\n            regionTagList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          },\n    [isClassification, iface.labels, isPixel]\n  )\n\n  const multipleRegions =\n    iface.multipleRegions || iface.multipleRegions === undefined\n\n  const onExit = useEventCallback((output, nextAction) => {\n    saveCurrentIndexAnnotation(output)\n    changeShowTags(output.showTags)\n    changeSelectedTool(output.selectedTool)\n    if (containerProps.onExit) containerProps.onExit(nextAction)\n  })\n  const onNextImage = useEventCallback((output) => {\n    if (selectedIndex + 1 >= samples.length) {\n      onExit(output, \"go-to-next\")\n    } else {\n      saveCurrentIndexAnnotation(output)\n      if (setSelectedIndex) {\n        setSelectedIndex(selectedIndex + 1)\n      } else {\n        onExit(output, \"go-to-next\")\n      }\n    }\n  })\n  const onPrevImage = useEventCallback((output) => {\n    if (selectedIndex - 1 < 0) {\n      onExit(output, \"go-to-previous\")\n    } else {\n      saveCurrentIndexAnnotation(output)\n      if (setSelectedIndex) {\n        setSelectedIndex(selectedIndex - 1)\n      } else {\n        onExit(output, \"go-to-previous\")\n      }\n    }\n  })\n\n  const singleImageList = useMemo(() => {\n    return [\n      convertToRIAImageFmt({\n        title: containerProps.datasetName || `Sample ${selectedIndex}`,\n        taskDatum: samples[selectedIndex],\n        output: samples[selectedIndex].annotation,\n        selectedIndex,\n      }),\n    ]\n    // eslint-disable-next-line\n  }, [selectedIndex, containerProps.datasetName])\n\n  const enabledTools =\n    iface.type === \"image_pixel_segmentation\"\n      ? undefined\n      : useMemo(\n          () =>\n            [\"select\"].concat(\n              regionTypesAllowed\n                .flatMap((rt) => regionTypeToTool[rt])\n                .filter(Boolean)\n            ),\n          [regionTypesAllowed]\n        )\n\n  const allowedArea = useMemo(() => {\n    if (!iface.allowedArea && !samples[selectedIndex].allowedArea)\n      return undefined\n    const { x, y, width: w, height: h } =\n      samples[selectedIndex].allowedArea || iface.allowedArea\n    return { x, y, w, h }\n    // eslint-disable-next-line\n  }, [iface.allowedArea, samples[selectedIndex].allowedArea])\n  return (\n    <Container\n      style={{\n        height: containerProps.height || \"calc(100% - 70px)\",\n        minHeight: 600,\n        width: \"100%\",\n      }}\n    >\n      <Annotator\n        key={globalSampleIndex}\n        fullImageSegmentationMode={isPixel}\n        selectedImage={0}\n        taskDescription={iface.description}\n        showTags={showTags}\n        {...labelProps}\n        autoSegmentationOptions={iface.autoSegmentationEngine}\n        allowedArea={allowedArea}\n        onNextImage={onNextImage}\n        onPrevImage={onPrevImage}\n        enabledTools={enabledTools}\n        selectedTool={selectedTool}\n        images={singleImageList}\n        onExit={onExit}\n      />\n    </Container>\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport Workspace from \"react-material-workspace-layout/Workspace\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst HeaderLeftSideContainer = styled(\"div\")({\n  fontSize: 24,\n  fontWeight: \"bold\",\n})\n\nexport default ({\n  children,\n  onNext,\n  onPrev,\n  currentSampleIndex = 0,\n  numberOfSamples = 1,\n  globalSampleIndex = 1,\n  titleContent,\n  onClickHeaderItem,\n}: any) => {\n  const headerItems = useMemo(\n    () =>\n      [\n        (currentSampleIndex > 0 || onPrev) && { name: \"Prev\", onClick: onPrev },\n        (numberOfSamples > currentSampleIndex + 1 || onNext) && {\n          name: \"Next\",\n          onClick: onNext,\n        },\n        { name: \"Save\" },\n      ].filter(Boolean),\n    [currentSampleIndex, numberOfSamples, onNext, onPrev]\n  )\n  return (\n    <Workspace\n      headerLeftSide={\n        titleContent === undefined ? (\n          <Box paddingLeft={2}>\n            <HeaderLeftSideContainer>\n              Sample{\" \"}\n              {numberOfSamples > 1\n                ? `${currentSampleIndex} / ${numberOfSamples}`\n                : `${globalSampleIndex}`}\n            </HeaderLeftSideContainer>\n          </Box>\n        ) : (\n          titleContent\n        )\n      }\n      onClickHeaderItem={onClickHeaderItem}\n      headerItems={headerItems}\n      iconSidebarItems={[]}\n      rightSidebarItems={[]}\n    >\n      <Box padding={2} style={{ width: \"100%\" }}>\n        {children}\n      </Box>\n    </Workspace>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect, useMemo } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport without from \"lodash/without\"\nimport WorkspaceContainer from \"../WorkspaceContainer\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nconst brightColors = [\n  colors.blue[600],\n  colors.green[600],\n  colors.red[600],\n  colors.deepOrange[600],\n  colors.pink[600],\n  colors.teal[600],\n  colors.deepPurple[600],\n  colors.indigo[600],\n  colors.blue[600],\n  colors.cyan[600],\n  colors.purple[600],\n]\n\nconst letters = \"abcdefghijklmnopqrstuvwxyz1234567890\".split(\"\")\nconst getRandomColor = (label) => {\n  const hashInt = label.id\n    .split(\"\")\n    .reduce((acc, v, i) => acc + (letters.indexOf(v) + 1), 0)\n  return brightColors[hashInt % brightColors.length]\n}\n\nconst Container = styled(\"div\")({\n  maxWidth: \"100vw\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nconst ImageContainer = styled(\"div\")({\n  position: \"relative\",\n  display: \"flex\",\n  flexGrow: 1,\n})\n\nconst Image = styled(\"img\")({\n  display: \"inline-block\",\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  width: \"100%\",\n  height: \"100%\",\n  objectFit: \"contain\",\n})\n\nconst ButtonsContainer = styled(\"div\")({\n  paddingLeft: 50,\n  paddingRight: 50,\n  marginTop: 8,\n  textAlign: \"center\",\n  flexShrink: 0,\n})\n\nconst CheckButton = styled(Button)({\n  margin: 8,\n  color: \"#fff\",\n  fontSize: 18,\n  paddingRight: 16,\n  transition: \"transform 50ms ease\",\n})\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport const ImageClassification = ({\n  sampleIndex: globalSampleIndex,\n  interface: iface,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  onSaveTaskOutputItem,\n}) => {\n  // TODO remove legacy \"availableLabels\" support\n  if (iface.availableLabels && !iface.labels) {\n    iface.labels = iface.availableLabels\n  }\n\n  const disableHotkeys = containerProps.disableHotkeys\n\n  if (!iface.labels)\n    throw new Error(\"No labels defined. Add some labels in Setup to continue.\")\n  const [sampleIndex, setSampleIndex] = useClobberedState(globalSampleIndex, 0)\n\n  const [enlargedLabel, changeEnlargedLabel] = useState(null)\n  const [currentOutput, changeCurrentOutput] = useState(emptyArr)\n  const labels = useMemo(\n    () =>\n      iface.labels.map((l) =>\n        typeof l === \"string\" ? { id: l, description: l } : l\n      ),\n    [iface.labels]\n  )\n\n  const onDone = useEventCallback(() => {\n    if (containerProps.onExit) containerProps.onExit()\n  })\n  const onNextNoSave = useEventCallback(() => {\n    if (containerProps.onExit) {\n      containerProps.onExit(\"go-to-next\")\n    }\n  })\n  const onNext = useEventCallback((newOutput) => {\n    onSaveTaskOutputItem(sampleIndex, newOutput || currentOutput)\n    if (setSampleIndex && sampleIndex !== samples.length - 1) {\n      setSampleIndex(sampleIndex + 1)\n    } else {\n      if (containerProps.onExit) containerProps.onExit(\"go-to-next\")\n    }\n  })\n  const onPrev = useEventCallback(() => {\n    if (setSampleIndex && sampleIndex > 0) {\n      setSampleIndex(sampleIndex - 1)\n    } else {\n      if (containerProps.onExit) containerProps.onExit(\"go-to-previous\")\n    }\n  })\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      changeEnlargedLabel(null)\n    }, 100)\n    return () => clearTimeout(timeout)\n  }, [enlargedLabel])\n\n  const onClickLabel = useEventCallback((label) => {\n    changeEnlargedLabel(label)\n    let newOutput\n    if ((currentOutput || []).includes(label.id)) {\n      newOutput = without(currentOutput, label.id)\n    } else {\n      if (iface.allowMultiple) {\n        newOutput = currentOutput.concat([label.id])\n      } else {\n        newOutput = label.id\n      }\n    }\n\n    changeCurrentOutput(newOutput)\n    if (!iface.allowMultiple && newOutput.length > 0) {\n      onNext(newOutput)\n    }\n  })\n\n  useEffect(() => {\n    let newOutput = samples[sampleIndex].annotation\n    if (!newOutput) newOutput = []\n    if (typeof newOutput === \"string\") newOutput = [newOutput]\n    changeCurrentOutput(newOutput)\n  }, [sampleIndex, globalSampleIndex, samples])\n\n  const [hotkeyMap, labelKeyMap] = useMemo(() => {\n    if (disableHotkeys) return [{}, {}]\n    const hotkeyMap = {\n      \" \": onNext,\n      backspace: onPrev,\n      enter: onDone,\n      rightarrow: onNext,\n      leftarrow: onPrev,\n    }\n    const labelKeyMap = {}\n    for (let label of labels) {\n      const nextAvailableLetter = label.id\n        .split(\"\")\n        .filter((l) => letters.includes(l))\n        .find((l) => !hotkeyMap[l.toLowerCase()])\n      if (!nextAvailableLetter) continue\n      hotkeyMap[nextAvailableLetter] = () => onClickLabel(label)\n      labelKeyMap[label.id] = nextAvailableLetter\n    }\n    return [hotkeyMap, labelKeyMap]\n  }, [labels, onClickLabel, onDone, onNext, onPrev, disableHotkeys])\n\n  useEffect(() => {\n    if (disableHotkeys) return\n    const onKeyDown = (e) => {\n      const key = e.key.toLowerCase()\n      if (hotkeyMap[key]) {\n        hotkeyMap[key]()\n      }\n    }\n    window.addEventListener(\"keydown\", onKeyDown)\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown)\n    }\n  }, [hotkeyMap, disableHotkeys])\n\n  return (\n    <WorkspaceContainer\n      onNext={onNextNoSave}\n      onPrev={onPrev}\n      onClickHeaderItem={onDone}\n      numberOfSamples={samples.length}\n      currentSampleIndex={sampleIndex}\n      globalSampleIndex={globalSampleIndex}\n    >\n      <Container\n        style={{\n          height: containerProps.height || \"calc(100% - 70px)\",\n          minHeight: 600,\n        }}\n      >\n        <ImageContainer>\n          <Image src={samples[sampleIndex].imageUrl} />\n        </ImageContainer>\n        <ButtonsContainer>\n          {labels.map((label) => (\n            <CheckButton\n              key={label.id}\n              onClick={() => onClickLabel(label)}\n              style={{\n                backgroundColor: getRandomColor(label),\n                transform:\n                  enlargedLabel === label ? \"scale(1.1,1.1)\" : undefined,\n              }}\n            >\n              <Checkbox\n                style={{ color: \"#fff\" }}\n                checked={\n                  typeof currentOutput === \"object\"\n                    ? currentOutput.includes(label.id)\n                    : currentOutput === label.id\n                }\n              />\n              {label.id}\n              {labelKeyMap[label.id] ? ` (${labelKeyMap[label.id]})` : \"\"}\n            </CheckButton>\n          ))}\n        </ButtonsContainer>\n      </Container>\n    </WorkspaceContainer>\n  )\n}\n\nexport default ImageClassification\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Annotator from \"react-image-annotate\"\nimport useEventCallback from \"use-event-callback\"\nimport {\n  convertFromRIARegionFmt,\n  convertToRIAKeyframes,\n} from \"../../utils/ria-format.js\"\n\nconst regionTypeToTool = {\n  \"bounding-box\": \"create-box\",\n  polygon: \"create-polygon\",\n  \"full-segmentation\": \"create-polygon\",\n  point: \"create-point\",\n}\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport default ({\n  interface: iface,\n  sampleIndex,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  onSaveTaskOutputItem,\n}) => {\n  const { regionTypesAllowed = [\"bounding-box\"] } = iface\n\n  const isClassification = !Boolean(iface.multipleRegionLabels)\n\n  const labelProps = useMemo(\n    () =>\n      isClassification\n        ? {\n            regionClsList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          }\n        : {\n            regionTagList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          },\n    [isClassification, iface.labels]\n  )\n\n  const getUDTKeyFrames = (riaOutput) => {\n    const newKeyframes = {}\n    for (const key in riaOutput.keyframes) {\n      newKeyframes[key] = {\n        regions: riaOutput.keyframes[key].regions.map(convertFromRIARegionFmt),\n      }\n    }\n    return newKeyframes\n  }\n\n  const onExit = useEventCallback((output) => {\n    const annotation = { keyframes: getUDTKeyFrames(output) }\n    onSaveTaskOutputItem(sampleIndex, annotation)\n    if (containerProps.onExit) containerProps.onExit()\n  })\n\n  const onNext = useEventCallback((output) => {\n    const annotation = { keyframes: getUDTKeyFrames(output) }\n    onSaveTaskOutputItem(sampleIndex, annotation)\n    if (containerProps.onExit) {\n      containerProps.onExit(\"go-to-next\")\n    }\n  })\n\n  const onPrev = useEventCallback((output) => {\n    const annotation = { keyframes: getUDTKeyFrames(output) }\n    onSaveTaskOutputItem(sampleIndex, annotation)\n    if (containerProps.onExit) {\n      containerProps.onExit(\"go-to-previous\")\n    }\n  })\n\n  const enabledTools = useMemo(\n    () =>\n      [\"select\"].concat(\n        regionTypesAllowed.map((rt) => regionTypeToTool[rt]).filter(Boolean)\n      ),\n    [regionTypesAllowed]\n  )\n\n  if (samples.length === 0) throw new Error(\"No sample data provided selected\")\n  if (!samples[sampleIndex].videoUrl)\n    throw new Error(\"Sample must have videoUrl\")\n\n  const annotation = samples[sampleIndex].annotation || {}\n\n  return (\n    <div\n      style={{\n        height: containerProps.height || \"calc(100vh - 70px)\",\n        width: \"100%\",\n        minHeight: 600,\n      }}\n    >\n      <Annotator\n        key={sampleIndex}\n        taskDescription={iface.description}\n        {...labelProps}\n        enabledTools={enabledTools}\n        keyframes={convertToRIAKeyframes(annotation?.keyframes || {})}\n        onNextImage={onNext}\n        onPrevImage={onPrev}\n        videoName={samples[sampleIndex].customId || \"\"}\n        videoTime={0}\n        videoSrc={samples[sampleIndex].videoUrl}\n        onExit={onExit}\n      />\n    </div>\n  )\n}\n","// @flow weak\n\nimport React from \"react\"\nimport NLPAnnotator from \"react-nlp-annotate\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\nimport Box from \"@material-ui/core/Box\"\n\nexport default (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n\n  const sample = props.samples[currentSampleIndex]\n\n  return (\n    <NLPAnnotator\n      key={currentSampleIndex}\n      titleContent={<Box paddingLeft={4}>Sample {currentSampleIndex}</Box>}\n      type=\"transcribe\"\n      audio={sample.audioUrl}\n      phraseBank={props.phraseBank}\n      initialTranscriptionText={sample.annotation || \"\"}\n      onPrev={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex - 1)\n        } else {\n          props.onExit(\"go-to-previous\")\n        }\n      }}\n      onNext={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (setCurrentSampleIndex) {\n          setCurrentSampleIndex(currentSampleIndex + 1)\n        } else {\n          props.onExit(\"go-to-next\")\n        }\n      }}\n      onFinish={(result) => {\n        props.onSaveTaskOutputItem(currentSampleIndex, result)\n        if (props.onExit) props.onExit()\n      }}\n    />\n  )\n}\n","export default function getTaskDescription(samplesItem) {\n  const { description, imageUrl, url, pdfUrl } = samplesItem\n  if (description) return description\n  if (imageUrl) return `![${imageUrl}](${imageUrl})`\n  if (pdfUrl)\n    return (\n      `[PDF Link](${pdfUrl})` +\n      `<object data=\"${pdfUrl.replace(\n        \"http://\",\n        \"https://\"\n      )}\" type=\"application/pdf\" width=\"100%\" height=\"600px\"></object>`\n    )\n  if (url) return `Use this [Link](${url})`\n  return null\n}\n","// @flow\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  linkButtonContainer: {\n    marginLeft: 8,\n    marginRight: 8,\n  },\n  linkButton: {\n    textTransform: \"none\",\n    cursor: \"pointer\",\n    textDecoration: \"underline\",\n  },\n})\n\nexport default ({ onClick, text }: { onClick: Function, text: string }) => {\n  const c = useStyles()\n  return (\n    <span className={c.linkButtonContainer}>\n      (\n      <span onClick={onClick} className={c.linkButton}>\n        {text}\n      </span>\n      )\n    </span>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Button from \"@material-ui/core/Button\"\nimport ReactMarkdown from \"react-markdown\"\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport LeftIcon from \"@material-ui/icons/KeyboardArrowLeft\"\nimport CircleIcon from \"@material-ui/icons/RadioButtonUnchecked\"\nimport CheckCircle from \"@material-ui/icons/CheckCircle\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport LinkButton from \"./LinkButton\"\nimport range from \"lodash/range\"\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: \"#fff\",\n    marginTop: 40,\n  },\n  footerContent: {\n    alignItems: \"center\",\n    padding: 20,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  footerBorder: {\n    borderTop: \"1px solid #ccc\",\n    marginLeft: 20,\n    marginRight: 20,\n  },\n  footerCount: {\n    display: \"inline-flex\",\n  },\n  allSamplesButton: {\n    color: \"#fff\",\n    border: \"1px solid rgba(255,255,255,0.5)\",\n    marginRight: 10,\n    paddingLeft: 8,\n  },\n  sampleIcon: {\n    marginRight: 8,\n  },\n  menuButton: {\n    marginRight: 8,\n    color: \"#fff\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  buttons: {\n    \"& > *\": {\n      margin: 4,\n    },\n  },\n  description: {\n    padding: 10,\n    \"& img\": {\n      maxWidth: \"calc(100% - 16px)\",\n      marginLeft: 8,\n      marginRight: 8,\n      maxHeight: 600,\n    },\n  },\n  sectionHeader: {\n    fontWeight: 700,\n    fontSize: 12,\n    padding: 10,\n    paddingTop: 16,\n    textTransform: \"uppercase\",\n    color: colors.grey[600],\n  },\n  content: {\n    padding: 10,\n    // minHeight: \"calc(100vh - 200px)\"\n  },\n}))\n\nexport const SampleContainer = ({\n  hideDescription: defaultHideDescription = window.localStorage.getItem(\n    \"hideDescription\"\n  ) === '\"true\"',\n  lastSampleExitText,\n  onExit,\n  requireCompleteToPressNext = false,\n  samples,\n  minContentHeight,\n  currentSampleIndex,\n  totalSamples,\n  onChangeSample,\n  taskOutput = [],\n  description,\n  children,\n}) => {\n  const c = useStyles()\n  const [hideDescription, changeHideDescriptionState] = useState(\n    defaultHideDescription\n  )\n  const changeHideDescription = (hide) => {\n    window.localStorage.setItem(\n      \"hideDescription\",\n      `\"${hide ? \"true\" : \"false\"}\"`\n    )\n    changeHideDescriptionState(hide)\n  }\n\n  const [sampleDrawerOpen, changeSampleDrawerOpen] = useState(false)\n  return (\n    <>\n      <Grid container>\n        {!hideDescription && (\n          <Grid item xs={12} sm={12} md={6}>\n            <div className={c.sectionHeader}>\n              Description\n              <LinkButton\n                onClick={() => changeHideDescription(true)}\n                text=\"hide\"\n              />\n            </div>\n            <div className={c.description}>\n              <ReactMarkdown escapeHtml={false} source={description} />\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={12} sm={12} md={hideDescription ? 12 : 6}>\n          <div className={c.sectionHeader}>\n            Sample {currentSampleIndex + 1}/{totalSamples}\n            {hideDescription && (\n              <LinkButton\n                onClick={() => changeHideDescription(false)}\n                text=\"show description\"\n              />\n            )}\n            {totalSamples > 1 && (\n              <LinkButton\n                onClick={() => changeSampleDrawerOpen(true)}\n                text=\"view all\"\n              />\n            )}\n            {onExit && (\n              <LinkButton onClick={() => onExit()} text=\"exit without saving\" />\n            )}\n          </div>\n          <div style={{ minHeight: minContentHeight }} className={c.content}>\n            {children}\n          </div>\n        </Grid>\n        {totalSamples > 1 && (\n          <Grid item xs={12}>\n            <div className={c.footer}>\n              <div className={c.footerBorder} />\n              <div className={c.footerContent}>\n                <Button\n                  onClick={() =>\n                    onChangeSample(\n                      (currentSampleIndex - 1 + totalSamples) % totalSamples\n                    )\n                  }\n                >\n                  <LeftIcon /> Prev Sample\n                </Button>\n                <Button\n                  onClick={() => changeSampleDrawerOpen(true)}\n                  className={c.footerCount}\n                >\n                  {currentSampleIndex + 1} / {totalSamples}\n                </Button>\n                <Button\n                  disabled={\n                    requireCompleteToPressNext &&\n                    !taskOutput[currentSampleIndex]\n                  }\n                  onClick={() =>\n                    onChangeSample((currentSampleIndex + 1) % totalSamples)\n                  }\n                >\n                  {requireCompleteToPressNext && !taskOutput[currentSampleIndex]\n                    ? \"Save to Continue\"\n                    : \"Next Sample\"}\n                  <RightIcon />\n                </Button>\n              </div>\n            </div>\n          </Grid>\n        )}\n      </Grid>\n      <Drawer\n        open={sampleDrawerOpen}\n        anchor=\"left\"\n        onClose={() => changeSampleDrawerOpen(false)}\n      >\n        <List style={{ minWidth: 300 }}>\n          <ListSubheader>Samples</ListSubheader>\n          {range(0, totalSamples).map((i) => (\n            <ListItem\n              style={{\n                backgroundColor:\n                  i === currentSampleIndex ? colors.grey[200] : undefined,\n              }}\n              button\n              onClick={() => onChangeSample(i)}\n            >\n              <ListItemIcon\n                style={{\n                  color:\n                    i === currentSampleIndex ? colors.blue[500] : undefined,\n                }}\n              >\n                {taskOutput[i] ? <CheckCircle /> : <CircleIcon />}\n              </ListItemIcon>\n              <ListItemText>Sample {i + 1}</ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </>\n  )\n}\n\nexport default SampleContainer\n","import React from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nexport const DataEntry = (props) => {\n  const [currentSampleIndex, setCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const form =\n    props.samples[currentSampleIndex].surveyjs || props.interface.surveyjs\n  if (!form)\n    throw new Error(\"No survey/form created. Try adding some inputs in Setup\")\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples.map((s) => s.annotation)}\n      description={\n        getTaskDescription(props.samples[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={(sampleIndex) => setCurrentSampleIndex(sampleIndex)}\n    >\n      <Survey\n        key={(props.sampleIndex || 0) + currentSampleIndex}\n        variant=\"flat\"\n        form={form}\n        defaultAnswers={\n          props.samples[currentSampleIndex].annotation || undefined\n        }\n        completeText=\"Save & Next\"\n        onFinish={(answers) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, answers)\n          if (props.containerProps.onExit)\n            props.containerProps.onExit(\"go-to-next\")\n        }}\n      />\n    </SampleContainer>\n  )\n}\n\nexport default DataEntry\n","// @flow\n\nimport React from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 50,\n    textAlign: \"center\",\n  },\n  title: {\n    margin: 50,\n  },\n  explain: {},\n})\n\nexport default ({ title, description, children }) => {\n  const c = useStyles()\n  return (\n    <div className={c.root}>\n      <Typography variant=\"h4\" component=\"div\" className={c.title}>\n        {title}\n      </Typography>\n      <Typography variant=\"h6\" component=\"div\" className={c.explain}>\n        {description || children}\n      </Typography>\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport BadOHA from \"../BadOHA\"\n\nexport default () => {\n  return (\n    <BadOHA title=\"No Samples to Show\">\n      Make sure that <code>samples</code> is defined and not empty.\n      <br />\n      <br />\n      Need help setting up? {/*<a href=\"#\">Check out this tutorial.</a>*/}\n    </BadOHA>\n  )\n}\n","import React from \"react\"\n\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\"\nimport TextFormat from \"@material-ui/icons/TextFormat\"\nimport Edit from \"@material-ui/icons/Edit\"\nimport Audiotrack from \"@material-ui/icons/Audiotrack\"\nimport Help from \"@material-ui/icons/Help\"\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\"\n\nexport default ({ type, ...props }) => {\n  switch (type) {\n    case \"image_label\":\n    case \"image_segmentation\":\n      return <RemoveRedEye {...props} />\n    case \"audio_transcription\":\n      return <Audiotrack {...props} />\n    case \"data_entry\":\n      return <Edit {...props} />\n    case \"text_entity_recognition\":\n      return <TextFormat {...props} />\n    case \"3d_bounding_box\":\n      return <ThreeDRotation {...props} />\n    default:\n      return <Help {...props} />\n  }\n}\n","import React, { useState } from \"react\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport InterfaceIcon from \"../InterfaceIcon\"\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport Box from \"@material-ui/core/Box\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Title = styled(\"div\")({\n  fontSize: 18,\n  fontWeight: \"bold\",\n  color: colors.grey[700],\n  borderBottom: `1px solid ${colors.grey[300]}`,\n  paddingBottom: 8,\n  marginBottom: 8,\n  paddingLeft: 8,\n})\nconst StyledButton = styled(Button)({\n  display: \"flex\",\n  textAlign: \"left\",\n  justifyContent: \"flex-start\",\n  marginTop: 8,\n})\n\nexport const Composite = (props) => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useClobberedState(\n    props.sampleIndex,\n    0\n  )\n  const {\n    interface: { fields },\n  } = props\n  const [selectedField, changeSelectedField] = useState()\n\n  const { t } = useTranslation()\n\n  if (!fields) throw new Error(\"No fields defined. Try adding a field in Setup\")\n\n  const sample = props.samples[currentSampleIndex]\n\n  if (selectedField) {\n    return (\n      <UniversalDataViewer\n        dataset={{\n          interface: selectedField.interface,\n          samples: [\n            {\n              ...sample,\n              annotation: (sample.annotation || {})[selectedField.fieldName],\n            },\n          ],\n        }}\n        onExit={() => changeSelectedField(null)}\n        onSaveTaskOutputItem={(indexZero, output) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, {\n            ...sample.annotation,\n            [selectedField.fieldName]: output,\n          })\n          changeSelectedField(null)\n        }}\n      />\n    )\n  }\n\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples.map((s) => s.annotation)}\n      description={getTaskDescription(sample) || props.interface.description}\n      onChangeSample={(sampleIndex) => {\n        if (props.containerProps.onExit) {\n          props.containerProps.onExit(\n            sampleIndex > currentSampleIndex ? \"go-to-next\" : \"go-to-previous\"\n          )\n        } else {\n          changeCurrentSampleIndex(sampleIndex)\n        }\n      }}\n    >\n      <Title>Fields</Title>\n      {fields.map((field, index) => (\n        <StyledButton\n          key={field.fieldName}\n          onClick={() => {\n            changeSelectedField({ ...field, index })\n          }}\n          fullWidth\n          variant=\"outlined\"\n        >\n          <InterfaceIcon\n            style={{ color: colors.grey[500], marginRight: 16 }}\n            type={field.interface.type}\n          />\n          {field.fieldName}\n          <Box flexGrow={1} />\n          <Checkbox\n            checked={Boolean((sample.annotation || {})[field.fieldName])}\n          />\n          <KeyboardArrowRightIcon />\n        </StyledButton>\n      ))}\n      <StyledButton\n        onClick={() => props.containerProps.onExit(\"go-to-next\")}\n        fullWidth\n        variant=\"outlined\"\n      >\n        <KeyboardArrowRightIcon\n          style={{ color: colors.grey[500], marginRight: 16 }}\n        />\n        {t(\"next\")}\n        <Box flexGrow={1} />\n        <Box height=\"42px\" />\n        <KeyboardArrowRightIcon />\n      </StyledButton>\n    </SampleContainer>\n  )\n}\n\nexport default Composite\n","// @flow\n\nimport \"../../i18n\"\nimport React, { useMemo } from \"react\"\nimport TextClassification from \"../TextClassification\"\nimport TextEntityRecognition from \"../TextEntityRecognition\"\nimport TextEntityRelations from \"../TextEntityRelations\"\nimport ImageSegmentation from \"../ImageSegmentation\"\nimport ImageClassification from \"../ImageClassification\"\nimport VideoSegmentation from \"../VideoSegmentation\"\nimport AudioTranscription from \"../AudioTranscription\"\nimport DataEntry from \"../DataEntry\"\nimport EmptySampleContainer from \"../EmptySampleContainer\"\nimport Composite from \"../Composite\"\nimport BadOHA from \"../BadOHA\"\nimport Button from \"@material-ui/core/Button\"\nimport { useTranslation } from \"react-i18next\"\nimport useEventCallback from \"use-event-callback\"\nimport useClobberedState from \"../../utils/use-clobbered-state\"\n\nexport const UniversalDataViewer = ({\n  dataset,\n  onExit: onExitProp,\n  hideHeader,\n  hideDescription,\n  disableHotkeys = false,\n  datasetName,\n  requireCompleteToPressNext,\n  onSaveTaskOutputItem: onSaveTaskOutputItemProp,\n  onModifySample,\n  sampleIndex: globalSampleIndex,\n  height,\n  onClickSetup,\n}) => {\n  // TODO type check w/ superstruct against dataset\n  const { t } = useTranslation()\n\n  const [sampleIndex, setSampleIndex] = useClobberedState(globalSampleIndex, 0)\n\n  const onExit = useEventCallback((...args) => {\n    if (globalSampleIndex === undefined) {\n      if (\n        args[0] === \"go-to-next\" &&\n        sampleIndex !== dataset.samples.length - 1\n      ) {\n        setSampleIndex(sampleIndex + 1)\n      } else if (args[0] === \"go-to-previous\" && sampleIndex !== 0) {\n        setSampleIndex(sampleIndex - 1)\n      }\n    }\n    if (onExitProp) return onExitProp(...args)\n  })\n\n  let onSaveTaskOutputItem = onSaveTaskOutputItemProp\n  if (onModifySample && !onSaveTaskOutputItem) {\n    onSaveTaskOutputItem = (sampleIndex, annotation) =>\n      onModifySample(sampleIndex, { annotation })\n  }\n\n  const containerProps = useMemo(\n    () => ({\n      hideHeader,\n      hideDescription,\n      datasetName,\n      requireCompleteToPressNext,\n      onExit,\n      height,\n      disableHotkeys,\n    }),\n    [\n      hideHeader,\n      hideDescription,\n      requireCompleteToPressNext,\n      datasetName,\n      height,\n      onExit,\n      disableHotkeys,\n    ]\n  )\n\n  if (!dataset || !dataset.interface.type) {\n    return (\n      <BadOHA\n        title=\"Set up your project to begin labeling\"\n        description={\n          <p>\n            {t(\"universal-data-viewer-interface-warning\")}\n            <br />\n            <br />\n            <Button color=\"primary\" variant=\"contained\" onClick={onClickSetup}>\n              {t(\"setup-project\")}\n            </Button>\n          </p>\n        }\n      />\n    )\n  }\n\n  if (!dataset.samples || dataset.samples.length === 0) {\n    return <EmptySampleContainer />\n  }\n\n  switch (dataset.interface.type) {\n    case \"data_entry\":\n      return (\n        <DataEntry\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"text_classification\":\n      return (\n        <TextClassification\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"text_entity_recognition\":\n      return (\n        <TextEntityRecognition\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"text_entity_relations\":\n      return (\n        <TextEntityRelations\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"image_segmentation\":\n    case \"image_pixel_segmentation\":\n      return (\n        <ImageSegmentation\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onModifySample={onModifySample}\n        />\n      )\n    case \"image_classification\":\n      return (\n        <ImageClassification\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"video_segmentation\":\n      return (\n        <VideoSegmentation\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"composite\":\n      return (\n        <Composite\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          dataset={dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"audio_transcription\":\n      return (\n        <AudioTranscription\n          containerProps={containerProps}\n          sampleIndex={sampleIndex}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    default:\n      return `\"${dataset.interface.type}\" not supported`\n  }\n}\n\nexport default UniversalDataViewer\n","import * as Sentry from \"@sentry/browser\"\n\nSentry.init({\n  dsn: \"https://bc19fbac222243f08f0abaf6d66f2034@sentry.io/5182632\",\n  whitelistUrls: [\"https://universaldatatool.com\", \"^file:?:\"],\n})\n\nexport default Sentry\n","// @flow weak\n\nimport React from \"react\"\nimport Sentry from \"../../utils/sentry.js\"\nimport BadOHA from \"../BadOHA\"\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    console.error(\n      \"The following error occurred when loading a labeling interface:\",\n      error\n    )\n    return {\n      hasError: true,\n      errorString: error.toString(),\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo)\n      const eventId = Sentry.captureException(error)\n      this.setState({ eventId })\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <BadOHA\n          title=\"An error occurred loading the labeling interface\"\n          description={this.state.errorString}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","// @flow weak\n\nimport React, { useState, useEffect, useReducer } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport templates, { templateMap } from \"../StartingPage/templates\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport * as colors from \"@material-ui/core/colors\"\nimport ConfigureImageSegmentation from \"../ConfigureImageSegmentation\"\nimport ConfigureImagePixelSegmentation from \"../ConfigureImagePixelSegmentation\"\nimport ConfigureImageClassification from \"../ConfigureImageClassification\"\nimport ConfigureTextClassification from \"../ConfigureTextClassification\"\nimport ConfigureAudioTranscription from \"../ConfigureAudioTranscription\"\nimport ConfigureTextEntityRecognition from \"../ConfigureTextEntityRecognition\"\nimport ConfigureTextEntityRelations from \"../ConfigureTextEntityRelations\"\nimport ConfigureDataEntry from \"../ConfigureDataEntry\"\nimport ConfigureComposite from \"../ConfigureComposite\"\nimport Configure3D from \"../Configure3D\"\nimport ConfigureVideoSegmentation from \"../ConfigureVideoSegmentation\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport Grid from \"@material-ui/core/Grid\"\nimport LabelErrorBoundary from \"../LabelErrorBoundary\"\nimport useEventCallback from \"use-event-callback\"\n\nconst noop = () => {}\n\nconst Container = styled(\"div\")({\n  padding: 24,\n  \"&.emptyState\": {\n    textAlign: \"center\",\n    backgroundColor: colors.blue[800],\n    minHeight: \"70vh\",\n    padding: 64,\n    \"& .bigText\": {\n      textAlign: \"left\",\n      fontSize: 48,\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      marginBottom: 48,\n    },\n  },\n})\n\nconst BigButton = styled(Button)({\n  padding: 10,\n  width: 200,\n  height: 150,\n  boxShadow: \"0px 3px 5px rgba(0,0,0,0.3)\",\n  margin: 12,\n  backgroundColor: \"#fff\",\n  \"& .bigIcon\": {\n    marginTop: 16,\n    width: 64,\n    height: 64,\n  },\n  \"&:hover\": {\n    backgroundColor: \"#fff\",\n  },\n})\n\nconst NoOptions = styled(\"div\")({\n  fontSize: 18,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  color: colors.grey[500],\n  paddingTop: 30,\n  paddingBottom: 50,\n})\n\nconst TypeButton = styled(Button)({\n  margin: 8,\n  \"& .icon\": {\n    marginRight: 8,\n    color: \"#888\",\n  },\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  \"&.selected\": {\n    backgroundColor: colors.blue[500],\n    color: \"#fff\",\n    \"& .icon\": {\n      color: \"#fff\",\n    },\n  },\n})\n\nexport const Heading = styled(\"div\")({\n  fontWeight: \"bold\",\n  textTransform: \"uppercase\",\n  fontSize: 12,\n  paddingLeft: 8,\n  marginBottom: 8,\n  marginTop: 16,\n  color: colors.grey[700],\n})\n\nconst PreviewContainer = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  mouseEvents: \"none\",\n  padding: 16,\n})\nconst PreviewContent = styled(\"div\")({\n  display: \"flex\",\n  width: \"100%\",\n  height: 600,\n})\n\nconst SelectType = ({ currentlySelected, onChange }) => {\n  return templates.map((t) => (\n    <TypeButton\n      key={t.dataset.interface.type || \"empty\"}\n      className={\n        currentlySelected === t.dataset.interface.type ? \"selected\" : \"\"\n      }\n      variant=\"outlined\"\n      onClick={() => {\n        if (currentlySelected !== t.dataset.interface.type) {\n          onChange(t.dataset.interface.type)\n        }\n      }}\n    >\n      <t.Icon className=\"icon\" />\n      {t.name}\n    </TypeButton>\n  ))\n}\n\nexport const ConfigureInterface = ({\n  dataset,\n  onChange: onChangeProp,\n  onClickEditJSON,\n  isNested = false,\n}) => {\n  const iface = dataset.interface\n  const [previewChangedTime, changePreviewChangedTime] = useState(0)\n  const [previewLoading, changePreviewLoading] = useState(false)\n  const [previewVersion, incPreviewVersion] = useReducer(\n    (state) => state + 1,\n    0\n  )\n  const [previewDataset, setPreviewDataset] = useState({\n    interface: iface,\n    samples: dataset?.samples?.length\n      ? [dataset.samples[0]]\n      : [templateMap[iface.type].dataset.samples[0]],\n  })\n  const onChange = useEventCallback((...args) => {\n    changePreviewChangedTime(Date.now())\n    onChangeProp(...args)\n  })\n  useEffect(() => {\n    if (Date.now() - previewChangedTime > 1000) return\n    changePreviewLoading(true)\n    let timeout = setTimeout(() => {\n      changePreviewLoading(false)\n      incPreviewVersion()\n      setPreviewDataset({\n        interface: iface,\n        samples: dataset?.samples?.length\n          ? [dataset.samples[0]]\n          : [templateMap[iface.type].dataset.samples[0]],\n      })\n    }, 1000)\n    return () => {\n      clearTimeout(timeout)\n    }\n    // eslint-disable-next-line\n  }, [previewChangedTime])\n\n  if (!iface.type || iface.type === \"empty\") {\n    return (\n      <Container className=\"emptyState\">\n        <div className=\"bigText\">Choose an Interface:</div>\n        {templates\n          .filter((t) => t.name !== \"Empty\")\n          .map((template) => (\n            <BigButton\n              key={template.name}\n              onClick={() => onChange(template.dataset.interface)}\n            >\n              <div>\n                <div>{template.name}</div>\n                <div>\n                  <template.Icon className=\"bigIcon\" />\n                </div>\n              </div>\n            </BigButton>\n          ))}\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <Heading>Interface Type</Heading>\n      <SelectType\n        currentlySelected={iface.type}\n        onChange={(type) => {\n          onChange(\n            templates\n              .map((t) => t.dataset.interface)\n              .find((t) => t.type === type) || {}\n          )\n        }}\n      />\n      <Grid container>\n        <Grid item hidden={isNested} xs={12} lg={6}>\n          <Heading>Preview</Heading>\n          <PreviewContainer>\n            <PreviewContent\n              style={{ opacity: previewLoading ? 0.5 : 1, height: \"100%\" }}\n            >\n              <LabelErrorBoundary key={previewVersion}>\n                <UniversalDataViewer\n                  key={previewVersion}\n                  height={600}\n                  onExit={noop}\n                  onSaveTaskOutputItem={noop}\n                  dataset={previewDataset}\n                />\n              </LabelErrorBoundary>\n            </PreviewContent>\n          </PreviewContainer>\n        </Grid>\n        <Grid item xs={12} lg={isNested ? 12 : 6}>\n          <Heading>Options</Heading>\n          <Box paddingTop={2} />\n          {!iface.type && <NoOptions>Select a Type</NoOptions>}\n          {iface.type === \"image_segmentation\" && (\n            <ConfigureImageSegmentation iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"image_pixel_segmentation\" && (\n            <ConfigureImagePixelSegmentation\n              iface={iface}\n              onChange={onChange}\n            />\n          )}\n          {iface.type === \"image_classification\" && (\n            <ConfigureImageClassification iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"composite\" && (\n            <ConfigureComposite iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"data_entry\" && (\n            <ConfigureDataEntry iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"audio_transcription\" && (\n            <ConfigureAudioTranscription iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"text_entity_recognition\" && (\n            <ConfigureTextEntityRecognition iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"text_entity_relations\" && (\n            <ConfigureTextEntityRelations iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"text_classification\" && (\n            <ConfigureTextClassification iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"video_segmentation\" && (\n            <ConfigureVideoSegmentation iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"3d_bounding_box\" && (\n            <Configure3D iface={iface} onChange={onChange} />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default ConfigureInterface\n","// @flow\n\nimport { styled } from \"@material-ui/core/styles\"\n\nexport const PaperContainer = styled(\"div\")({\n  margin: 16,\n  padding: 16,\n  border: \"1px solid #ccc\",\n  borderRadius: 4,\n  boxShadow: \"0px 2px 2px rgba(0,0,0,0.1)\",\n})\n\nexport default PaperContainer\n","import React, { useState, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport Button from \"@material-ui/core/Button\"\nimport EditIcon from \"@material-ui/icons/Edit\"\n\nconst useStyles = makeStyles({\n  table: {},\n})\n\nconst hotkeyIconStyle = { marginLeft: 8, width: 16, height: 16 }\n\nexport default ({\n  open,\n  onClose,\n  onChangeHotkey,\n  hotkeyList,\n  onClearHotkeys,\n}) => {\n  const classes = useStyles()\n  const [selectedHotKey, setSelectedHotKey] = useState()\n  const [{ modifier, key }, setCurrentKeyCombo] = useState({})\n\n  useEffect(() => {\n    if (!selectedHotKey) return\n    function keyListener(e) {\n      if ([\"shift\", \"ctrl\", \"cmd\", \"alt\"].includes(e.key.toLowerCase())) {\n        setCurrentKeyCombo({ modifier: e.key.toLowerCase(), key })\n      }\n      if (e.key.length === 1) {\n        setCurrentKeyCombo({ modifier, key: e.key.toLowerCase() })\n      }\n    }\n    window.addEventListener(\"keydown\", keyListener)\n    return () => {\n      window.removeEventListener(\"keydown\", keyListener)\n    }\n  }, [selectedHotKey, key, modifier, setCurrentKeyCombo])\n\n  useEffect(() => {\n    if (!key) return\n    if (modifier) {\n      onChangeHotkey(selectedHotKey, `${modifier} + ${key}`)\n    } else {\n      onChangeHotkey(selectedHotKey, key)\n    }\n    setCurrentKeyCombo({})\n    setSelectedHotKey(null)\n  }, [modifier, key, onChangeHotkey, selectedHotKey])\n\n  return (\n    <SimpleDialog\n      title=\"Manage Keyboard Shortcuts\"\n      actions={[\n        {\n          text: \"Clear Hotkeys\",\n          onClick: onClearHotkeys,\n        },\n      ]}\n      open={open}\n      onClose={onClose}\n    >\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Action</TableCell>\n              <TableCell align=\"right\">Keyboard Shortcut</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {hotkeyList.map((hotkey) => (\n              <TableRow key={hotkey.description}>\n                <TableCell>{hotkey.description}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    onClick={() => {\n                      if (selectedHotKey !== hotkey) {\n                        setSelectedHotKey(hotkey)\n                        setCurrentKeyCombo({})\n                        return\n                      }\n                    }}\n                    style={{ minWidth: 0 }}\n                  >\n                    <b>\n                      {selectedHotKey === hotkey\n                        ? modifier || key\n                          ? `<${modifier ? modifier + \"+\" : \"\"}${key || \"???\"}>`\n                          : \"<Press Any Key>\"\n                        : hotkey.binding}\n                    </b>\n                    {selectedHotKey === hotkey ? (\n                      <EditIcon style={hotkeyIconStyle} />\n                    ) : (\n                      <EditIcon style={hotkeyIconStyle} />\n                    )}\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </SimpleDialog>\n  )\n}\n","import React, { useState } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { useUpdate } from \"react-use\"\nimport { styled } from \"@material-ui/core/styles\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { useHotkeyStorage } from \"../HotkeyStorage\"\nimport KeyboardShortcutManagerDialog from \"../KeyboardShortcutManagerDialog\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Button = styled(MuiButton)({\n  margin: 8,\n})\n\nexport const AdvancedOptionsView = ({ onClickEditJSON, onClearLabelData }) => {\n  const forceUpdate = useUpdate()\n  const posthog = usePosthog()\n  const { fromConfig, setInConfig } = useAppConfig()\n  const { hotkeys, changeHotkey, clearHotkeys } = useHotkeyStorage()\n  const [hotkeyDialogOpen, setHotkeyDialogOpen] = useState(false)\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  return (\n    <Box padding={2}>\n      <Button onClick={onClickEditJSON} variant=\"outlined\">\n        {t(\"edit-json\")}\n      </Button>\n      <Button\n        onClick={() => {\n          if (\n            window.confirm(\n              \"Are you sure you want to delete all your label data? Click OK to delete.\"\n            )\n          ) {\n            onClearLabelData()\n          }\n        }}\n        variant=\"outlined\"\n      >\n        {t(\"clear-labels\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          if (posthog.has_opted_out_capturing()) {\n            posthog.opt_in_capturing()\n          } else {\n            posthog.opt_out_capturing()\n          }\n          forceUpdate()\n        }}\n      >\n        {posthog.has_opted_out_capturing() ? \"Enable\" : \"Disable\"}{\" \"}\n        {t(\"telemetry\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          // TODO store in appConfig\n          const response = window.prompt(\n            \"Input URL for new collaboration server (empty to use universaldatatool.com):\",\n            window.localStorage.getItem(\"CUSTOM_COLLABORATION_SERVER\") || \"\"\n          )\n          if (response === null) return\n          window.localStorage.setItem(\"CUSTOM_COLLABORATION_SERVER\", response)\n          window.location.reload()\n        }}\n      >\n        {t(\"custom-collaboration-server\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          setInConfig(\n            \"labelhelp.disabled\",\n            !Boolean(fromConfig(\"labelhelp.disabled\"))\n          )\n        }}\n      >\n        {fromConfig(\"labelhelp.disabled\") ? \"Enable\" : \"Disable\"}{\" \"}\n        {t(\"label-help\")}\n      </Button>\n      {!fromConfig(\"labelhelp.disabled\") && (\n        <Button\n          variant=\"outlined\"\n          disabled={Boolean(fromConfig(\"labelhelp.disabled\"))}\n          onClick={() => {\n            const response = window.prompt(\n              \"Label Help API Key:\",\n              fromConfig(\"labelhelp.apikey\") || \"\"\n            )\n            if (response === null) return\n            setInConfig(\"labelhelp.apikey\", response)\n          }}\n        >\n          {t(\"label-help-api-key\")}\n        </Button>\n      )}\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          setHotkeyDialogOpen(true)\n        }}\n      >\n        Change/View Hotkeys\n      </Button>\n      <KeyboardShortcutManagerDialog\n        open={hotkeyDialogOpen}\n        hotkeyList={hotkeys}\n        onClose={() => setHotkeyDialogOpen(false)}\n        onClearHotkeys={clearHotkeys}\n        onChangeHotkey={(hotkey, newBinding) =>\n          changeHotkey(hotkey.id, newBinding)\n        }\n      />\n    </Box>\n  )\n}\n\nexport default AdvancedOptionsView\n","// @flow weak\n\nimport React from \"react\"\nimport ConfigureInterface, { Heading } from \"../ConfigureInterface\"\nimport PaperContainer from \"../PaperContainer\"\nimport AdvancedOptionsView from \"../AdvancedOptionsView\"\n\nexport default ({ dataset, onChange, onClickEditJSON, onClearLabelData }) => {\n  return (\n    <div>\n      <ConfigureInterface\n        dataset={dataset}\n        onChange={onChange}\n        onClickEditJSON={onClickEditJSON}\n        isNotNested\n      />\n      <PaperContainer>\n        <Heading>Advanced</Heading>\n        <AdvancedOptionsView\n          onClearLabelData={onClearLabelData}\n          onClickEditJSON={onClickEditJSON}\n        />\n      </PaperContainer>\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport AceEditor from \"react-ace\"\nimport SimpleDialog from \"../SimpleDialog\"\n\nexport default ({ open, sampleIndex, sampleInput, onChange, onClose }) => {\n  const [text, changeText] = useState()\n  const [error, changeError] = useState()\n  useEffect(() => {\n    const newText = JSON.stringify(sampleInput, null, \"  \")\n    if (newText !== text) {\n      changeText(newText)\n      changeError(null)\n    }\n  }, [sampleIndex, sampleInput, text])\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title={`samples[${sampleIndex}]`}\n    >\n      <AceEditor\n        theme=\"github\"\n        mode=\"javascript\"\n        width=\"100%\"\n        value={text}\n        editorProps={{ $blockScrolling: Infinity }}\n        onChange={(t) => {\n          changeText(t)\n          changeError(null)\n          try {\n            onChange(JSON.parse(t))\n          } catch (e) {\n            changeError(e.toString())\n          }\n        }}\n      />\n      <Box color=\"red\">{error}</Box>\n    </SimpleDialog>\n  )\n}\n","// @flow\nimport React, { createContext, useContext, useEffect, useReducer } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Fade from \"@material-ui/core/Fade\"\nimport classNames from \"classnames\"\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"flex-start\",\n    pointerEvents: \"none\",\n  },\n  msgBox: {\n    display: \"flex\",\n    backgroundColor: colors.blue[700],\n    fontSize: 12,\n    color: \"#fff\",\n    padding: 4,\n    marginBottom: 4,\n    boxShadow: \"0px 3px 8px rgba(0,0,0,0.5)\",\n    \"&.warning\": {\n      backgroundColor: colors.orange[700],\n    },\n    \"&.error\": {\n      backgroundColor: colors.red[700],\n    },\n  },\n})\n\nconst REFRESH_INTERVAL = 100\n\nconst ToastContext = createContext({})\n\nexport const useToasts = () => {\n  const { addToast } = useContext(ToastContext)\n\n  return { addToast }\n}\n\nexport const ToastProvider = ({ children }) => {\n  const [toasts, changeToasts] = useReducer((state = [], action) => {\n    if (action.type === \"add\") {\n      const fullLife =\n        action.messageType === \"info\"\n          ? 2000\n          : action.messageType === \"warning\"\n          ? 5000\n          : 5000\n\n      return state.concat([\n        {\n          id: Math.random().toString().split(\".\")[1],\n          message: action.message,\n          type: action.messageType,\n          life: fullLife,\n          fullLife,\n        },\n      ])\n    } else if (action.type === \"tick\") {\n      return state\n        .map((msg) => ({\n          ...msg,\n          life: msg.life - REFRESH_INTERVAL,\n        }))\n        .filter((msg) => msg.life > 0)\n    }\n    return state\n  }, [])\n  const c = useStyles()\n\n  useEffect(() => {\n    if (toasts.length === 0) return () => {}\n    let interval = setInterval(() => {\n      changeToasts({ type: \"tick\" })\n    }, REFRESH_INTERVAL)\n    return () => clearInterval(interval)\n  }, [toasts])\n\n  const addToast = (message: string, messageType: string = \"info\") =>\n    changeToasts({ type: \"add\", message, messageType })\n\n  return (\n    <>\n      <ToastContext.Provider value={{ toasts, addToast }}>\n        {children}\n      </ToastContext.Provider>\n      <div className={c.root}>\n        {toasts.map((msg) => (\n          <Collapse key={msg.id} in={msg.life < msg.fullLife}>\n            <Fade in={msg.life > 600}>\n              <div className={classNames(c.msgBox, msg.type)}>\n                {msg.message}\n              </div>\n            </Fade>\n          </Collapse>\n        ))}\n      </div>\n    </>\n  )\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({})\nconst Stat = styled(\"div\")({\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  margin: 8,\n})\nconst Label = styled(\"div\")({\n  fontSize: 14,\n  fontWeight: \"bold\",\n  color: colors.grey[700],\n})\nconst Value = styled(\"div\")({\n  fontSize: 32,\n  marginTop: 8,\n})\n\nexport default ({ stats }) => {\n  return (\n    <Container>\n      {stats.map((s) => (\n        <Stat key={s.name}>\n          <Label>{s.name}</Label>\n          <Value>{s.value}</Value>\n        </Stat>\n      ))}\n    </Container>\n  )\n}\n","import React, { useState } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { useAppConfig } from \"../AppConfig\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nconst Title = styled(\"div\")({\n  fontSize: 18,\n  color: colors.grey[800],\n  padding: 16,\n  \"& a\": {\n    color: colors.blue[600],\n  },\n})\n\nconst ErrorText = styled(\"div\")({\n  color: colors.red[600],\n})\n\nexport default () => {\n  const { setInConfig } = useAppConfig()\n  const [verifying, setVerifying] = useState(false)\n  const [textFieldValue, setTextFieldValue] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const posthog = usePosthog()\n\n  return (\n    <Box paddingTop={8} textAlign=\"center\">\n      <Title>\n        To use Label Help, enter your API key. You can{\" \"}\n        <a\n          href=\"https://labelhelp.universaldatatool.com\"\n          onClick={() => posthog.capture(\"get_api_key_link_clicked\")}\n        >\n          get an API key here\n        </a>\n        .\n      </Title>\n      {error && <ErrorText>{error}</ErrorText>}\n      <Box\n        paddingTop={2}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n      >\n        <TextField\n          onChange={(e) => setTextFieldValue(e.target.value)}\n          className=\"label-help-api-key-text-field\"\n          variant=\"outlined\"\n          label=\"API Key\"\n        />\n        <Button\n          style={{ marginTop: 16 }}\n          color=\"primary\"\n          disabled={verifying}\n          variant=\"outlined\"\n          onClick={async () => {\n            setError(null)\n            setVerifying(true)\n            try {\n              // TODO check with labelhelp server and make sure api key is valid\n              const response = await fetch(\n                \"https://labelhelp.universaldatatool.com/api/me\",\n                {\n                  headers: { apikey: textFieldValue },\n                }\n              )\n              if (response.status !== 200) throw new Error(response.toString())\n            } catch (e) {\n              setError(e.toString())\n              setVerifying(false)\n              return\n            }\n\n            setVerifying(false)\n            setInConfig(\"labelhelp.apikey\", textFieldValue)\n            posthog.capture(\"save_api_key_button_clicked\")\n          }}\n        >\n          {verifying ? (\n            <>\n              <CircularProgress size={18} style={{ marginRight: 16 }} />\n              Checking...\n            </>\n          ) : (\n            <>\n              <SaveIcon style={{ marginRight: 8 }} />\n              Save\n            </>\n          )}\n        </Button>\n      </Box>\n    </Box>\n  )\n}\n","import { useFileContext } from \"./\"\nimport { useMemo } from \"react\"\nimport { setIn } from \"seamless-immutable\"\n\nexport const useActiveDataset = () => {\n  const { file, setFile } = useFileContext()\n  const result = useMemo(\n    () =>\n      !file || !file.content\n        ? null\n        : {\n            dataset: file.content,\n            setDataset: (newDataset) => {\n              setFile(setIn(file, [\"content\"], newDataset))\n            },\n          },\n    [file, setFile]\n  )\n  return result || {}\n}\n","import { useContext, createContext } from \"react\"\n\nexport const FileContext = createContext({})\n\nexport const useFileContext = () => useContext(FileContext)\n\nexport { useActiveDataset } from \"./use-active-dataset.js\"\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport Stepper from \"@material-ui/core/Stepper\"\nimport Step from \"@material-ui/core/Step\"\nimport StepLabel from \"@material-ui/core/StepLabel\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { useLabelHelp } from \"./\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useActiveDataset } from \"../FileContext\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport { setIn } from \"seamless-immutable\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nconst Container = styled(\"div\")({\n  fontVariantNumeric: \"tabular-nums\",\n})\nconst Link = styled(\"a\")({\n  color: colors.blue[500],\n  textDecoration: \"none\",\n})\n\nconst usdFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\nconst preciseUSDFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  maximumFractionDigits: 4,\n  minimumFractionDigits: 2,\n})\n\nconst steps = [\"setup\", \"running\", \"completed\"]\n\nexport default () => {\n  const { fromConfig, setInConfig } = useAppConfig()\n  const {\n    labelHelpEnabled,\n    labelHelpError,\n    loadMyCredits,\n    variables,\n    totalCost,\n    formulaFunc,\n    myCredits,\n  } = useLabelHelp()\n  const [error, setError] = useState()\n  const { dataset, setDataset } = useActiveDataset()\n\n  const [labelHelpInfo, setLabelHelpInfo] = useState(dataset.labelHelp || {})\n  const collabUrl = labelHelpInfo.url || (dataset.labelHelp || {}).url\n\n  const posthog = usePosthog()\n\n  useEffect(() => {\n    if (myCredits === null || myCredits === undefined) {\n      loadMyCredits(dataset)\n    }\n  }, [myCredits, dataset, loadMyCredits])\n\n  useEffect(() => {\n    if (!collabUrl) return\n    async function loadJob() {\n      const response = await fetch(\n        `https://labelhelp.universaldatatool.com/api/job?custom_id=${encodeURIComponent(\n          collabUrl\n        )}&api_key=${fromConfig(\"labelhelp.apikey\")}`\n      ).then((r) => r.json())\n      // response contains { progress, status }\n      console.log({ response })\n      setLabelHelpInfo({\n        ...dataset.labelHelp,\n        ...response,\n        loaded: true,\n      })\n    }\n    loadJob()\n  }, [collabUrl, dataset.labelHelp, fromConfig])\n\n  if (!labelHelpEnabled)\n    return (\n      <Container>\n        Label Help is Disabled.\n        {labelHelpError && (\n          <div style={{ color: colors.red[500] }}>{labelHelpError}</div>\n        )}\n      </Container>\n    )\n\n  const activeStep = !collabUrl\n    ? \"setup\"\n    : labelHelpInfo.progress === 1\n    ? \"completed\"\n    : \"running\"\n\n  return (\n    <Container>\n      <Stepper activeStep={steps.indexOf(activeStep)}>\n        {[\"Setup\", \"Running\", \"Completed\"].map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      {error && <Box color={colors.red[600]}>{error}</Box>}\n      {activeStep === \"setup\" ? (\n        <Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Item</TableCell>\n                <TableCell>Quantity</TableCell>\n                <TableCell>Unit Cost</TableCell>\n                <TableCell>Cost / Sample</TableCell>\n                <TableCell>Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(variables).map((varName) => (\n                <TableRow>\n                  <TableCell style={{ textTransform: \"capitalize\" }}>\n                    {varName.replace(/_/g, \" \")}\n                  </TableCell>\n                  <TableCell>{variables[varName]}</TableCell>\n                  <TableCell>\n                    {varName === \"sample_count\"\n                      ? \"\"\n                      : preciseUSDFormatter.format(\n                          (totalCost -\n                            formulaFunc({ ...variables, [varName]: 0 })) /\n                            variables.sample_count /\n                            (variables[varName] === 0 ? 1 : variables[varName])\n                        )}\n                  </TableCell>\n                  <TableCell>\n                    {usdFormatter.format(\n                      (totalCost -\n                        formulaFunc({ ...variables, [varName]: 0 })) /\n                        variables.sample_count\n                    )}\n                  </TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell>Total Cost</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell>{usdFormatter.format(totalCost)}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Time to Complete</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell>1-3 days</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            padding={2}\n            paddingTop={4}\n          >\n            <Box>Credits: {usdFormatter.format(myCredits)}</Box>\n            <Box flexGrow={1} />\n            <Button\n              onClick={() => {\n                setInConfig(\"labelhelp.apikey\", null)\n                posthog.capture(\"api_key_button_clicked\")\n              }}\n              variant=\"outlined\"\n            >\n              API Key\n            </Button>\n            <Button\n              color={myCredits < totalCost ? \"primary\" : \"none\"}\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              href=\"https://labelhelp.universaldatatool.com#addcredits\"\n              onClick={() => {\n                posthog.capture(\"add_credits_button_clicked\")\n              }}\n            >\n              Add Credits\n            </Button>\n            <Button\n              onClick={async () => {\n                setError(null)\n                const response = await fetch(\n                  \"https://labelhelp.universaldatatool.com/api/submit\",\n                  {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                      dataset,\n                      price: totalCost,\n                      api_key: fromConfig(\"labelhelp.apikey\"),\n                    }),\n                    headers: { \"Content-Type\": \"application/json\" },\n                  }\n                )\n                  .then((r) => r.json())\n                  .catch((e) => {\n                    setError(e.toString())\n                    return null\n                  })\n                if (!response) {\n                  setError(\"Empty response from server\")\n                  return null\n                }\n\n                setDataset(\n                  setIn(dataset, [\"labelHelp\"], {\n                    url: response.custom_id,\n                  })\n                )\n\n                posthog.capture(\"start_label_help_button_clicked\")\n              }}\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              color={myCredits >= totalCost ? \"primary\" : \"none\"}\n            >\n              Start Label Help\n            </Button>\n          </Box>\n        </Box>\n      ) : activeStep === \"running\" ? (\n        <Box>\n          {labelHelpInfo.loaded ? (\n            <Table>\n              <TableBody>\n                <TableRow>\n                  <TableCell>Status</TableCell>\n                  <TableCell>{labelHelpInfo.status}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Link</TableCell>\n                  <TableCell>\n                    <Link href={labelHelpInfo.url}>{labelHelpInfo.url}</Link>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Percent Complete</TableCell>\n                  <TableCell>{labelHelpInfo.progress.toFixed(1)}%</TableCell>\n                </TableRow>\n                {labelHelpInfo.price && (\n                  <TableRow>\n                    <TableCell>Budget Used</TableCell>\n                    <TableCell>\n                      ${labelHelpInfo.progress * labelHelpInfo.price} / $75\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          ) : (\n            <Box padding={8} textAlign=\"center\">\n              <CircularProgress size={100} />\n            </Box>\n          )}\n          <Box display=\"flex\" marginTop={2} justifyContent=\"flex-end\">\n            {/* TODO add stop early by calling /api/stop */}\n            {/* <Button\n              variant=\"outlined\"\n              style={{\n                color: colors.red[500],\n                border: `1px solid ${colors.red[200]}`,\n              }}\n            >\n              Stop Early\n            </Button> */}\n            <Box flexGrow={1} />\n            {/* TODO sync samples merges samples from link */}\n            {/* <Button variant=\"outlined\" color=\"primary\">\n              Sync Samples\n            </Button> */}\n          </Box>\n        </Box>\n      ) : activeStep === \"completed\" ? (\n        <Box>\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell>Percent Complete</TableCell>\n                <TableCell>100%</TableCell>\n              </TableRow>\n              {labelHelpInfo.price && (\n                <TableRow>\n                  <TableCell>Total Cost</TableCell>\n                  <TableCell>\n                    {usdFormatter.format(labelHelpInfo.price)}\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n          <Box display=\"flex\" marginTop={2} justifyContent=\"flex-end\">\n            <Button variant=\"outlined\">Restart</Button>\n            {/* TODO sync samples merges samples from link */}\n            {/* <Button\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Sync Samples\n            </Button> */}\n          </Box>\n        </Box>\n      ) : null}\n    </Container>\n  )\n}\n","import React, { createContext, useMemo, useState } from \"react\"\n\nimport { useAppConfig } from \"../AppConfig\"\nexport const LabelHelpContext = createContext({})\n\nexport const LabelHelpProvider = ({ children }) => {\n  const { fromConfig, setInConfig } = useAppConfig()\n  const [loadingPricingConfig, setLoadingPricingConfig] = useState(false)\n  const [pricingConfig, setPricingConfig] = useState(false)\n  const [loadingMyTeam, setLoadingMyTeam] = useState(false)\n  const [myCredits, setMyCredits] = useState(null)\n  const contextValue = useMemo(\n    () => ({\n      pricingConfig,\n      myCredits,\n      loadPricingConfig: async () => {\n        if (loadingPricingConfig) return\n        setLoadingPricingConfig(true)\n        const pricingConfig = await fetch(\n          \"https://labelhelp.universaldatatool.com/api/price\"\n        ).then((r) => r.json())\n        setLoadingPricingConfig(false)\n        setPricingConfig(pricingConfig)\n      },\n      loadMyCredits: async () => {\n        if (loadingMyTeam) return\n        setLoadingMyTeam(true)\n        const apiKey = fromConfig(\"labelhelp.apikey\")\n        if (!apiKey) return\n        let response\n        try {\n          response = await fetch(\n            `https://labelhelp.universaldatatool.com/api/me`,\n            {\n              headers: { apikey: apiKey },\n            }\n          )\n          response = await response.json()\n        } catch (e) {\n          console.error(e)\n          setLoadingMyTeam(false)\n          return Promise.reject(e)\n        }\n        if (response.status >= 400) {\n          setInConfig(\"labelhelp.apikey\", null)\n        }\n\n        setMyCredits(response.credit)\n        setLoadingMyTeam(false)\n      },\n    }),\n    [\n      pricingConfig,\n      loadingPricingConfig,\n      // eslint-disable-next-line\n      fromConfig(\"labelhelp.apikey\"),\n      loadingMyTeam,\n      myCredits,\n      fromConfig,\n      setInConfig,\n    ]\n  )\n  return (\n    <LabelHelpContext.Provider value={contextValue}>\n      {children}\n    </LabelHelpContext.Provider>\n  )\n}\n","import useIsDesktop from \"./use-is-desktop\"\nexport default () => {\n  const isDesktop = useIsDesktop()\n  if (isDesktop) return false\n  if (window.location.search.includes(\"mode=labelonly\")) {\n    return true\n  }\n  return false\n}\n","export default (dataset, varName) => {\n  let fields = (dataset.interface || {}).fields || []\n  // const totalLabels = fields.reduce(\n  //   (acc, f) =>\n  //     f.interface.type !== \"data_entry\"\n  //       ? acc\n  //       : acc + (f.interface.surveyjs.questions[0].choices || []).length,\n  //   0\n  // )\n  // const totalBoundingBoxes = fields.filter(\n  //   (f) => f.interface.type === \"image_segmentation\"\n  // ).length\n\n  switch (varName) {\n    case \"sample_count\":\n    case \"num_samples\":\n      return (dataset.samples || []).length\n    case \"number_of_fields\":\n      return Object.keys(dataset.interface.fields || {}).length\n    case \"text_field_count\":\n      if (dataset.interface.type === \"data_entry\") {\n        return dataset.interface.surveyjs.questions.filter(\n          (q) => q.type === \"text\"\n        ).length\n      } else if (dataset.interface.type === \"composite\") {\n        return fields.filter(\n          (f) =>\n            f.interface.type === \"data_entry\" &&\n            f.interface.surveyjs.questions[0].type === \"text\"\n        ).length\n      } else {\n        throw new Error(\n          \"Couldn't compute text_field_count for interface: \" +\n            dataset.interface.type\n        )\n      }\n    case \"number_of_classifications\":\n      return dataset.interface.labels.length\n    case \"average_number_of_interactions_per_image\":\n      // find completed samples\n      const completedSamples = dataset.samples.filter((s) => s.annotation)\n      let totalInteractions = 0\n      let totalSamplesConsidered = 0\n      for (const { annotation } of completedSamples) {\n        if (totalSamplesConsidered > 10) break\n        if (typeof annotation === \"object\" && annotation.length) {\n          totalSamplesConsidered += 1\n          for (const { points } of annotation) {\n            if (points) {\n              totalInteractions += points.length\n            } else {\n              totalInteractions += 1\n            }\n          }\n        }\n      }\n      if (totalSamplesConsidered < 1)\n        throw new Error(\n          \"Not enough completed samples to compute average_number_of_interactions_per_image\"\n        )\n      return totalInteractions / totalSamplesConsidered\n    case \"number_of_exclusive_classifications\":\n      return dataset.interface.multiple ? 0 : dataset.interface.labels.length\n    case \"number_of_nonexclusive_classifications\":\n      return dataset.interface.multiple ? dataset.interface.labels.length : 0\n    case \"average_text_length\":\n      return (\n        dataset.samples\n          .map((s) => s.document.length)\n          .reduce((acc, l) => acc + l, 0) / dataset.samples.length\n      )\n    case \"number_of_labels\":\n      return dataset.interface.labels.length\n    default:\n      throw new Error(`Don't know how to compute \"${varName}\"`)\n  }\n}\n","import { useContext, useEffect } from \"react\"\n\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\nimport { useActiveDataset } from \"../FileContext\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { LabelHelpContext } from \"./LabelHelpProvider.js\"\nimport computeDatasetVariable from \"../../utils/compute-dataset-variable\"\n\nexport const useLabelHelp = () => {\n  const isLabelOnlyMode = useIsLabelOnlyMode()\n  const { dataset } = useActiveDataset()\n  const {\n    pricingConfig,\n    myCredits,\n    remoteFile,\n    loadPricingConfig,\n    loadMyCredits,\n  } = useContext(LabelHelpContext)\n  const { fromConfig } = useAppConfig()\n  const labelHelpDisabled = Boolean(fromConfig(\"labelhelp.disabled\"))\n  const hasLabelHelpAPIKey = Boolean(fromConfig(\"labelhelp.apikey\"))\n\n  useEffect(() => {\n    if (labelHelpDisabled || isLabelOnlyMode) return\n    if (!dataset) return\n    if (!pricingConfig) loadPricingConfig()\n  }, [\n    pricingConfig,\n    isLabelOnlyMode,\n    labelHelpDisabled,\n    loadPricingConfig,\n    dataset,\n  ])\n\n  if (!dataset)\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"no active dataset\",\n    }\n  if (labelHelpDisabled)\n    return { labelHelpEnabled: false, labelHelpError: \"Disabled in config\" }\n  if (isLabelOnlyMode) return { labelHelpEnabled: false }\n  if (!hasLabelHelpAPIKey && dataset.samples.length < 100) {\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"Less than 100 samples\",\n    }\n  }\n  if (!pricingConfig) {\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"No pricing config\",\n    }\n  }\n\n  try {\n    const { formula, variables: variableDescriptions } =\n      pricingConfig[dataset.interface.type] || {}\n\n    if (!formula)\n      return {\n        labelHelpEnabled: false,\n        labelHelpError: `No pricing formula for \"${dataset.interface.type}\"`,\n      }\n\n    const variables = {}\n    for (const variableName of Object.keys(variableDescriptions)) {\n      variables[variableName] = computeDatasetVariable(dataset, variableName)\n    }\n\n    const funcArgs = Object.keys(variables)\n    // TODO sanitize formula\n    // eslint-disable-next-line\n    const formulaFuncPos = new Function(...funcArgs, \"return \" + formula)\n    const formulaFunc = (variables) => {\n      return formulaFuncPos(...funcArgs.map((ak) => variables[ak]))\n    }\n    const totalCost = formulaFunc(variables)\n\n    return {\n      labelHelpEnabled: true,\n      myCredits,\n      loadMyCredits,\n      remoteFile,\n      formula,\n      variableDescriptions,\n      variables,\n      formulaFunc,\n      totalCost,\n      labelHelpAPIKey: fromConfig(\"labelhelp.apikey\"),\n    }\n  } catch (e) {\n    return { labelHelpEnabled: false, labelHelpError: e.toString() }\n  }\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport APIKeyEntry from \"./api-key-entry.js\"\nimport PaperContainer from \"../PaperContainer\"\nimport LabelHelpDialogContent from \"./label-help-dialog-content\"\nimport { useAppConfig } from \"../AppConfig\"\n\nexport { LabelHelpProvider, LabelHelpContext } from \"./LabelHelpProvider.js\"\nexport { useLabelHelp } from \"./use-label-help\"\n\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n})\n\nexport const LabelHelpView = () => {\n  const { fromConfig } = useAppConfig()\n  const hasAPIKey = Boolean(fromConfig(\"labelhelp.apikey\"))\n\n  return (\n    <Container>\n      {!hasAPIKey ? (\n        <APIKeyEntry key=\"apikeyentry\" />\n      ) : (\n        <PaperContainer\n          key=\"dialogcontent\"\n          style={{ marginTop: 48, width: \"100%\", maxWidth: 800 }}\n        >\n          <LabelHelpDialogContent />\n        </PaperContainer>\n      )}\n    </Container>\n  )\n}\n\nexport default LabelHelpView\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  fontSize: 18,\n  padding: 32,\n  textAlign: \"center\",\n  color: colors.grey[700],\n  \"& a\": {\n    color: colors.blue[500],\n  },\n})\n\nexport const ActiveLearningView = () => {\n  return (\n    <Container>\n      Hey, this isn't available yet, but if you'd like this functionality please\n      let us know by leaving a thumbs up on{\" \"}\n      <a href=\"https://github.com/UniversalDataTool/universal-data-tool/issues/148\">\n        this github issue\n      </a>\n    </Container>\n  )\n}\n\nexport default ActiveLearningView\n","import React, { useEffect, useState } from \"react\"\nimport LabelErrorBoundary from \"../LabelErrorBoundary\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport Stats from \"../Stats\"\nimport SampleGrid from \"../SampleGrid\"\nimport Box from \"@material-ui/core/Box\"\nimport { setIn } from \"seamless-immutable\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport duration from \"duration\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\"\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\"\nimport LabelHelpView, { useLabelHelp } from \"../LabelHelpView\"\nimport ActiveLearningView from \"../ActiveLearningView\"\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\n\nconst OverviewContainer = styled(\"div\")({\n  padding: 16,\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  boxSizing: \"border-box\",\n})\n\nexport default ({\n  dataset,\n  onChangeDataset,\n  selectedBrush = \"complete\",\n  sampleIndex,\n  onChangeSampleIndex,\n  onClickSetup,\n  onChangeSampleTimeToComplete,\n  sampleTimeToComplete,\n}) => {\n  const [currentTab, setTab] = useState(\"label\")\n  const [showLabelHelpPricing, setShowLabelHelpPricing] = useState(false)\n  const posthog = usePosthog()\n  const { labelHelpEnabled, totalCost } = useLabelHelp()\n  const labelOnlyMode = useIsLabelOnlyMode()\n  const [annotationStartTime, setAnnotationStartTime] = useState(null)\n\n  useEffect(() => {\n    if (process.env.REACT_APP_SHOW_LABELHELP_PRICING === \"true\")\n      setShowLabelHelpPricing(true)\n  }, [])\n\n  const isInOverview = sampleIndex === null\n\n  let percentComplete = 0\n  if (dataset.samples && dataset.samples.length > 0) {\n    percentComplete =\n      dataset.samples\n        .map((s) => s.annotation !== undefined && s.annotation !== null)\n        .filter(Boolean).length / dataset.samples.length\n  }\n\n  useEffect(() => {\n    if (labelHelpEnabled) {\n      posthog.capture(\"label_help_showed\")\n    }\n  }, [labelHelpEnabled, posthog])\n\n  useEffect(() => {\n    if (currentTab === \"labelhelp\") {\n      posthog.capture(\"label_help_clicked\")\n    }\n  }, [currentTab, posthog])\n\n  return !isInOverview ? (\n    <LabelErrorBoundary>\n      <UniversalDataViewer\n        sampleIndex={sampleIndex}\n        onSaveTaskOutputItem={(relativeIndex, output) => {\n          const sample = dataset.samples[sampleIndex]\n\n          let newDataset = dataset\n          newDataset = setIn(\n            newDataset,\n            [\"samples\", sampleIndex, \"annotation\"],\n            output\n          )\n\n          if (\n            sample.brush !== selectedBrush &&\n            !(sample.brush === undefined && selectedBrush === \"complete\")\n          ) {\n            newDataset = setIn(\n              newDataset,\n              [\"samples\", sampleIndex, \"brush\"],\n              selectedBrush\n            )\n          }\n          onChangeDataset(newDataset)\n        }}\n        onExit={(nextAction = \"nothing\") => {\n          if (annotationStartTime) {\n            onChangeSampleTimeToComplete(Date.now() - annotationStartTime)\n          }\n          switch (nextAction) {\n            case \"go-to-next\":\n              if (sampleIndex !== dataset.samples.length - 1) {\n                posthog.capture(\"next_sample\", {\n                  interface_type: dataset.interface.type,\n                })\n                // TODO reset start time\n                onChangeSampleIndex(sampleIndex + 1)\n                setAnnotationStartTime(Date.now())\n                return\n              }\n              break\n            case \"go-to-previous\":\n              if (sampleIndex !== 0) {\n                onChangeSampleIndex(sampleIndex - 1)\n                setAnnotationStartTime(Date.now())\n                return\n              }\n              break\n            default:\n              break\n          }\n          onChangeSampleIndex(null)\n        }}\n        dataset={dataset}\n        onClickSetup={onClickSetup}\n      />\n    </LabelErrorBoundary>\n  ) : (\n    <OverviewContainer>\n      <Box display=\"flex\">\n        <Box>\n          <Tabs value={currentTab} onChange={(e, newTab) => setTab(newTab)}>\n            <Tab icon={<BorderColorIcon />} label=\"Label\" value=\"label\" />\n            {!labelOnlyMode && (\n              <Tab\n                icon={<DataUsageIcon />}\n                label=\"Active Learning\"\n                value=\"activelearning\"\n              />\n            )}\n            {labelHelpEnabled && (\n              <Tab\n                icon={<SupervisedUserCircleIcon />}\n                label={\n                  showLabelHelpPricing && totalCost\n                    ? `${totalCost}$`\n                    : \"Label Help\"\n                }\n                value=\"labelhelp\"\n              />\n            )}\n          </Tabs>\n        </Box>\n        <Box flexGrow={1} />\n        <Stats\n          stats={[\n            {\n              name: \"Percent Complete\",\n              value: Math.floor(percentComplete * 100) + \"%\",\n            },\n            {\n              name: \"Time per Sample\",\n              value: duration(\n                new Date(Date.now() - sampleTimeToComplete)\n              ).toString(1, 1),\n            },\n            {\n              name: \"Estimated Remaining\",\n              value: duration(\n                new Date(\n                  Date.now() -\n                    sampleTimeToComplete *\n                      (1 - percentComplete) *\n                      (dataset.samples || []).length\n                )\n              ).toString(1, 2),\n            },\n          ]}\n        />\n      </Box>\n      <Box flexGrow={1}>\n        {currentTab === \"label\" && (\n          <SampleGrid\n            tablePaginationPadding={6}\n            count={(dataset.samples || []).length}\n            samples={dataset.samples || []}\n            completed={(dataset.samples || []).map((s) =>\n              Boolean(s.annotation)\n            )}\n            onClick={(selectedSampleIndex) => {\n              posthog.capture(\"open_sample\", {\n                interface_type: dataset.interface.type,\n              })\n              onChangeSampleIndex(selectedSampleIndex)\n            }}\n          />\n        )}\n        {currentTab === \"activelearning\" && <ActiveLearningView />}\n        {currentTab === \"labelhelp\" && <LabelHelpView />}\n      </Box>\n    </OverviewContainer>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport AceEditor from \"react-ace\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport { useToasts } from \"../Toasts\"\n\nexport const RawJSONEditor = ({ content, onSave }) => {\n  const [jsonText, setJSONText] = useState(\"\")\n  const { addToast } = useToasts()\n  useEffect(() => {\n    if (!content) return\n    if (typeof content === \"string\") {\n      setJSONText(content)\n    } else if (typeof content === \"object\") {\n      setJSONText(JSON.stringify(content, null, \"  \"))\n    }\n  }, [content])\n  return (\n    <Box position=\"relative\" width=\"100%\">\n      <AceEditor\n        theme=\"github\"\n        mode=\"javascript\"\n        width=\"100%\"\n        value={jsonText}\n        editorProps={{ $blockScrolling: Infinity }}\n        onChange={(t) => setJSONText(t)}\n      />\n      <Box position=\"absolute\" right={16} top={16}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            try {\n              onSave(JSON.parse(jsonText))\n            } catch (e) {\n              addToast(\"Invalid JSON\", \"error\")\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Box>\n    </Box>\n  )\n}\n\nexport default RawJSONEditor\n","// @flow\n\nimport React, { useState, useEffect, useMemo } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Header from \"../Header\"\nimport EditableTitleText from \"./EditableTitleText.js\"\nimport SamplesView from \"../SamplesView\"\nimport InterfacePage from \"../InterfacePage\"\nimport EditSampleDialog from \"../EditSampleDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport useTimeToCompleteSample from \"../../utils/use-time-to-complete-sample.js\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { useToasts } from \"../Toasts\"\nimport { setIn, without } from \"seamless-immutable\"\nimport useEventCallback from \"use-event-callback\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport classnames from \"classnames\"\nimport LabelView from \"../LabelView\"\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\nimport { HotKeys } from \"react-hotkeys\"\nimport { useHotkeyStorage } from \"../HotkeyStorage\"\nimport RawJSONEditor from \"../RawJSONEditor\"\n\nimport \"brace/mode/javascript\"\nimport \"brace/theme/github\"\n\nconst useStyles = makeStyles({\n  headerButton: {\n    color: \"#fff\",\n  },\n  saveIcon: {\n    marginRight: 4,\n  },\n  editIcon: {\n    marginLeft: 4,\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100vw\",\n    height: \"100vh\",\n  },\n})\n\nexport default ({\n  file,\n  datasetName = \"Universal Data Tool\",\n  dataset,\n  content,\n  inSession,\n  url,\n  fileName = \"unnamed\",\n  onChangeDataset = () => null,\n  onChangeFile,\n  onFileDrop,\n  initialMode = \"setup\",\n  authConfig,\n  user,\n  recentItems,\n  selectedBrush,\n}) => {\n  const labelOnlyMode = useIsLabelOnlyMode()\n  var [valueDisplay, setValueDisplay] = useState(fileName)\n  const c = useStyles()\n  const { addToast } = useToasts()\n  const [mode, changeMode] = useState(labelOnlyMode ? \"label\" : initialMode)\n  const [sampleInputEditor, changeSampleInputEditor] = useState({})\n  const { ipcRenderer } = useElectron() || {}\n  const posthog = usePosthog()\n\n  const [sampleIndex, setSampleIndex] = useState(null)\n\n  const headerTabs = labelOnlyMode ? [\"Label\"] : [\"Setup\", \"Samples\", \"Label\"]\n\n  const [\n    sampleTimeToComplete,\n    changeSampleTimeToComplete,\n  ] = useTimeToCompleteSample()\n\n  useEffect(() => {\n    if (!ipcRenderer) return\n    const onOpenSettingsPage = () => changeMode(\"settings\")\n    const onOpenSamplesPage = () => changeMode(\"samples\")\n    const onOpenLabelPage = () => changeMode(\"label\")\n    ipcRenderer.on(\"open-settings-page\", onOpenSettingsPage)\n    ipcRenderer.on(\"open-samples-page\", onOpenSamplesPage)\n    ipcRenderer.on(\"open-label-page\", onOpenLabelPage)\n    return () => {\n      ipcRenderer.removeListener(\"open-settings-page\", onOpenSettingsPage)\n      ipcRenderer.removeListener(\"open-samples-page\", onOpenSamplesPage)\n      ipcRenderer.removeListener(\"open-label-page\", onOpenLabelPage)\n    }\n  }, [ipcRenderer])\n\n  useEffect(() => {\n    posthog.people.set({\n      average_time_to_complete_sample: sampleTimeToComplete,\n    })\n  }, [sampleTimeToComplete, posthog.people])\n\n  useEffect(() => {\n    if (mode !== \"label\") setSampleIndex(null)\n    posthog.capture(\"open_editor_tab\", { tab: mode })\n  }, [mode, posthog])\n\n  const onChangeTab = useEventCallback((tab) => changeMode(tab.toLowerCase()))\n\n  const shortcutHandlers = useMemo(\n    () => ({\n      switch_to_label: () => changeMode(\"label\"),\n      switch_to_setup: () => changeMode(\"setup\"),\n      switch_to_samples: () => changeMode(\"samples\"),\n    }),\n    [changeMode]\n  )\n\n  const { keyMap } = useHotkeyStorage()\n\n  return (\n    <HotKeys allowChanges handlers={shortcutHandlers} keyMap={keyMap}>\n      <div className={classnames(c.container, \"universaldatatool\")}>\n        <Header\n          title={\n            inSession ? (\n              <TextField\n                label=\"Share Link\"\n                title=\"share-link\"\n                value={url}\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            ) : (\n              <EditableTitleText\n                label=\"File Name\"\n                onChange={(newName) => {\n                  onChangeFile(setIn(file, [\"fileName\"], newName))\n                  setValueDisplay(newName)\n                }}\n                value={valueDisplay || \"\"}\n              />\n            )\n          }\n          onChangeTab={onChangeTab}\n          currentTab={mode}\n          tabs={headerTabs}\n        />\n        <div style={{ height: \"100%\", overflowY: \"scroll\" }}>\n          {mode === \"json\" && (\n            <RawJSONEditor\n              content={dataset}\n              onSave={(newDataset) => {\n                onChangeDataset(newDataset)\n                changeMode(\"setup\")\n              }}\n            />\n          )}\n          {mode === \"setup\" && (\n            <InterfacePage\n              onClickEditJSON={() => changeMode(\"json\")}\n              dataset={dataset}\n              onClearLabelData={() => {\n                onChangeDataset(\n                  setIn(\n                    dataset,\n                    [\"samples\"],\n                    dataset.samples.map((s) => without(s, \"annotation\"))\n                  )\n                )\n              }}\n              onChange={(iface) => {\n                if (\n                  iface.type !== dataset.interface.type &&\n                  dataset.interface.type !== \"empty\" &&\n                  dataset.samples.map((s) => s.annotation).some(Boolean)\n                ) {\n                  addToast(\n                    \"Changing label types can cause label data issues. You must clear all label data first.\",\n                    \"error\"\n                  )\n                  return\n                }\n                onChangeDataset({\n                  ...dataset,\n                  interface: iface,\n                })\n              }}\n            />\n          )}\n          {mode === \"samples\" && (\n            <SamplesView\n              file={file}\n              dataset={dataset}\n              openSampleLabelEditor={(sampleIndex) => {\n                setSampleIndex(sampleIndex)\n                posthog.capture(\"open_sample\", {\n                  interface_type: dataset.interface.type,\n                })\n                changeMode(\"label\")\n              }}\n              openSampleInputEditor={(sampleIndex) => {\n                changeSampleInputEditor({ open: true, sampleIndex })\n              }}\n              deleteSample={(sampleIndex) => {\n                const newSamples = [...dataset.samples]\n                newSamples.splice(sampleIndex, 1)\n                onChangeDataset({\n                  ...dataset,\n                  samples: newSamples,\n                })\n              }}\n              onChangeFile={(file) => {\n                onChangeFile(file)\n                setValueDisplay(file.fileName)\n              }}\n              onChangeDataset={onChangeDataset}\n              authConfig={authConfig}\n              user={user}\n            />\n          )}\n          {mode === \"label\" && (\n            <LabelView\n              selectedBrush={selectedBrush}\n              dataset={dataset}\n              sampleIndex={sampleIndex}\n              onChangeSampleIndex={setSampleIndex}\n              sampleTimeToComplete={sampleTimeToComplete}\n              onChangeSampleTimeToComplete={changeSampleTimeToComplete}\n              onChangeDataset={onChangeDataset}\n              onClickSetup={() => changeMode(\"setup\")}\n            />\n          )}\n        </div>\n        <EditSampleDialog\n          {...sampleInputEditor}\n          sampleInput={\n            sampleInputEditor.sampleIndex !== undefined\n              ? dataset.samples[sampleInputEditor.sampleIndex]\n              : null\n          }\n          onClose={() => {\n            changeSampleInputEditor({ open: false })\n          }}\n          onChange={(newInput) => {\n            onChangeDataset(\n              setIn(\n                dataset,\n                [\"samples\", sampleInputEditor.sampleIndex],\n                newInput\n              )\n            )\n          }}\n        />\n      </div>\n    </HotKeys>\n  )\n}\n","import { useReducer } from \"react\"\n\nexport default () => {\n  const [{ timeToCompleteSample }, changeSampleTimeToComplete] = useReducer(\n    (state, newTimeToComplete) => {\n      const newSamplesInWindow = state.samplesInWindow\n        .slice(-10)\n        .concat([newTimeToComplete])\n      return {\n        timeToCompleteSample:\n          newSamplesInWindow.reduce((acc, a) => acc + a, 0) /\n          newSamplesInWindow.length,\n        samplesInWindow: newSamplesInWindow,\n      }\n    },\n    { timeToCompleteSample: 0, samplesInWindow: [] }\n  )\n  return [timeToCompleteSample, changeSampleTimeToComplete]\n}\n","// @flow weak\n\nexport default (changeLog) => {\n  const humanReadableChangeLog = []\n  for (const { userName, op, path } of changeLog) {\n    if (path.startsWith(\"/interface\")) {\n      humanReadableChangeLog.push({\n        type: \"warning\",\n        message: `${userName} changed the project settings`,\n      })\n    } else if (path.startsWith(\"/taskOutput\")) {\n      const sampleMatch = path.match(/\\/samples\\/([^/]+)/)\n      humanReadableChangeLog.push({\n        type: \"info\",\n        message: `${userName} changed sample ${sampleMatch[1]}`,\n      })\n    } else {\n      humanReadableChangeLog.push({\n        message: `${userName} did a ${op} at ${path}`,\n        type: \"info\",\n      })\n    }\n  }\n  return humanReadableChangeLog\n}\n","/*\nThis doesn't handle a fair number of edge cases, for the full specification\nfor what it should implement, see https://tools.ietf.org/html/rfc6902\n\nWhen applySeamlessPatch is called, it usually is accompanied by a object hash\ncheck to make sure that the patch applied correctly, and if not, perform\na download of the latest version. Because of this, we can safely ignore the\ntricky edge cases.\n*/\n\nimport seamless from \"seamless-immutable\"\n\nconst { setIn, getIn, updateIn, without } = seamless\n\nfunction addToArray(a, newValue) {\n  return a.concat([newValue])\n}\n\nfunction withoutIn(obj, path) {\n  if (path.length === 0) return without(obj, path[0])\n  const parentPath = path.slice(0, -1)\n  const key = path[path.length - 1]\n  const parentObj = getIn(obj, parentPath)\n  if (Array.isArray(parentObj)) {\n    const index = parseInt(key)\n    return setIn(obj, parentPath, [\n      ...parentObj.slice(0, index),\n      ...parentObj.slice(index + 1),\n    ])\n  } else {\n    return setIn(obj, parentPath, without(parentObj, key))\n  }\n}\n\nexport default (object, patches) => {\n  for (const patch of patches) {\n    let { op, path } = patch\n    path = path.split(\"/\").filter(Boolean)\n    if (path.length === 0) {\n      // this operation is on the root object, special handling should apply\n      if (op === \"replace\") {\n        object = patch.value\n        continue\n      }\n      throw new Error(\"Operation on root object not supported\")\n    }\n    switch (op) {\n      case \"replace\": {\n        object = setIn(object, path, patch.value)\n        continue\n      }\n      case \"copy\": {\n        object = setIn(object, path, getIn(object, patch.from.split(\"/\")))\n        continue\n      }\n      case \"add\": {\n        if (!isNaN(parseInt(path.slice(-1)[0]))) {\n          object = setIn(object, path, patch.value)\n        } else {\n          const arrayAtPath = Array.isArray(getIn(object, path))\n          if (arrayAtPath) {\n            object = updateIn(object, path, addToArray, patch.value)\n          } else {\n            object = setIn(object, path, patch.value)\n          }\n        }\n        continue\n      }\n      case \"move\": {\n        const from = patch.from.split(\"/\")\n        object = setIn(object, path, getIn(object, from))\n        object = withoutIn(object, from)\n        continue\n      }\n      case \"remove\": {\n        object = withoutIn(object, path)\n        continue\n      }\n      default:\n        return object\n    }\n  }\n  return object\n}\n","// This is the same hashing code that the server uses\n\nconst stringify = require(\"json-stable-stringify\")\n\nconst hashString = (s) => {\n  var hash = 0,\n    i,\n    chr\n  for (i = 0; i < s.length; i++) {\n    chr = s.charCodeAt(i)\n    hash = (hash << 5) - hash + chr\n    hash |= 0\n  }\n  return hash\n}\n\nexport default (o) => hashString(stringify(o))\n","// @flow\n\nimport { useEffect } from \"react\"\nimport CollaborationHandler from \"./handler.js\"\nimport { setIn } from \"seamless-immutable\"\n\nconst serverUrl =\n  window.localStorage.CUSTOM_COLLABORATION_SERVER ||\n  \"https://udt-collaboration-server.now.sh\"\n\n// We use a global singleton to manage the collaboration state machine\nconst collab = new CollaborationHandler({ serverUrl })\n\nexport const convertToCollaborativeFile = async (file) => {\n  await collab.createSession(file.content)\n  return {\n    fileName: file.fileName,\n    id: file.id,\n    sessionId: collab.sessionId,\n    url: `${window.location.origin}/app/?s=${collab.sessionId}`,\n    content: file.content,\n    mode: \"server\",\n  }\n}\n\nexport const joinSession = async (sessionId) => {\n  await collab.joinSession(sessionId)\n  return {\n    state: collab.state,\n    version: collab.version,\n  }\n}\n\nexport default (file, changeFile) => {\n  // const { addToast } = useToasts()\n  const userName = window.localStorage.userName\n  useEffect(() => {\n    if (userName && !userName.includes(\"anonymous\")) {\n      try {\n        collab.userName = JSON.parse(window.localStorage.userName)\n      } catch (e) {}\n    }\n  }, [userName])\n\n  useEffect(() => {\n    if (!file || file.mode !== \"server\") return\n    if (file.sessionId !== collab.sessionId) return\n\n    const checkForLatestPatch = async () => {\n      const applyResult = await collab.applyLatestPatches()\n\n      if (applyResult) {\n        // TODO apply in a smart, immutable way\n        changeFile(setIn(file, [\"content\"], collab.state))\n      }\n\n      if (!timeout) return\n      timeout = setTimeout(checkForLatestPatch, 500)\n    }\n\n    let timeout = setTimeout(checkForLatestPatch, 500)\n    return () => {\n      clearTimeout(timeout)\n      timeout = null\n    }\n  }, [file, changeFile])\n\n  // Update the Server State by Sending Patches\n  useEffect(() => {\n    if (!file || file.mode !== \"server\") return\n    collab.sendPatchIfChanged(file.content)\n  }, [file])\n}\n","// @flow weak\n// NOTE: for unit tests you need to change the following line to...\n// import rfc6902 from \"rfc6902\"\nimport * as rfc6902 from \"rfc6902\"\nimport bent from \"bent\"\nimport getHumanReadableLog from \"./get-human-readable-log.js\"\nimport applySeamlessPatch from \"./apply-seamless-patch.js\"\nimport hash from \"./server-hash.js\"\n\nclass CollaborationHandler {\n  serverUrl = \"http://localhost:6003\"\n  getJSON = (url, payload, opts) => {}\n  postJSON = (url, payload, opts) => {}\n  patchJSON = (url, payload, opts) => {}\n  userName = \"anonymous\"\n\n  sessionId = null\n  state = null\n  version = null\n\n  constructor({ serverUrl, userName }) {\n    this.serverUrl = serverUrl\n    this.getJSON = bent(\"json\", \"GET\", serverUrl)\n    this.postJSON = bent(\"json\", \"POST\", serverUrl)\n    this.patchJSON = bent(\"json\", \"PATCH\", serverUrl)\n    this.userName =\n      userName || `anonymous_${Math.random().toString(36).slice(2, 6)}`\n  }\n\n  async createSession(initialContent) {\n    const response = await this.postJSON(\"/api/session\", {\n      udt: initialContent,\n    })\n\n    this.state = initialContent\n    this.sessionId = response.short_id\n    this.version = response.version\n  }\n\n  async getLatestState() {\n    try {\n      const res = await this.getJSON(\n        `/api/session/${encodeURIComponent(this.sessionId)}`\n      )\n      return {\n        state: res.udt_json,\n        version: res.version,\n      }\n    } catch (e) {\n      throw new Error(\n        `error getting session \"${this.sessionId}\": ${e.toString()}`\n      )\n    }\n  }\n\n  async updateToLatestState() {\n    const { state, version } = await this.getLatestState()\n    this.state = state\n    this.version = version\n  }\n\n  async joinSession(sessionId) {\n    this.sessionId = sessionId\n    await this.updateToLatestState()\n  }\n\n  async applyLatestPatches() {\n    const {\n      patch,\n      hashOfLatestState,\n      latestVersion,\n      changeLog,\n    } = await this.getJSON(\n      `/api/session/${encodeURIComponent(this.sessionId)}/diffs?since=${\n        this.version\n      }`\n    )\n\n    if (patch.length === 0 || latestVersion === this.version) {\n      return null\n    }\n\n    const humanReadableLog = getHumanReadableLog(changeLog)\n\n    let newState = applySeamlessPatch(this.state, patch)\n\n    if (hash(newState) !== hashOfLatestState) {\n      console.error(\"new state with patches applied didn't match latest state\")\n      await this.updateToLatestState()\n      return { patch, changeLog: humanReadableLog }\n    }\n\n    this.state = newState\n    this.version = latestVersion\n    return { patch, changeLog: humanReadableLog }\n  }\n\n  async sendPatchIfChanged(newState) {\n    const patch = rfc6902.createPatch(this.state, newState)\n    if (patch.length === 0) return null\n\n    const { hashOfLatestState, latestVersion } = await this.patchJSON(\n      `/api/session/${encodeURIComponent(this.sessionId)}`,\n      {\n        patch,\n        userName: this.userName,\n      }\n    )\n\n    if (hash(newState) !== hashOfLatestState) {\n      console.error(\n        \"after patch, hashes were not equal! getting latest version from server...\"\n      )\n      await this.updateToLatestState()\n      return this\n    }\n\n    this.state = newState\n    this.version = latestVersion\n    return this\n  }\n}\n\nexport default CollaborationHandler\n","import JAC from \"jac-format\"\nimport range from \"lodash/range\"\nimport { flatten } from \"flat\"\n\nexport default (obj) => {\n  const AddSamplesKeys = (k) => {\n    sampleKeys.add(k)\n  }\n  // Find all possible sample keys\n  let sampleKeys = new Set()\n  for (const sample of obj.samples) {\n    Object.keys(flatten(sample)).forEach((k) => AddSamplesKeys(k))\n  }\n  sampleKeys = Array.from(sampleKeys).sort(\n    (a, b) => a.split(\".\").length - b.split(\".\").length\n  )\n\n  if (sampleKeys.some((k) => k.includes(\"output.keyframes\"))) {\n    sampleKeys = sampleKeys.filter((k) => k.includes(\"output.keyframes\"))\n    sampleKeys.push(\"output.keyframes\")\n  }\n\n  const options = {\n    rows: [\n      \"interface\",\n      ...range(obj.samples.length).map((i) => `samples.${i}`),\n    ],\n    columns: [\".\", ...sampleKeys],\n    validate: false,\n  }\n\n  return JAC.toCSV(obj, options)\n}\n","// @flow\n\nimport { useEffect } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport useElectron from \"../use-electron.js\"\nimport { useToasts } from \"../../components/Toasts\"\nimport { setIn } from \"seamless-immutable\"\nimport toUDTCSV from \"../to-udt-csv.js\"\nimport useIsDesktop from \"../use-is-desktop\"\n\nconst webReturn = { saveFile: () => null }\n\nexport default (file, changeFile) => {\n  const isDesktop = useIsDesktop()\n  if (!isDesktop) return webReturn\n  const { addToast } = useToasts()\n  const { remote } = useElectron()\n  const saveFile = useEventCallback(({ saveAs = false } = {}) => {\n    if (!file) return\n    async function saveFileAsync() {\n      let filePath = file.filePath\n      if (!file.filePath || saveAs) {\n        const {\n          cancelled,\n          filePath: newFilePath,\n        } = await remote.dialog.showSaveDialog({\n          filters: [\n            { name: \".udt.json\", extensions: [\"udt.json\"] },\n            { name: \".udt.csv\", extensions: [\"udt.csv\"] },\n          ],\n        })\n        filePath =\n          !newFilePath ||\n          newFilePath.endsWith(\".json\") ||\n          newFilePath.endsWith(\".csv\")\n            ? newFilePath\n            : `${newFilePath}.udt.json`\n        if (cancelled || !filePath) {\n          addToast(\"Could not save\")\n          return\n        }\n        changeFile({\n          ...file,\n          filePath,\n          fileName: filePath.split(\"/\").slice(-1)[0],\n        })\n      }\n      await remote\n        .require(\"fs\")\n        .promises.writeFile(\n          filePath,\n          filePath.endsWith(\".csv\")\n            ? toUDTCSV(file.content)\n            : JSON.stringify(file.content, null, \"  \")\n        )\n      addToast(\"File Saved!\")\n    }\n    saveFileAsync()\n  })\n\n  useEffect(() => {\n    if (!file || !file.filePath) return\n    if (file.fileName !== file.filePath.split(\"/\").slice(-1)[0]) {\n      changeFile(\n        setIn(\n          file,\n          [\"filePath\"],\n          file.filePath\n            .split(\"/\")\n            .slice(0, -1)\n            .concat([\n              file.fileName +\n                (file.fileName.endsWith(\".json\") ? \"\" : \".dataset.json\"),\n            ])\n            .join(\"/\")\n        )\n      )\n    }\n  }, [file, changeFile])\n\n  return { saveFile }\n}\n","// @flow weak\n\nimport { useEffect } from \"react\"\nimport usePosthog from \"../../utils/use-posthog\"\nconst posthog = usePosthog()\n\nexport default (udt) => {\n  const udtInterface = udt?.interface\n  useEffect(() => {\n    if (!udtInterface) return\n    posthog.capture(\"interface_type\", { interface_type: udtInterface.type })\n    posthog.people.set({ last_used_interface_type: udtInterface.type })\n  }, [udtInterface])\n\n  const udtSamples = udt?.samples\n  const usedToyDataset = udt?.usedToyDataset\n  useEffect(() => {\n    if (!udtSamples) return\n    const numCompleted = (udtSamples || []).filter((s) => s.annotation).length\n    posthog.capture(\"samples_updated\", {\n      dataset_size: (udtSamples || []).length,\n      samples_completed: numCompleted,\n      percent_completed: numCompleted / (udtSamples || []).length,\n      toy_dataset_used: Boolean(usedToyDataset),\n    })\n    posthog.people.set({\n      recently_used_toy_dataset: Boolean(usedToyDataset),\n    })\n  }, [udtSamples, usedToyDataset])\n}\n","// @flow weak\n\nimport { useEffect, useRef, useCallback } from \"react\"\nimport UpdateAWSStorage from \"./update-aws-storage\"\nimport isEmpty from \"lodash/isEmpty\"\nimport useAuth from \"../../auth-handlers/use-auth\"\nimport getFilesDifferences from \"../../dataset-helper/get-files-differences.js\"\n\nconst workingInterfaces = [\n  \"video_segmentation\",\n  \"image_classification\",\n  \"image_segmentation\",\n  \"text_entity_recognition\",\n  \"text_classification\",\n  \"audio_transcription\",\n  \"composite\",\n  \"data_entry\",\n]\n\nexport default ({ file, setFile }) => {\n  const { isLoggedIn, authProvider, authConfig } = useAuth()\n\n  const lastObjectRef = useRef([])\n  const shouldUpdateAWSStorage = useCallback(() => {\n    if (!isLoggedIn || authProvider !== \"cognito\") return\n\n    var changes = getFilesDifferences(lastObjectRef.current, file)\n    if (\n      isEmpty(file) ||\n      (!changes.content.samples && !changes.fileName) ||\n      !workingInterfaces.includes(file.content.interface.type) ||\n      file.fileName === \"unnamed\"\n    )\n      return false\n    return true\n  }, [file, isLoggedIn, authProvider])\n\n  useEffect(() => {\n    if (!isLoggedIn || authProvider !== \"cognito\") return\n    if (!isEmpty(authConfig)) {\n      console.log(\"should update\", shouldUpdateAWSStorage())\n      if (shouldUpdateAWSStorage()) UpdateAWSStorage(file)\n      lastObjectRef.current = file\n    }\n  }, [shouldUpdateAWSStorage, authConfig, file, isLoggedIn, authProvider])\n}\n","import { Storage } from \"aws-amplify\"\nimport isEmpty from \"lodash/isEmpty\"\nimport * as datasetHelper from \"../../dataset-helper\"\nimport { setIn } from \"seamless-immutable\"\n\nexport default (file) => {\n  async function fetchAFile(element) {\n    var proxyUrl = \"https://cors-anywhere.herokuapp.com/\"\n    var response\n    var url\n    if (datasetHelper.getSampleUrl(element) !== undefined)\n      url = proxyUrl + datasetHelper.getSampleUrl(element)\n    response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"X-Requested-With\": \"xmlhttprequest\",\n      },\n    }).catch((error) => {\n      console.log(\"Looks like there was a problem: \\n\", error)\n    })\n    const blob = await response.blob()\n    return blob\n  }\n\n  function fileNameExist(file) {\n    if (file !== \"undefined\" && file.fileName !== \"undefined\") return true\n\n    return false\n  }\n\n  function createOrReplaceProjectFile(file) {\n    Storage.put(`${file.fileName}/`, null, {\n      level: \"private\",\n    }).catch((err) => console.log(err))\n  }\n\n  function createOrReplaceAnnotations(file, json) {\n    console.log({ file, json })\n    Storage.put(`${file.fileName}/annotations/annotations.json`, json, {\n      level: \"private\",\n    }).catch((err) => console.log(err))\n  }\n\n  function createOrReplaceImages(file) {\n    // TODO you can't have async in a forEach loop\n    if (!isEmpty(file.content.samples)) {\n      file.content.samples.forEach(async (element) => {\n        try {\n          var blob\n          if (!isEmpty(datasetHelper.getSampleUrl(element))) {\n            blob = await fetchAFile(element)\n          } else if (!isEmpty(element.document)) {\n            blob = element.document\n          }\n\n          let imageOrVideoName\n          if (isEmpty(element.sampleName)) {\n            imageOrVideoName = datasetHelper.getSampleName(element)\n          } else {\n            imageOrVideoName = element.sampleName\n          }\n\n          var pathToFile = `${file.fileName}/data/${imageOrVideoName}`\n          Storage.put(pathToFile, blob, {\n            level: \"private\",\n          }).catch((err) => console.log(err))\n        } catch (err) {\n          console.log(err)\n        }\n      })\n    }\n  }\n\n  if (fileNameExist(file)) {\n    var dataset = file.content\n    // TODO datasetHelper.setSamplesName is returning an incorrect object, it\n    // should be returning an array of samples\n    console.log(\n      \"this should be an array of samples\",\n      datasetHelper.setSamplesName(dataset)\n    )\n    file = setIn(\n      file,\n      [\"content\"],\n      setIn(dataset, [\"samples\"], datasetHelper.setSamplesName(dataset))\n    )\n    var json = JSON.stringify(file)\n    createOrReplaceProjectFile(file)\n    createOrReplaceAnnotations(file, json)\n    createOrReplaceImages(file)\n  }\n}\n","// @flow\n\nimport { useState, useMemo, useEffect } from \"react\"\nimport useServer, {\n  joinSession,\n  convertToCollaborativeFile,\n} from \"./use-server\"\nimport useFilesystem from \"./use-filesystem\"\nimport useLocalStorage from \"./use-local-storage\"\nimport { useToasts } from \"../../components/Toasts\"\nimport fromUDTCSV from \"../from-udt-csv.js\"\nimport useEventCallback from \"use-event-callback\"\nimport useFileTelemetry from \"./use-file-telemetry\"\nimport useAWSCognito from \"./use-aws-cognito\"\n\nexport default () => {\n  const [file, setFile] = useState()\n  const { addToast } = useToasts()\n\n  const { saveFile } = useFilesystem(file, setFile)\n  const { recentItems, changeRecentItems } = useLocalStorage(file, setFile)\n  useServer(file, setFile)\n\n  // Auth/Cloud\n  useAWSCognito({ file, setFile })\n\n  // Telemetry\n  useFileTelemetry(file && file.content)\n\n  const openFile = useEventCallback((fsFile) => {\n    const { name: fileName, path: filePath } = fsFile\n\n    function handleLoadedFile(content) {\n      try {\n        let dataset\n        if (fileName.endsWith(\"csv\")) {\n          dataset = fromUDTCSV(content)\n        } else {\n          dataset = JSON.parse(content)\n        }\n        // TODO validate OHA and prompt to open anyway if invalid\n        setFile({\n          fileName,\n          filePath,\n          mode: filePath ? \"filesystem\" : \"local-storage\",\n          content: dataset,\n          id: filePath,\n        })\n      } catch (e) {\n        console.log(e.toString())\n        addToast(\"Couldn't read file, see console for details\", \"error\")\n        // addError(`Could not read file \"${fsFile.name}\"`)\n      }\n    }\n\n    if (fsFile.content) {\n      handleLoadedFile(fsFile.content)\n    } else {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        const content = e.target.result\n        handleLoadedFile(content)\n      }\n      reader.readAsText(fsFile)\n    }\n  })\n\n  const openUrl = useEventCallback(async (url) => {\n    const sessionId = decodeURIComponent(url.match(/[?&]s=([^&]+)/)[1])\n    const labelOnly = url.includes(\"mode=labelonly\")\n    if (!sessionId) return\n    const { state } = await joinSession(sessionId)\n    if (!state) return\n    window.history.replaceState(\n      {},\n      window.document.title,\n      `/app/?s=${encodeURIComponent(sessionId)}${\n        labelOnly ? \"&mode=labelonly\" : \"\"\n      }`\n    )\n    setFile({\n      url,\n      sessionId,\n      mode: \"server\",\n      id: sessionId,\n      content: state,\n    })\n  })\n\n  useEffect(() => {\n    if (!file) return\n    if (file.mode === \"server\") return\n    window.history.replaceState({}, window.document.title, `/`)\n  }, [file])\n\n  useEffect(() => {\n    if (window.location.search.match(/[?&]s=([a-zA-Z0-9]+)/)) {\n      openUrl(window.location.href)\n    }\n  }, [openUrl])\n\n  const makeSession = useEventCallback(async () => {\n    const newFile = await convertToCollaborativeFile(file)\n    setFile(newFile)\n    window.history.replaceState(\n      {},\n      window.document.title,\n      `/app/?s=${encodeURIComponent(newFile.sessionId)}`\n    )\n  })\n\n  return useMemo(\n    () => ({\n      file,\n      setFile,\n      openFile,\n      openUrl,\n      makeSession,\n      saveFile,\n      recentItems,\n      changeRecentItems,\n    }),\n    [\n      file,\n      setFile,\n      openFile,\n      saveFile,\n      makeSession,\n      recentItems,\n      changeRecentItems,\n      openUrl,\n    ]\n  )\n}\n","// @flow\nimport { useEffect } from \"react\"\nimport { useLocalStorage } from \"react-use\"\n\nexport default (file, changeFile) => {\n  let [recentItems, changeRecentItems] = useLocalStorage(\"recentItems\", [])\n\n  if (!recentItems) recentItems = []\n  useEffect(() => {\n    if (!file || file.fileName === \"unnamed\") return\n    if (recentItems.map((item) => item.id).includes(file.id)) {\n      changeRecentItems(\n        recentItems.map((ri) => (ri.id === file.id ? file : ri))\n      )\n    } else {\n      changeRecentItems([file].concat(recentItems).slice(0, 3))\n    }\n    // eslint-disable-next-line\n  }, [file, changeRecentItems])\n  return { recentItems, changeRecentItems }\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { detect } from \"detect-browser\"\nimport Button from \"@material-ui/core/Button\"\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Sentry from \"../../utils/sentry.js\"\n\nconst Container = styled(\"div\")({\n  width: \"100vw\",\n  minHeight: \"100vh\",\n  backgroundColor: colors.grey[900],\n  padding: 32,\n  \"& .title\": {\n    color: colors.grey[200],\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  \"& .subtitle\": {\n    color: colors.grey[300],\n    fontSize: 18,\n    marginTop: 8,\n  },\n  \"& .info\": {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    padding: 32,\n    \"& textarea\": {\n      width: \"calc(100% - 64px)\",\n      boxSizing: \"border-box\",\n      minHeight: 300,\n      fontSize: 12,\n    },\n  },\n})\nconst Buttons = styled(\"div\")({\n  padding: 8,\n})\nconst StyledButton = styled(Button)({\n  color: \"#fff\",\n  borderColor: \"rgba(255,255,255,0.5)\",\n  margin: 8,\n})\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      errorDetails: JSON.stringify(detect()) + \"\\n\\n\" + error.stack,\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo)\n      const eventId = Sentry.captureException(error)\n      this.setState({ eventId })\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <Container>\n          <div className=\"title\">An error has occurred</div>\n          <div className=\"subtitle\">All the details are below:</div>\n          <div className=\"info\">\n            <textarea>{this.state.errorDetails}</textarea>\n          </div>\n          <Buttons>\n            <StyledButton\n              variant=\"outlined\"\n              target=\"_blank\"\n              href=\"https://github.com/Universal/universal-data-tool/issues\"\n            >\n              <LaunchIcon style={{ color: \"#fff\", marginRight: 8 }} /> View\n              Issues on Github\n            </StyledButton>\n            {/* <StyledButton\n              variant=\"outlined\"\n              onClick={this.props.revertLastChange}\n            >\n              Revert Last File Change\n            </StyledButton> */}\n            <StyledButton\n              variant=\"outlined\"\n              onClick={() => window.location.reload()}\n            >\n              Reload (unsaved progress will be lost)\n            </StyledButton>\n          </Buttons>\n        </Container>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","// @flow weak\n\nimport { useEffect } from \"react\"\n\nfunction preventNavigation(e) {\n  var confirmationMessage =\n    \"It looks like you have been editing something. \" +\n    \"If you leave before saving, your changes will be lost.\"\n\n  ;(e || window.event).returnValue = confirmationMessage //Gecko + IE\n  return confirmationMessage //Gecko + Webkit, Safari, Chrome etc.\n}\n\nexport default (shouldPreventNavigation = true) => {\n  useEffect(() => {\n    if (!shouldPreventNavigation) return\n    if (window.location.origin.includes(\"localhost\")) return\n    window.addEventListener(\"beforeunload\", preventNavigation)\n    return () => {\n      window.removeEventListener(\"beforeunload\", preventNavigation)\n    }\n  }, [shouldPreventNavigation])\n}\n","// @flow\nimport React, { useState, useCallback } from \"react\"\nimport { HeaderContext } from \"../Header\"\nimport StartingPage from \"../StartingPage\"\nimport DatasetEditor from \"../DatasetEditor\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport useFileHandler from \"../../utils/file-handlers\"\nimport download from \"in-browser-download\"\nimport toUDTCSV from \"../../utils/to-udt-csv.js\"\nimport { setIn } from \"seamless-immutable\"\nimport AppErrorBoundary from \"../AppErrorBoundary\"\nimport useEventCallback from \"use-event-callback\"\nimport usePreventNavigation from \"../../utils/use-prevent-navigation\"\nimport { FileContext } from \"../FileContext\"\nimport usePosthog from \"../../utils/use-posthog\"\nconst randomId = () => Math.random().toString().split(\".\")[1]\n\nexport default () => {\n  const {\n    file,\n    setFile,\n    openFile,\n    openUrl,\n    makeSession,\n    recentItems,\n    changeRecentItems,\n  } = useFileHandler()\n  usePreventNavigation(Boolean(file))\n  const posthog = usePosthog()\n  const [errors] = useErrors()\n\n  const [selectedBrush, setSelectedBrush] = useState(\"complete\")\n  const onCreateTemplate = useEventCallback((template) => {\n    setFile({\n      fileName: \"unnamed\",\n      content: template.dataset,\n      id: randomId(),\n      mode: \"local-storage\",\n    })\n  })\n\n  const openRecentItem = useEventCallback((item) => setFile(item))\n  const onClickHome = useEventCallback(() => setFile(null))\n  const onDownload = useEventCallback((format) => {\n    if (!file) return\n    posthog.capture(\"download_file\", { file_type: format })\n    const outputName = (file.sessionId || file.fileName) + \".udt.\" + format\n    if (format === \"json\") {\n      download(JSON.stringify(file.content), outputName)\n    } else if (format === \"csv\") {\n      download(toUDTCSV(file.content), outputName)\n    }\n  })\n\n  const inSession = file && file.mode === \"server\"\n  const [sessionBoxOpen, changeSessionBoxOpen] = useState(false)\n\n  const onJoinSession = useCallback(\n    async (sessionName) => {\n      await openUrl(sessionName)\n    },\n    [openUrl]\n  )\n\n  const onLeaveSession = useEventCallback(() =>\n    setFile({\n      ...file,\n      mode: \"local-storage\",\n      fileName: file.fileName || `copy_of_${file.id}`,\n    })\n  )\n\n  const onChangeDataset = useEventCallback((newOHA) => {\n    setFile(setIn(file, [\"content\"], newOHA))\n  })\n\n  return (\n    <>\n      <FileContext.Provider value={{ file, setFile }}>\n        <HeaderContext.Provider\n          value={{\n            title: file\n              ? file.mode === \"local-storage\"\n                ? file.fileName\n                : file.url\n              : \"unnamed\",\n            recentItems,\n            changeRecentItems,\n            onClickTemplate: onCreateTemplate,\n            onClickHome,\n            onOpenFile: openFile,\n            onOpenRecentItem: openRecentItem,\n            inSession,\n            sessionBoxOpen,\n            changeSessionBoxOpen,\n            onJoinSession,\n            onLeaveSession,\n            onCreateSession: makeSession,\n            fileOpen: Boolean(file),\n            onDownload,\n            onChangeSelectedBrush: setSelectedBrush,\n            selectedBrush,\n            isWelcomePage: !file,\n          }}\n        >\n          {!file ? (\n            <StartingPage\n              onFileDrop={openFile}\n              onOpenTemplate={onCreateTemplate}\n              recentItems={recentItems}\n              onOpenRecentItem={openRecentItem}\n              onClickOpenSession={() => changeSessionBoxOpen(true)}\n            />\n          ) : (\n            <AppErrorBoundary>\n              <DatasetEditor\n                file={file}\n                key={file.id}\n                {...file}\n                selectedBrush={selectedBrush}\n                inSession={inSession}\n                dataset={file.content}\n                onChangeDataset={onChangeDataset}\n                onChangeFile={setFile}\n                authConfig\n                recentItems={recentItems}\n              />\n            </AppErrorBoundary>\n          )}\n        </HeaderContext.Provider>\n      </FileContext.Provider>\n      <ErrorToasts errors={errors} />\n    </>\n  )\n}\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport { HeaderContext } from \"../Header\"\nimport StartingPage from \"../StartingPage\"\nimport DatasetEditor from \"../DatasetEditor\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport useElectron from \"../../utils/use-electron.js\"\nimport templates from \"../StartingPage/templates\"\nimport useEventCallback from \"use-event-callback\"\nimport { setIn } from \"seamless-immutable\"\nimport toUDTCSV from \"../../utils/to-udt-csv.js\"\nimport useFileHandler from \"../../utils/file-handlers\"\n\nconst randomId = () => Math.random().toString().split(\".\")[1]\n\nexport default () => {\n  const {\n    file,\n    setFile,\n    openFile,\n    openUrl,\n    makeSession,\n    saveFile,\n    recentItems,\n  } = useFileHandler()\n\n  const [selectedBrush, setSelectedBrush] = useState(\"complete\")\n  const [errors] = useErrors()\n\n  const { remote, ipcRenderer } = useElectron()\n\n  const onCreateTemplate = useEventCallback((template) => {\n    setFile({\n      fileName: \"unnamed\",\n      content: template.dataset,\n      id: randomId(),\n      mode: \"filesystem\",\n    })\n  })\n\n  const openRecentItem = useEventCallback((item) => setFile(item))\n  const onClickHome = useEventCallback(() => setFile(null))\n\n  useEffect(() => {\n    const onOpenWelcomePage = () => setFile(null)\n    const onNewFile = (arg0, { templateName } = {}) => {\n      onCreateTemplate(\n        templates.find((t) => t.name === templateName) || templates[0]\n      )\n    }\n    const saveFileAs = () => saveFile({ saveAs: true })\n    const exportToCSV = async () => {\n      if (!file) return\n      let { cancelled, filePath } = await remote.dialog.showSaveDialog({\n        filters: [{ name: \".udt.csv\", extensions: [\"udt.csv\"] }],\n      })\n      if (cancelled) return\n      filePath =\n        !filePath || filePath.endsWith(\".csv\")\n          ? filePath\n          : `${filePath}.udt.csv`\n\n      await remote\n        .require(\"fs\")\n        .promises.writeFile(filePath, toUDTCSV(file.content))\n    }\n    const onOpenFileFromToolbar = (e, file) => openFile(file)\n\n    ipcRenderer.on(\"open-welcome-page\", onOpenWelcomePage)\n    ipcRenderer.on(\"new-file\", onNewFile)\n    ipcRenderer.on(\"open-file\", onOpenFileFromToolbar)\n    ipcRenderer.on(\"save-file\", saveFile)\n    ipcRenderer.on(\"save-file-as\", saveFileAs)\n    ipcRenderer.on(\"export-to-csv\", exportToCSV)\n    return () => {\n      ipcRenderer.removeListener(\"open-welcome-page\", onOpenWelcomePage)\n      ipcRenderer.removeListener(\"new-file\", onNewFile)\n      ipcRenderer.removeListener(\"open-file\", onOpenFileFromToolbar)\n      ipcRenderer.removeListener(\"save-file\", saveFile)\n      ipcRenderer.removeListener(\"save-file-as\", saveFileAs)\n      ipcRenderer.removeListener(\"export-to-csv\", exportToCSV)\n    }\n  }, [file, setFile, ipcRenderer, openFile, onCreateTemplate, remote, saveFile])\n\n  const inSession = file && file.mode === \"server\"\n  const [sessionBoxOpen, changeSessionBoxOpen] = useState(false)\n\n  const onJoinSession = useEventCallback(async (sessionName) => {\n    await openUrl(sessionName)\n  })\n\n  const onLeaveSession = useEventCallback(() =>\n    setFile({\n      ...file,\n      mode: \"local-storage\",\n      fileName: file.fileName || `copy_of_${file.id}`,\n    })\n  )\n\n  const collaborateError = (file?.content?.samples || []).some((sample) =>\n    [sample.imageUrl, sample.videoUrl, sample.pdfUrl]\n      .filter(Boolean)\n      .map((a) => a.includes(\"file://\"))\n      .some(Boolean)\n  )\n    ? \"Some URLs (links) in this file are connected to files on your computer. Use the Samples > Transform > Transform Files to Web URLs to upload these files, then collaboration will be available.\"\n    : null\n\n  return (\n    <>\n      <HeaderContext.Provider\n        value={{\n          recentItems,\n          onClickTemplate: onCreateTemplate,\n          onClickHome,\n          title: file\n            ? file.mode !== \"server\"\n              ? file.fileName\n              : file.url\n            : \"unnamed\",\n          fileOpen: Boolean(file),\n          onOpenRecentItem: openRecentItem,\n          isDesktop: true,\n          onOpenFile: openFile,\n          selectedBrush,\n          onChangeSelectedBrush: setSelectedBrush,\n\n          // collaboration session\n          inSession,\n          sessionBoxOpen,\n          changeSessionBoxOpen,\n          collaborateError,\n          onJoinSession,\n          onLeaveSession,\n          onCreateSession: makeSession,\n          isWelcomePage: !file,\n        }}\n      >\n        {!file ? (\n          <StartingPage\n            showDownloadLink={false}\n            onFileDrop={openFile}\n            onOpenTemplate={onCreateTemplate}\n            recentItems={recentItems}\n            onOpenRecentItem={openRecentItem}\n          />\n        ) : (\n          <DatasetEditor\n            key={file.id}\n            {...file}\n            inSession={inSession}\n            selectedBrush={selectedBrush}\n            dataset={file.content}\n            onChangeFileName={(newName) => {\n              setFile(setIn(file, [\"fileName\"], newName))\n            }}\n            onChangeDataset={(newOHA) => {\n              setFile(setIn(file, [\"content\"], newOHA))\n            }}\n          />\n        )}\n      </HeaderContext.Provider>\n      <ErrorToasts errors={errors} />\n    </>\n  )\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}))\n\nexport default function Loading() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.root}>\n        <CircularProgress />\n      </div>\n    </div>\n  )\n}\n","import React, { Suspense } from \"react\"\nimport Theme from \"./components/Theme\"\nimport LocalStorageApp from \"./components/LocalStorageApp\"\nimport DesktopApp from \"./components/DesktopApp\"\nimport { ToastProvider } from \"./components/Toasts\"\nimport useElectron from \"./utils/use-electron.js\"\nimport { AppConfigProvider } from \"./components/AppConfig\"\nimport { AuthProvider } from \"./utils/auth-handlers/use-auth.js\"\nimport { LabelHelpProvider } from \"./components/LabelHelpView\"\nimport { HotkeyStorageProvider } from \"./components/HotkeyStorage\"\nimport \"./App.css\"\n\nimport Loading from \"./components/Loading\"\n\n// Importing Internalization file\nimport \"./i18n\"\n\nexport const App = () => {\n  const electron = useElectron()\n  return (\n    <Suspense fallback={Loading}>\n      <Theme>\n        <AppConfigProvider>\n          <AuthProvider>\n            <LabelHelpProvider>\n              <ToastProvider>\n                <HotkeyStorageProvider>\n                  {Boolean(electron) ? <DesktopApp /> : <LocalStorageApp />}\n                </HotkeyStorageProvider>\n              </ToastProvider>\n            </LabelHelpProvider>\n          </AuthProvider>\n        </AppConfigProvider>\n      </Theme>\n    </Suspense>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}
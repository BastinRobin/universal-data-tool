{"version":3,"sources":["components/Theme/index.js","components/HotkeyStorage/default-hotkeys.js","components/HotkeyStorage/index.js","components/AppConfig/index.js","utils/auth-handlers/cognito-handler.js","utils/auth-handlers/use-auth.js","components/LoginDrawer/SignIn.js","components/LoginDrawer/CompleteSignUp.js","components/LoginDrawer/index.js","utils/use-electron.js","utils/use-posthog.js","components/CollaborateButton/index.js","components/HeaderPopupBox/index.js","components/DownloadButton/index.js","components/Header/GithubIcon.js","utils/get-brush-color-palette.js","components/BrushButton/index.js","components/HeaderToolbar/SlackIcon.js","components/HeaderToolbar/index.js","components/StartingPage/templates.js","components/HeaderDrawer/index.js","components/Header/index.js","components/SimpleDialog/index.js","components/CreateFromTemplateDialog/index.js","components/AddAuthFromTemplateDialog/authTemplates.js","components/ErrorToasts/index.js","utils/use-errors.js","components/AddAuthFromTemplateDialog/index.js","components/StartingPage/get-embed-youtube-url.js","components/StartingPage/index.js","components/DatasetEditor/EditableTitleText.js","components/SampleGrid/index.js","components/PasteUrlsDialog/index.js","utils/get-sample-name-from-url.js","utils/RecognizeFileExtension.js","utils/dataset-helper.js","components/ImportFromS3Dialog/get-annotation-from-aws.js","components/ImportFromS3Dialog/get-images-from-aws.js","utils/from-udt-csv.js","components/ImportFromS3Dialog/check-interface-and-sample-type.js","components/ImportFromS3Dialog/set-annotation-from-aws.js","components/ImportFromS3Dialog/index.js","components/ImportFromS3Dialog/init-config-import.js","components/ImportFromS3Dialog/set-type-of-file-to-load-and-disable.js","components/ImportFromS3Dialog/set-button-add-sample-name.js","components/TextAreaWithUpload/index.js","components/ImportTextSnippetsDialog/index.js","components/ImportPage/S3Icon.js","components/ImportFromGoogleDriveDialog/index.js","components/ImportUDTFileDialog/index.js","components/ImportToyDatasetDialog/index.js","components/ImportFromYoutubeUrls/download-youtube-video.js","components/ProgressBar/index.js","components/ImportFromYoutubeUrls/progress.js","components/ImportFromYoutubeUrls/get-youtube-video-information.js","components/ImportFromYoutubeUrls/split-urls-from-text-area.js","components/ImportFromYoutubeUrls/index.js","components/ImportPage/prompt-and-get-samples-from-local-directory.js","components/ImportPage/index.js","utils/use-is-desktop.js","components/TransformVideoKeyframesDialog/index.js","components/DownloadURLsDialog/index.js","components/TransformVideoFramesToImagesDialog/index.js","components/TransformLocalFilesToWebURLs/functions/upload-file-to-transfersh.js","components/TransformLocalFilesToWebURLs/functions/split-file-name-from-file-url.js","components/TransformLocalFilesToWebURLs/functions/get-file-url-key.js","components/TransformLocalFilesToWebURLs/functions/transform-file-urls-to-web-urls.js","components/TransformLocalFilesToWebURLs/index.js","components/TransformImageSamplesIntoSegmentsDialog/index.js","components/TransformSegmentsIntoImageSamplesDialog/index.js","components/TransformPage/index.js","components/SamplesView/index.js","components/ConfigureImageSegmentation/index.js","components/ConfigureImagePixelSegmentation/index.js","components/ConfigureImageClassification/index.js","components/ConfigureTextClassification/index.js","components/ConfigureAudioTranscription/index.jsx","components/ConfigureNLP/index.js","components/ConfigureDataEntry/index.js","components/ConfigureComposite/index.js","components/Configure3D/index.js","components/ConfigureVideoSegmentation/index.js","i18n/index.js","utils/get-task-description.js","components/SampleContainer/LinkButton.js","components/SampleContainer/index.js","components/TextClassification/index.js","components/TextEntityRecognition/index.js","utils/ria-format.js","components/ImageSegmentation/index.js","components/WorkspaceContainer/index.js","components/ImageClassification/index.js","components/VideoSegmentation/index.js","components/AudioTranscription/index.js","components/DataEntry/index.js","components/BadOHA/index.js","components/EmptySampleContainer/index.js","components/InterfaceIcon/index.js","components/Composite/index.js","components/UniversalDataViewer/index.js","utils/sentry.js","components/LabelErrorBoundary/index.js","components/ConfigureInterface/index.js","components/PaperContainer/index.js","components/KeyboardShortcutManagerDialog/index.js","components/AdvancedOptionsView/index.js","components/InterfacePage/index.js","components/EditSampleDialog/index.js","components/Toasts/index.js","components/Stats/index.js","components/LabelHelpView/api-key-entry.js","components/FileContext/use-active-dataset.js","components/FileContext/index.js","components/LabelHelpView/label-help-dialog-content.js","components/LabelHelpView/LabelHelpProvider.js","utils/use-is-label-only-mode.js","utils/compute-dataset-variable.js","components/LabelHelpView/use-label-help.js","components/LabelHelpView/index.js","components/ActiveLearningView/index.js","components/LabelView/index.js","components/RawJSONEditor/index.js","components/DatasetEditor/index.js","utils/use-time-to-complete-sample.js","utils/file-handlers/use-server/get-human-readable-log.js","utils/file-handlers/use-server/apply-seamless-patch.js","utils/file-handlers/use-server/server-hash.js","utils/file-handlers/use-server/index.js","utils/file-handlers/use-server/handler.js","utils/to-udt-csv.js","utils/file-handlers/use-filesystem.js","utils/file-handlers/use-file-telemetry.js","utils/file-handlers/use-aws-cognito/index.js","utils/file-handlers/use-aws-cognito/update-aws-storage.js","utils/file-handlers/index.js","utils/file-handlers/use-local-storage.js","components/AppErrorBoundary/index.js","utils/use-prevent-navigation.js","components/LocalStorageApp/index.js","components/DesktopApp/index.js","components/Loading/index.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","primary","colors","secondary","typography","fontFamily","button","textTransform","children","ThemeProvider","defaultHotkeys","id","description","binding","HotkeyContext","createContext","hotkeys","changeHotkey","newBinding","useHotkeyStorage","useContext","HotkeyStorageProvider","useAppConfig","fromConfig","setInConfig","useMemo","map","item","keyMap","contextValue","clearHotkeys","Provider","value","configKeyNames","AppConfigContext","appConfig","setAppConfig","newConfig","key","AppConfigProvider","useLocalStorage","includes","Error","undefined","JSON","stringify","CognitoHandler","authProvider","setUser","userHandle","user","isLoggedIn","Boolean","hasChanged","login","tryUser","a","Amplify","configure","authConfig","Auth","currentAuthenticatedUser","logout","signOut","getState","this","identityPoolId","region","userPoolId","userPoolWebClientId","mandatorySignIn","authenticationFlowType","Storage","AWSS3","bucket","AuthContext","AuthProvider","useState","handler","setHandler","forceUpdate","useUpdate","useEffect","interval","setInterval","clearInterval","useAuth","ErrorText","styled","padding","color","useStyles","makeStyles","form","width","marginTop","spacing","submit","margin","onUserChange","onRequireCompleteSignUp","onClose","classes","error","setError","t","useTranslation","username","password","notAuthorizedException","state","setState","handleTextFieldChange","event","persist","prevState","target","name","signIn","then","challengeName","catch","err","code","console","log","toString","Typography","component","variant","className","noValidate","TextField","required","fullWidth","label","autoComplete","helperText","autoFocus","onChange","type","FormControlLabel","control","Checkbox","onClick","isEmpty","SignInAWS","requiredAttributes","requiredAttributesDict","requiredAttributesErrorDict","forEach","requiredAttribute","newPassword","newPasswordNotValid","newPasswordConfirmation","newPasswordNotEqualsConfirmation","capitalizeFirstLetter","string","charAt","toUpperCase","slice","_handleAttributesTextFieldChange","_handleTextFieldChange","newPasswordError","checkIfPasswordEqualsConfirmationPassword","_handleCantBeNull","e","allGood","onBlur","completeNewPassword","drawer","root","height","paper","display","flexDirection","alignItems","close","cursor","main","avatar","backgroundColor","loginDrawerOpen","signingIn","completeSignUp","Drawer","anchor","open","role","Grid","container","xs","sm","md","Paper","elevation","square","Avatar","SignIn","challengeParam","toggleCompleteSignUp","CompleteSignUp","window","require","posthogMock","opt_in_capturing","opt_out_capturing","init","reset","capture","capture_forms","capture_pageview","register","register_once","unregister","identify","alias","set_config","get_config","get_property","get_distinct_id","has_opted_out_capturing","has_opted_in_capturing","disable_all_events","people","set","set_once","posthogInitialized","isDesktop","useElectron","Cypress","posthog","api_host","autocapture","domain","location","origin","is_desktop","Container","position","marginLeft","borderColor","popupBoxBeforeAndAfter","bottom","left","border","content","pointerEvents","PopupBox","zIndex","top","boxSizing","borderRadius","minHeight","boxShadow","borderBottomColor","borderWidth","fontSize","opacity","transition","transform","CreateNewButton","Button","justifyContent","marginRight","ExitButton","fileOpen","inSession","onJoinSession","onCreateSession","onLeaveSession","sessionBoxOpen","changeSessionBoxOpen","loadingSession","changeLoadingSession","sessionUrl","changeSessionUrl","userName","changeUserName","usePosthog","setTimeout","title","onMouseEnter","onMouseLeave","IconButton","style","InputProps","endAdornment","InputAdornment","disabled","CircularProgress","size","StyledButton","paddingTop","fontWeight","onDownload","changeOpen","HeaderPopupBox","GitHub","props","SvgIcon","d","fade","cmap","amt","newCmap","i","fadedGrey","isFaded","availableColors","colorMap","complete","incomplete","faded","review","ellipsis1","ellipsis2","ellipsis3","brush","seed","length","BrushCircle","OtherColorContainers","flexWrap","StyledIconButton","iconcolor","selected","marginBottom","paddingBottom","selectedBrush","onChangeSelectedBrush","handleClick","useEventCallback","memoize","getBrushColorPalette","SlackIcon","viewBox","headerButton","grow","flexGrow","list","tab","fullHeightTab","mixins","toolbar","breakpoints","down","minWidth","tabWrapper","getIcon","memo","s","tabs","currentTab","onChangeTab","additionalButtons","onOpenDrawer","isSmall","changeLoginDrawerOpen","collaborateError","isWelcomePage","c","AppBar","Toolbar","packageJSON","version","CollaborateButton","BrushButton","DownloadButton","Tabs","newTab","toLowerCase","Tab","wrapper","icon","href","GithubIcon","Box","paddingLeft","data-icon","data-size","data-show-count","aria-label","templates","Icon","CropFree","dataset","interface","samples","ImageSearch","labels","regionTypesAllowed","imageUrl","Image","OndemandVideoIcon","videoUrl","Edit","surveyjs","questions","pdfUrl","TextFormat","overlapAllowed","displayName","document","ContactSupport","Audiotrack","audioUrl","Category","fields","fieldName","ThreeDRotation","templateMap","reduce","acc","recentItems","changeRecentItems","onClickHome","onCloseDrawer","drawerOpen","onOpenFile","onOpenRecentItem","onClickTemplate","onDrop","useCallback","acceptedFiles","useDropzone","getRootProps","getInputProps","List","ListItem","ListItemIcon","ListItemText","ListSubheader","textAlign","ri","index","fileName","filter","oneRecentFile","template","HeaderContext","logoutUser","emptyArray","changeDrawerOpen","headerContext","useMediaQuery","HeaderDrawer","LoginDrawer","StyledDialogTitle","DialogTitle","grey","borderBottom","StyledDialogContent","DialogContent","StyledDialogActions","DialogActions","borderTop","markdownContent","redOn","red","noActionBar","actions","fullScreen","changeFullScreen","Dialog","maxWidth","lineHeight","source","action","blue","text","bigButton","bigIcon","onSelect","SimpleDialog","provider","data-name","fill","x","y","right","errorBox","errors","Collapse","in","life","Fade","message","changeErrors","concat","Math","random","split","cognitoIcon","howToSetupText","textDecoration","forms","cognito","placeholder","isRequired","onFinish","onAuthConfigured","setAuthProvider","dialogTitle","setDialogTitle","useErrors","addError","validateAuthProvider","answers","config","authTemplates","onQuestionChange","questionId","newValue","defaultAnswers","ErrorToasts","url","match","downloadIcon","languageSelectionWrapper","ContentContainer","overflowY","Content","Title","languageSelectionFormStyle","base","background","menuList","singleValue","Subtitle","ActionList","Action","ActionTitle","ActionText","Actionless","BottomSpacer","languageOptions","onFileDrop","onOpenTemplate","showDownloadLink","onClickOpenSession","i18n","newVersionAvailable","changeNewVersionAvailable","fetch","r","json","newPackage","packageInfo","checkNewVersion","latestCommunityUpdate","setLatestCommunityUpdate","readme","startCU","search","endCU","communityUpdates","latestYtLink","ytLink","embedYTLink","getEmbedYoutubeUrl","getLatestREADME","createFromTemplateDialogOpen","changeCreateFromTemplateDialogOpen","addAuthFromDialogOpen","changeAddAuthFromDialogOpen","CreateFromTemplateDialog","clicked_template","AddAuthFromTemplateDialog","Header","styles","defaultValue","options","language","changeLanguage","find","src","frameborder","allow","allowfullscreen","textField","editing","changeEditing","listener","addEventListener","removeEventListener","timeout","SAVE_WAIT","clearTimeout","inputProps","onKeyDown","preventDefault","stopPropagation","blur","onKeyPress","EmptyState","SampleDiv","fontVariantNumeric","userSelect","Sample","completed","onMouseDown","onMouseUp","classNames","p","n","count","samplesPerPage","changeSamplesPerPage","sampleOffset","changeSampleOffset","useReducer","min","max","selectRange","changeSelectRange","startSelectRange","moveSelectRange","endSelectRange","checkAndNullifySelectRange","buttons","onClickMemo","range","TablePagination","rowsPerPageOptions","rowsPerPage","page","floor","labelRowsPerPage","onChangePage","newPage","onChangeRowsPerPage","SelectContainer","TextArea","autoDetectOptions","onAddSamples","changeContent","urlType","changeURLType","l","trim","extension","replace","opt","v","sample","sampleName","decodeURI","UrlOfAFile","typeOfFile","fileExtension","getSampleName","getSampleNameFromURL","getSampleUrl","createOneNewSample","annotation","RecognizeFileExtension","getSampleWithThisSampleName","nameToSearch","setSamplesName","oldsample","renameSampleFromUrl","setIn","sampleToChange","boolName","sampletocompare1","eraseAnnotation","samplesWithoutAnnotation","Newsample","push","fileHasChanged","objectOfRef","objectToCheck","resultSet","mode","any","CheckIfAnnotationExist","result","folderToFetch","element","GetSampleFromAnnotation","newSamples","datasetHelper","sampleFound","get","expires","level","data","setUrl","configImport","loadProjectIsSelected","typeOfFileToLoad","fetchTextInFile","texte","urlSource","method","response","typeAuthorize","file","contentOldFile","actualSamples","annotationToKeep","Tabsamples","Tabsamples2","selectedStyle","tableStyle","expandedDataColumns","selector","sortable","expandedAnnotationsColumns","columns","customStyles","headCells","cells","ExpandedRow","rowData","rowAnnotations","paddingRight","dense","striped","noHeader","noDataComponent","pagination","paginationPerPage","paginationRowsPerPageOptions","onChangeFile","textButtonAdd","changetextButtonAdd","s3Content","changeS3Content","dataForTable","changeDataForTable","setFolderToFetch","checkInterfaceAndsamples","typeOfFileToDisable","Video","Audio","PDF","Texte","contentDialogBoxIsSetting","projectStarted","initConfigImport","setConfigImport","lastObjectRef","useRef","hasProjectStarted","current","configToSet","changes","setTypeOfFileToLoadAndDisable","handleAddSample","GetImageFromAFolderAWS","GetAnnotationFromAFolderAWS","setAnnotationFromAws","changeLoadProjectIsSelected","textToSet","folderName","numberOfSamples","isSelected","folder","setButtonNameAddSample","_dataForTable","obj","endsWith","rowDataContent","startsWith","lastModified","toDateString","rowAnnotationsContent","FormControl","FormLabel","RadioGroup","Radio","checked","expandableRows","expandableRowsComponent","selectableRows","selectableRowsHighlight","selectableRowsNoSelectAll","selectableRowsComponent","noTableHead","onSelectedRowsChange","whatsChanging","selectedRows","row","selectableRowSelected","UploadHover","emptyFunc","onChangeContent","reader","FileReader","onload","fileContent","readAsText","lastClickTime","changeLastClickTime","Date","now","isDragActive","ImportTextSnippetsDialog","TextAreaWithUpload","ExplainText","GoogleDriveScreenshot","credentials","web","client_id","process","app_id","developer_key","googleScriptLoaded","setGoogleScriptLoaded","pickerApiLoaded","setPickerApiLoaded","oauthToken","setOAuthToken","userSelectedItemsFromDrive","setUserSelectedItemsFromDrive","isPickerOpen","setIsPickerOpen","scriptElement","createElement","async","body","appendChild","remove","googlePickerActionCallback","google","picker","PICKED","docs","googleDriveDocument","mimeType","createPicker","view","DocsView","ViewId","Docs","FOLDERS","setIncludeFolders","setSelectFolderEnabled","PickerBuilder","enableFeature","Feature","NAV_HIDDEN","MINE_ONLY","MULTISELECT_ENABLED","setAppId","addView","DOCS","setDeveloperKey","setCallback","build","setVisible","handleAuthenticationResponse","authenticationResponse","access_token","onAuthApiLoad","gapi","auth","authorize","scope","immediate","onPickerApiLoad","onLoadPicker","load","callback","badSpellingMap","Object","entries","correct","badSpellings","badSpelling","convertTaskDatumMistakes","normalizedKey","correction","csv","JAC","fromCSV","derivePath","taskOutput","output","InfoText","whiteSpace","ImportUDTFileDialog","changeError","setContent","parse","e1","udt","fromUDTCSV","e2","jsonError","stack","csvError","datasets","getSamples","datasetName","datasetUrl","taskData","ImportToyDatasetDialog","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","data-import-toy-dataset-name","idify","youtubeUrl","videoTitle","remote","videoQuality","downloadPath","onProgress","onComplete","onChangeOverallProgress","ytdl","path","videoName","fullVideoPath","join","writableVideoFile","createWriteStream","youtubeVideoWithOptions","format","quality","pipe","on","chunkLength","downloaded","total","percent","progress","cancel","destroy","Text","Bar","ProgressContainer","TotalPercentageWrapper","Progress","unitProgress","overallProgress","completedVideoTitles","ProgressBar","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpansionPanelDetails","getYoutubeVideoInformation","splittedURLsArray","progressCallback","checkedVideos","Promise","resolve","reject","getBasicInfo","info","errorText","video","splitURLsFromTextArea","stringURLs","urlsHasHTTPS","splittedURLsByNewLines","SelectVideoQualityHeader","SelectVideoQuality","LoadingText","CompletedVideoTitle","qualityOptions","ImportFromYoutubeUrls","urlsFromTextArea","setUrlsFromTextArea","setVideoQuality","setUnitProgress","setOverallProgress","isDownloading","setIsDownloading","setCompletedVideoTitles","cancelRef","setDefaultState","closeDialog","dialog","showOpenDialog","buttonLabel","properties","canceled","filePaths","errorMessage","youtubeVideoInfos","completedVideoPaths","completedVideoTitlesArray","youtubeVideosCount","youtubeVideoInfo","downloadYoutubeVideo","currentProgress","progressText","filePath","videoPath","Array","isArray","Fragment","convertToSamplesObject","fp","ext","electron","dirPaths","dirPath","fs","promises","readdir","fn","promptAndGetSamplesLocalDirectory","ButtonBase","MuiButton","DesktopOnlyText","SelectDialogContext","desktopOnly","authConfiguredOnly","signedInOnly","onlySupportType","disabledText","Consumer","onChangeDialog","import_button","classnames","onChangeDataset","selectedDialog","changeDialog","promptAndGetSamplesFromLocalDirectory","localSamples","samplesToAdd","onAddSamplesAsToyDataset","AssignmentReturnedIcon","CreateNewFolderIcon","TextFieldsIcon","PetsIcon","FaYoutube","S3Icon","FaGoogleDrive","DescriptionIcon","PasteUrlsDialog","ImportFromS3Dialog","ImportFromGoogleDriveDialog","Code","StyledExpansionPanel","StyledExpansionPanelSummary","flatMap","videoFrameAt","keyframes","keys","kf","parseInt","regions","immutable","ErrorBox","downloadFile","urlToDownload","directoryPath","md5","existsSync","directory","filename","changeProgress","cancelled","td","urlKey","pathToFile","getFfmpegTimeCode","ms","cs","ss","mn","padStart","pathToFfmpeg","shell","exec","newsamples","transformsPerformed","imageOutputPath","ffmpegCommand","without","uploadFileToTransferSh","fileURL","remoteURL","axios","exactFilePath","fsFileBuffer","readFileSync","put","status","uploadedFileURL","splitFileNameFromFileURL","splittedFullFileName","getFileURLKey","transformFileURLsToWebURLs","setProgress","progressUnit","samplesIndex","samplesItem","fileURLKey","warn","webURLOfUploadedFile","TransformLocalFilesToWebURLs","splitOptions","setErrors","splitType","setSplitType","rows","cols","imageUrls","from","Set","pieces","Icon1","Icon2","useIsDesktop","transform_button","CollectionsIcon","ComputerIcon","LanguageIcon","GetAppIcon","ImageIcon","CheckBoxOutlineBlankIcon","GridOnIcon","TransformVideoKeyframesDialog","DownloadURLsDialog","TransformVideoFramesToImagesDialog","TransformImageSamplesIntoSegmentsDialog","TransformSegmentsIntoImageSamplesDialog","SampleCounter","ExpandedRowContainer","borderTopLeftRadius","borderTopRightRadius","ExpandedRowTitle","ExpandedRowCode","input","SamplesView","openSampleInputEditor","openSampleLabelEditor","deleteSample","localStorage","lastSampleTab","changeTabState","changeTab","knownKeys","has","cell","add","raised","ImportPage","onImportPageShouldExit","newOHA","TransformPage","shouldViewChange","SampleGrid","sampleIndex","choices","cellType","iface","asMutable","multipleRegions","multipleRegionLabels","deep","noActions","maxClusterPresets","low","medium","high","maxClusterPresetsRev","curr","visibleIf","step","autosegMode","autoSegmentationEngine","autosegPreset","maxClusters","autosegMaxClusters","allowMultiple","multiple","hasOther","column","ButtonsContainer","NoQuestions","Question","borderLeft","PreviewHeader","anchorEl","menuOpen","changeMenuOpen","q","multiline","ref","MenuItem","Fields","f","fieldIndex","isNested","newFieldInterface","field","fieldOrder","ExplanationTextHeader","ExplanationText","GithubLink","Configure3D","rel","use","LanguageDetector","initReactI18next","fallbackLng","debug","interpolation","escapeValue","resources","fr","translation","frTranslation","en","enTranslation","cn","cnTranslation","getTaskDescription","linkButtonContainer","linkButton","footer","footerContent","footerBorder","footerCount","allSamplesButton","sampleIcon","menuButton","maxHeight","sectionHeader","SampleContainer","hideDescription","defaultHideDescription","getItem","onExit","lastSampleExitText","requireCompleteToPressNext","minContentHeight","currentSampleIndex","totalSamples","onChangeSample","changeHideDescriptionState","changeHideDescription","hide","setItem","sampleDrawerOpen","changeSampleDrawerOpen","LinkButton","escapeHtml","TextClassification","changeCurrentSampleIndex","availableLabels","initialLabels","containerProps","NLPAnnotator","multipleLabels","onSaveTaskOutputItem","simpleSequenceToEntitySequence","simpleSeq","entSeq","charsPassed","seq","start","end","TextEntityRecognition","initialSequence","doc","sort","b","nextEntity","entitySequenceToSimpleSeq","entities","getRandomColor","h","rid","convertToRIARegionFmt","regionType","cls","classification","tags","centerX","centerY","w","points","convertFromRIARegionFmt","riaRegion","convertToRIAImageFmt","taskDatum","frameTime","convertToRIAKeyframes","newKeyframes","regionTypeToTool","polygon","point","emptyObj","emptyArr","globalSampleIndex","selectedIndex","changeSelectedIndex","showTags","changeShowTags","selectedTool","changeSelectedTool","isClassification","isPixel","saveCurrentIndexAnnotation","img","images","labelProps","regionClsList","regionTagList","nextAction","onNextImage","onPrevImage","enabledTools","rt","allowedArea","fullImageSegmentationMode","selectedImage","taskDescription","autoSegmentationOptions","HeaderLeftSideContainer","onNext","onPrev","titleContent","onClickHeaderItem","headerItems","Workspace","headerLeftSide","iconSidebarItems","rightSidebarItems","brightColors","letters","hashInt","indexOf","ImageContainer","objectFit","flexShrink","CheckButton","changeSampleIndex","enlargedLabel","changeEnlargedLabel","currentOutput","changeCurrentOutput","onDone","onNextNoSave","newOutput","onClickLabel","hotkeyMap","backspace","enter","rightarrow","leftarrow","labelKeyMap","nextAvailableLetter","WorkspaceContainer","customId","videoTime","videoSrc","audio","phraseBank","initialTranscriptionText","DataEntry","completeText","explain","BadOHA","Composite","selectedField","changeSelectedField","indexZero","InterfaceIcon","UniversalDataViewer","hideHeader","onClickSetup","EmptySampleContainer","ImageSegmentation","ImageClassification","VideoSegmentation","AudioTranscription","Sentry","dsn","whitelistUrls","ErrorBoundary","hasError","errorInfo","withScope","setExtras","eventId","captureException","errorString","React","Component","noop","BigButton","NoOptions","TypeButton","Heading","PreviewContainer","mouseEvents","PreviewContent","SelectType","currentlySelected","ConfigureInterface","onChangeProp","onClickEditJSON","previewChangedTime","changePreviewChangedTime","previewLoading","changePreviewLoading","previewVersion","incPreviewVersion","previewDataset","setPreviewDataset","hidden","lg","LabelErrorBoundary","ConfigureImageSegmentation","ConfigureImagePixelSegmentation","ConfigureImageClassification","ConfigureComposite","ConfigureDataEntry","ConfigureAudioTranscription","ConfigureNLP","ConfigureTextClassification","ConfigureVideoSegmentation","PaperContainer","table","hotkeyIconStyle","onChangeHotkey","hotkeyList","onClearHotkeys","selectedHotKey","setSelectedHotKey","modifier","setCurrentKeyCombo","keyListener","align","hotkey","AdvancedOptionsView","onClearLabelData","hotkeyDialogOpen","setHotkeyDialogOpen","confirm","prompt","reload","KeyboardShortcutManagerDialog","isNotNested","sampleInput","changeText","newText","editorProps","$blockScrolling","Infinity","msgBox","ToastContext","useToasts","addToast","ToastProvider","fullLife","messageType","msg","toasts","changeToasts","Stat","Label","Value","stats","verifying","setVerifying","textFieldValue","setTextFieldValue","headers","apikey","useActiveDataset","useFileContext","setFile","setDataset","newDataset","FileContext","Link","usdFormatter","Intl","NumberFormat","currency","preciseUSDFormatter","maximumFractionDigits","minimumFractionDigits","steps","useLabelHelp","labelHelpEnabled","labelHelpError","loadMyCredits","variables","totalCost","formulaFunc","myCredits","labelHelp","labelHelpInfo","setLabelHelpInfo","collabUrl","encodeURIComponent","loaded","loadJob","activeStep","Stepper","Step","StepLabel","varName","sample_count","price","api_key","custom_id","toFixed","LabelHelpContext","LabelHelpProvider","loadingPricingConfig","setLoadingPricingConfig","pricingConfig","setPricingConfig","loadingMyTeam","setLoadingMyTeam","setMyCredits","loadPricingConfig","apiKey","credit","completedSamples","totalInteractions","totalSamplesConsidered","isLabelOnlyMode","useIsLabelOnlyMode","remoteFile","labelHelpDisabled","hasLabelHelpAPIKey","formula","variableDescriptions","variableName","computeDatasetVariable","funcArgs","formulaFuncPos","Function","ak","labelHelpAPIKey","LabelHelpView","hasAPIKey","ActiveLearningView","OverviewContainer","singleSampleDataset","onChangeSingleSampleDataset","onChangeSampleTimeToComplete","sampleTimeToComplete","setTab","showLabelHelpPricing","setShowLabelHelpPricing","labelOnlyMode","REACT_APP_SHOW_LABELHELP_PRICING","percentComplete","relativeIndex","startTime","interface_type","Stats","duration","RawJSONEditor","onSave","jsonText","setJSONText","saveIcon","editIcon","initialMode","valueDisplay","setValueDisplay","changeMode","setSingleSampleDataset","sampleInputEditor","changeSampleInputEditor","ipcRenderer","headerTabs","newTimeToComplete","newSamplesInWindow","samplesInWindow","timeToCompleteSample","useTimeToCompleteSample","changeSampleTimeToComplete","onOpenSettingsPage","onOpenSamplesPage","onOpenLabelPage","removeListener","average_time_to_complete_sample","shortcutHandlers","switch_to_label","switch_to_setup","switch_to_samples","allowChanges","handlers","EditableTitleText","newName","InterfacePage","some","annotationStartTime","splice","LabelView","EditSampleDialog","newInput","changeLog","humanReadableChangeLog","op","sampleMatch","seamless","getIn","updateIn","addToArray","withoutIn","parentPath","parentObj","object","patches","patch","isNaN","o","hash","charCodeAt","hashString","collab","serverUrl","getJSON","payload","opts","postJSON","patchJSON","sessionId","bent","initialContent","short_id","res","udt_json","getLatestState","updateToLatestState","hashOfLatestState","latestVersion","humanReadableLog","getHumanReadableLog","newState","applySeamlessPatch","rfc6902","CUSTOM_COLLABORATION_SERVER","convertToCollaborativeFile","createSession","joinSession","AddSamplesKeys","k","sampleKeys","flatten","validate","toCSV","webReturn","saveFile","workingInterfaces","shouldUpdateAWSStorage","fetchAFile","blob","fileNameExist","createOrReplaceProjectFile","createOrReplaceAnnotations","imageOrVideoName","createOrReplaceImages","UpdateAWSStorage","changeFile","saveAs","saveFileAsync","showSaveDialog","filters","extensions","newFilePath","writeFile","toUDTCSV","useFilesystem","checkForLatestPatch","applyLatestPatches","sendPatchIfChanged","useServer","useAWSCognito","udtInterface","last_used_interface_type","udtSamples","usedToyDataset","numCompleted","dataset_size","samples_completed","percent_completed","toy_dataset_used","recently_used_toy_dataset","useFileTelemetry","openFile","fsFile","handleLoadedFile","openUrl","decodeURIComponent","labelOnly","history","replaceState","makeSession","newFile","Buttons","errorDetails","detect","preventNavigation","confirmationMessage","returnValue","useFileHandler","shouldPreventNavigation","usePreventNavigation","setSelectedBrush","onCreateTemplate","openRecentItem","file_type","outputName","download","sessionName","AppErrorBoundary","DatasetEditor","StartingPage","onOpenWelcomePage","onNewFile","arg0","templateName","saveFileAs","exportToCSV","onOpenFileFromToolbar","onChangeFileName","Loading","App","fallback","Theme","DesktopApp","LocalStorageApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c5d4cf5e.chunk.js","sourcesContent":["import React from \"react\"\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport \"./theme.css\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: colors.blue,\n    secondary: colors.blue,\n  },\n  typography: {\n    fontFamily: '\"Inter\", \"Roboto\", sans-serif',\n    button: {\n      textTransform: \"none\",\n    },\n  },\n})\n\nexport default ({ children }: any) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n","export const defaultHotkeys = [\n  {\n    id: \"switch_to_label\",\n    description: \"Go to Labels Tab\",\n    binding: \"shift+3\",\n  },\n  {\n    id: \"switch_to_setup\",\n    description: \"Go to Setup Tab\",\n    binding: \"shift+1\",\n  },\n  {\n    id: \"switch_to_samples\",\n    description: \"Go to Samples Tab\",\n    binding: \"shift+2\",\n  },\n  {\n    id: \"select_tool\",\n    description: \"Switch to the Select Tool\",\n    binding: \"escape\",\n  },\n  {\n    id: \"zoom_tool\",\n    description: \"Select the Zoom Tool\",\n    binding: \"z\",\n  },\n  {\n    id: \"create_point\",\n    description: \"Create a point\",\n  },\n  {\n    id: \"create_bounding_box\",\n    description: \"Create a bounding box\",\n    binding: \"b\",\n  },\n  {\n    id: \"pan_tool\",\n    description: \"Select the Pan Tool\",\n    binding: \"p\",\n  },\n  {\n    id: \"create_polygon\",\n    description: \"Create a Polygon\",\n  },\n  {\n    id: \"create_pixel\",\n    description: \"Create a Pixel Mask\",\n  },\n  {\n    id: \"save_and_previous_sample\",\n    description: \"Save and go to previous sample\",\n    binding: \"a\",\n  },\n  {\n    id: \"save_and_next_sample\",\n    description: \"Save and go to next sample\",\n    binding: \"d\",\n  },\n  {\n    id: \"save_and_exit_sample\",\n    description: \"Save and exit current sample\",\n  },\n  {\n    id: \"exit_sample\",\n    description: \"Exit sample without saving\",\n  },\n]\nexport default defaultHotkeys\n","import React, { createContext, useContext, useMemo } from \"react\"\nimport { defaultHotkeys } from \"./default-hotkeys\"\nimport { useAppConfig } from \"../AppConfig\"\n\nexport const HotkeyContext = createContext({\n  hotkeys: defaultHotkeys,\n  changeHotkey: (id, newBinding) => null,\n})\n\nexport const useHotkeyStorage = () => useContext(HotkeyContext)\n\nexport const HotkeyStorageProvider = ({ children }) => {\n  const { fromConfig, setInConfig } = useAppConfig()\n\n  const hotkeys = useMemo(\n    () =>\n      defaultHotkeys.map((item) => {\n        if (fromConfig(`hotkeys.${item.id}`)) {\n          return { ...item, binding: fromConfig(`hotkeys.${item.id}`) }\n        } else {\n          return item\n        }\n      }),\n    [fromConfig]\n  )\n\n  const keyMap = useMemo(() => {\n    const keyMap = {}\n    for (const { id, binding } of hotkeys) {\n      if (!binding) continue\n      keyMap[id] = binding\n    }\n    return keyMap\n  }, [hotkeys])\n\n  const contextValue = useMemo(\n    () => ({\n      hotkeys,\n      keyMap,\n      clearHotkeys: () => {\n        for (const { id } of hotkeys) {\n          setInConfig(`hotkeys.${id}`, null)\n        }\n      },\n      changeHotkey: (id, newBinding) =>\n        setInConfig(`hotkeys.${id}`, newBinding),\n    }),\n    [setInConfig, hotkeys, keyMap]\n  )\n\n  return (\n    <HotkeyContext.Provider value={contextValue}>\n      {children}\n    </HotkeyContext.Provider>\n  )\n}\n\nexport { defaultHotkeys }\n","import React, { useMemo, useContext, createContext } from \"react\"\nimport { useLocalStorage } from \"react-use\"\nimport { defaultHotkeys } from \"../HotkeyStorage\"\n\nconst configKeyNames = [\n  \"auth.provider\",\n  \"auth.cognito.identity_pool_id\",\n  \"auth.cognito.region\",\n  \"auth.cognito.user_pool_id\",\n  \"auth.cognito.user_pool_web_client_id\",\n  \"auth.cognito.mandatory_sign_in\",\n  \"auth.cognito.authentication_flow_type\",\n  \"auth.cognito.storage.aws_s3.bucket\",\n  \"auth.cognito.storage.aws_s3.region\",\n  \"labelhelp.disabled\",\n  \"labelhelp.apikey\",\n  ...defaultHotkeys.map(({ id }) => `hotkeys.${id}`),\n]\n\n// NOTE: appConfig should not allow any nested values\nexport const AppConfigContext = createContext({\n  appConfig: {},\n  setAppConfig: (newConfig) => undefined,\n  fromConfig: (key) => undefined,\n  setInConfig: (key, value) => undefined,\n})\n\nexport const useAppConfig = () => useContext(AppConfigContext)\n\nexport const AppConfigProvider = ({ children }) => {\n  const [appConfig, setAppConfig] = useLocalStorage(\"app_config\", {})\n  const contextValue = useMemo(() => {\n    return {\n      appConfig,\n      setAppConfig,\n      fromConfig: (key) => {\n        if (!configKeyNames.includes(key)) {\n          throw new Error(`Unknown config key name \"${key}\"`)\n        }\n        return appConfig[key]\n      },\n      setInConfig: (key, value) => {\n        if (\n          typeof value !== \"string\" &&\n          typeof value !== \"number\" &&\n          typeof value !== \"boolean\" &&\n          value !== undefined &&\n          value !== null\n        ) {\n          throw new Error(\n            `Config can only have boolean/strings/numbers/null/undefined, something tried to set appConfig[\"${key}\"] = ${JSON.stringify(\n              value\n            )}`\n          )\n        }\n        if (!configKeyNames.includes(key)) {\n          throw new Error(`Unknown config key name \"${key}\"`)\n        }\n        setAppConfig({ ...appConfig, [key]: value })\n      },\n    }\n  }, [appConfig, setAppConfig])\n  return (\n    <AppConfigContext.Provider value={contextValue}>\n      {children}\n    </AppConfigContext.Provider>\n  )\n}\n","import Amplify, { Auth } from \"aws-amplify\"\n\nclass CognitoHandler {\n  authProvider = \"cognito\"\n  constructor(appConfig) {\n    this.authConfig = {\n      Auth: {\n        identityPoolId: appConfig[\"auth.cognito.identity_pool_id\"],\n        region: appConfig[\"auth.cognito.region\"],\n        userPoolId: appConfig[\"auth.cognito.user_pool_id\"],\n        userPoolWebClientId: appConfig[\"auth.cognito.user_pool_web_client_id\"],\n        mandatorySignIn: true,\n        authenticationFlowType: \"USER_PASSWORD_AUTH\",\n      },\n      Storage: {\n        AWSS3: {\n          bucket: appConfig[\"auth.cognito.storage.aws_s3.bucket\"],\n          region: appConfig[\"auth.cognito.storage.aws_s3.region\"],\n        },\n      },\n    }\n    this.isLoggedIn = false\n  }\n  setUser = (userHandle) => {\n    this.user = userHandle\n    this.isLoggedIn = Boolean(userHandle)\n    this.hasChanged = true\n  }\n  login = async (tryUser) => {\n    Amplify.configure(this.authConfig)\n\n    const userHandle = await Auth.currentAuthenticatedUser()\n\n    this.user = userHandle\n    this.hasChanged = true\n  }\n  logout = () => {\n    this.user = null\n    this.isLoggedIn = false\n    this.hasChanged = true\n    Auth.signOut()\n  }\n  getState = () => ({\n    user: this.user,\n    isLoggedIn: this.isLoggedIn,\n    authConfig: this.authConfig,\n  })\n}\n\nexport default CognitoHandler\n","import React, {\n  useState,\n  useEffect,\n  createContext,\n  useContext,\n  useMemo,\n} from \"react\"\nimport { useAppConfig } from \"../../components/AppConfig\"\nimport CognitoHandler from \"./cognito-handler.js\"\nimport { useUpdate } from \"react-use\"\n\nexport const authProviders = [\"cognito\"]\n\nconst AuthContext = createContext({ authProvider: \"none\" })\n\nexport const AuthProvider = ({ children }) => {\n  const { appConfig, fromConfig } = useAppConfig()\n  const [handler, setHandler] = useState({ authProvider: \"none\" })\n  const authProvider = fromConfig(\"auth.provider\")\n  const forceUpdate = useUpdate()\n\n  useEffect(() => {\n    if (handler && handler.authProvider === authProvider) return\n    if (authProvider === \"cognito\") {\n      setHandler(new CognitoHandler(appConfig))\n    }\n  }, [authProvider, appConfig, handler])\n\n  useEffect(() => {\n    if (!handler) return\n    const interval = setInterval(() => {\n      if (handler.hasChanged) {\n        forceUpdate()\n        handler.hasChanged = false\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval)\n    }\n  }, [handler, forceUpdate])\n\n  const contextValue = useMemo(\n    () => ({\n      authProvider: handler.authProvider,\n      ...(handler.getState ? handler.getState() : {}),\n      // TODO remove setUser\n      setUser: handler.setUser,\n      logout: handler.logout,\n      login: handler.login,\n    }),\n    [handler]\n  )\n\n  return (\n    <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n  )\n}\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport default useAuth\n","import React, { Fragment, useState } from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"@material-ui/core/Button\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { styled } from \"@material-ui/core/styles\"\n\nimport { useTranslation } from \"react-i18next\"\n\nimport Amplify, { Auth } from \"aws-amplify\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useAuth } from \"../../utils/auth-handlers/use-auth.js\"\n\nconst ErrorText = styled(\"div\")({\n  padding: 16,\n  color: colors.red[500],\n})\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default ({ onUserChange, onRequireCompleteSignUp, onClose }) => {\n  const { authConfig, setUser } = useAuth()\n  const classes = useStyles()\n\n  const [error, setError] = useState()\n  const { t } = useTranslation()\n\n  const [state, setState] = useState({\n    username: \"\",\n    password: \"\",\n    notAuthorizedException: false,\n  })\n\n  const handleSignInClick = () => {\n    if (isEmpty(state.username) || isEmpty(state.password)) {\n      setState((prevState) => ({\n        ...prevState,\n        notAuthorizedException: true,\n      }))\n    } else {\n      SignInAWS(state.username, state.password)\n    }\n  }\n\n  const handleTextFieldChange = (event) => {\n    event.persist()\n    setState((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n      notAuthorizedException: false,\n    }))\n  }\n\n  async function SignInAWS(username, password) {\n    setError(null)\n    try {\n      await Amplify.configure(authConfig)\n      await Auth.signIn(username, password)\n        .then((user) => {\n          setUser(user)\n          if (user.challengeName === \"NEW_PASSWORD_REQUIRED\") {\n            onRequireCompleteSignUp(user)\n          } else {\n            onUserChange(user)\n            onClose()\n          }\n          return user\n        })\n        .catch((err) => {\n          if (err.code === \"UserNotConfirmedException\") {\n            console.log(\"Must confirm the account\")\n            // The error happens if the user didn't finish the confirmation step when signing up\n            // In this case you need to resend the code and confirm the user\n            // About how to resend the code and confirm the user, please check the signUp part\n          } else if (err.code === \"PasswordResetRequiredException\") {\n            console.log(\"Password has been reset\")\n            // The error happens when the password is reset in the Cognito console\n            // In this case you need to call forgotPassword to reset the password\n            // Please check the Forgot Password part.\n          } else if (err.code === \"NotAuthorizedException\") {\n            console.log(\"Bad password message\")\n            setState({ ...state, notAuthorizedException: true, password: \"\" })\n            // The error happens when the incorrect password is provided\n          } else if (err.code === \"UserNotFoundException\") {\n            console.log(\"User not found message\")\n            // The error happens when the supplied username/username does not exist in the Cognito user pool\n          } else {\n            console.log(\"Error that we do not handle for\")\n            console.log(err.code)\n          }\n          setError(err.toString())\n          return err\n        })\n    } catch (e) {\n      setError(e.toString())\n    }\n  }\n\n  return (\n    <Fragment>\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(\"sign-in\")}\n      </Typography>\n      {error && <ErrorText>{error}</ErrorText>}\n      <form className={classes.form} noValidate>\n        <TextField\n          error={state.notAuthorizedException}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          id=\"username\"\n          label=\"Username\"\n          name=\"username\"\n          autoComplete=\"username\"\n          helperText={\n            state.notAuthorizedException\n              ? \"The username or password is incorrect.\"\n              : \"\"\n          }\n          autoFocus\n          onChange={handleTextFieldChange}\n        />\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={state.password}\n          onChange={handleTextFieldChange}\n        />\n        <FormControlLabel\n          control={<Checkbox value=\"remember\" color=\"primary\" />}\n          label=\"Remember me\"\n        />\n        <Button\n          onClick={handleSignInClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          {t(\"sign-in\")}\n        </Button>\n      </form>\n    </Fragment>\n  )\n}\n","import React, { Fragment, useState } from \"react\"\nimport { Typography, TextField, Button } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { Auth } from \"aws-amplify\"\nimport { useAuth } from \"../../utils/auth-handlers/use-auth.js\"\nimport { useTranslation } from \"react-i18next\"\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    width: \"100%\",\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\nexport default ({ requiredAttributes, onUserChange, onClose }) => {\n  const { user } = useAuth()\n  const requiredAttributesDict = {}\n  const requiredAttributesErrorDict = {}\n  requiredAttributes.forEach((requiredAttribute) => {\n    requiredAttributesDict[requiredAttribute] = \"\"\n    requiredAttributesErrorDict[requiredAttribute] = false\n  })\n\n  const [state, setState] = useState({\n    newPassword: \"\",\n    newPasswordNotValid: false,\n    newPasswordConfirmation: \"\",\n    newPasswordNotEqualsConfirmation: false,\n    requiredAttributesDict: requiredAttributesDict,\n    requiredAttributesErrorDict: requiredAttributesErrorDict,\n  })\n\n  const classes = useStyles()\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const handleCompleteSignUpClick = () => {\n    if (\n      checkIfPasswordEqualsConfirmationPassword() &&\n      _handleCantBeNull(\"checkAll\")\n    ) {\n      completeNewPassword()\n    } else {\n      console.log(\"Something missing\")\n    }\n\n    /// completeNewPassword();\n  }\n\n  const _handleAttributesTextFieldChange = (event) => {\n    setState({\n      ...state,\n      requiredAttributesDict: {\n        ...state.requiredAttributesDict,\n        [event.target.name]: event.target.value,\n      },\n    })\n  }\n\n  const _handleTextFieldChange = (event) => {\n    setState({\n      ...state,\n      newPasswordError: null,\n      newPasswordNotValid: false,\n      newPasswordNotEqualsConfirmation: false,\n      [event.target.name]: event.target.value,\n    })\n  }\n\n  const checkIfPasswordEqualsConfirmationPassword = () => {\n    if (state.newPassword === state.newPasswordConfirmation) {\n      setState({ ...state, newPasswordNotEqualsConfirmation: false })\n      return true\n    } else {\n      setState({ ...state, newPasswordNotEqualsConfirmation: true })\n      return false\n    }\n  }\n\n  const _handleCantBeNull = (e) => {\n    let allGood = true\n    if (e === \"checkAll\") {\n      requiredAttributes.forEach((requiredAttribute) => {\n        if (state.requiredAttributesDict[requiredAttribute] === \"\") {\n          setState({\n            ...state,\n            requiredAttributesErrorDict: {\n              ...state.requiredAttributesErrorDict,\n              [requiredAttribute]: true,\n            },\n          })\n          allGood = false\n        }\n      })\n    } else {\n      if (e.target.value === \"\") {\n        setState({\n          ...state,\n          requiredAttributesErrorDict: {\n            ...state.requiredAttributesErrorDict,\n            [e.target.name]: true,\n          },\n        })\n      } else {\n        setState({\n          ...state,\n          requiredAttributesErrorDict: {\n            ...state.requiredAttributesErrorDict,\n            [e.target.name]: false,\n          },\n        })\n      }\n    }\n    return allGood\n  }\n\n  function completeNewPassword() {\n    Auth.completeNewPassword(\n      user, // the Cognito User Object\n      state.newPassword, // the new password\n      state.requiredAttributesDict\n    )\n      .then((user) => {\n        onUserChange(user)\n        onClose()\n      })\n      .catch((err) => {\n        setState({ ...state, newPasswordError: err.toString() })\n      })\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <Fragment>\n      <Typography component=\"h1\" variant=\"h5\">\n        {t(\"complete-your-sign-up\")}\n      </Typography>\n      <form className={classes.form} noValidate>\n        <TextField\n          error={state.newPasswordNotValid}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"newPassword\"\n          label=\"New password\"\n          type=\"password\"\n          id=\"password\"\n          value={state.newPassword}\n          onChange={_handleTextFieldChange}\n          helperText={state.newPasswordError || \"\"}\n        />\n        <TextField\n          error={state.newPasswordNotEqualsConfirmation}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"newPasswordConfirmation\"\n          label=\"Confirm new password\"\n          type=\"password\"\n          id=\"confirm-password\"\n          onChange={_handleTextFieldChange}\n          value={state.newPasswordConfirmation}\n          onBlur={checkIfPasswordEqualsConfirmationPassword}\n          helperText={\n            state.newPasswordNotEqualsConfirmation\n              ? \"New password and confirmation password must be the same\"\n              : \"\"\n          }\n        />\n        {requiredAttributes.map((requiredAttribute) => {\n          return (\n            <TextField\n              error={state.requiredAttributesErrorDict[requiredAttribute]}\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name={requiredAttribute.toString()}\n              key={requiredAttribute.toString()}\n              label={capitalizeFirstLetter(requiredAttribute.toString())}\n              type=\"text\"\n              id={requiredAttribute.toString()}\n              onChange={_handleAttributesTextFieldChange}\n              value={state.requiredAttributesDict.requiredAttribute}\n              onBlur={_handleCantBeNull}\n              helperText={\n                state.requiredAttributesErrorDict[requiredAttribute]\n                  ? `${capitalizeFirstLetter(\n                      requiredAttribute.toString()\n                    )} can't be null`\n                  : \"\"\n              }\n            />\n          )\n        })}\n        <Button\n          onClick={handleCompleteSignUpClick}\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          {t(\"complete-sign-up\")}\n        </Button>\n      </form>\n    </Fragment>\n  )\n}\n","import React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Drawer from \"@material-ui/core/Drawer\"\n\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Grid from \"@material-ui/core/Grid\"\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport SignIn from \"./SignIn\"\nimport CompleteSignUp from \"./CompleteSignUp\"\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: 500,\n  },\n  root: {\n    height: \"100vh\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  close: {\n    cursor: \"pointer\",\n    color: theme.palette.secondary.main,\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}))\n\nexport default ({ loginDrawerOpen, onClose }) => {\n  const classes = useStyles()\n  const [user, setUser] = useState({})\n\n  const [state, setState] = useState({\n    signingIn: true,\n    completeSignUp: false,\n    user: \"\",\n  })\n\n  const toggleCompleteSignUp = (user) => {\n    setState((prevState) => ({\n      ...prevState,\n      signingIn: false,\n      completeSignUp: true,\n      user: user,\n      requiredAttributes: user.challengeParam.requiredAttributes,\n    }))\n  }\n\n  const drawer = () => (\n    <div className={classes.drawer} role=\"presentation\">\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid\n          item\n          xs={12}\n          sm={12}\n          md={12}\n          component={Paper}\n          elevation={6}\n          square\n        >\n          <div className={classes.paper}>\n            <Grid container>\n              <Grid item xs>\n                <ArrowForwardIcon onClick={onClose} className={classes.close} />\n              </Grid>\n            </Grid>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            {state.signingIn && (\n              <SignIn\n                onRequireCompleteSignUp={(user) => toggleCompleteSignUp(user)}\n                onUserChange={(user) => {\n                  setUser(user)\n                }}\n                onClose={onClose}\n              />\n            )}\n            {state.completeSignUp && (\n              <CompleteSignUp\n                requiredAttributes={state.requiredAttributes}\n                user={user}\n                onClose={onClose}\n                onUserChange={(user) => {\n                  setUser(user)\n                }}\n              />\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  )\n\n  return (\n    <>\n      <Drawer anchor=\"right\" open={loginDrawerOpen} onClose={onClose}>\n        {drawer()}\n      </Drawer>\n    </>\n  )\n}\n","// @flow\n\nexport default () => {\n  if (window.require) {\n    return window.require(\"electron\")\n  }\n  return null\n}\n","import posthog from \"posthog-js\"\nimport useElectron from \"./use-electron\"\n\nconst posthogMock = {\n  opt_in_capturing: () => null,\n  opt_out_capturing: () => null,\n  init: () => null,\n  reset: () => null,\n  capture: () => null,\n  capture_forms: () => null,\n  capture_pageview: () => null,\n  register: () => null,\n  register_once: () => null,\n  unregister: () => null,\n  identify: () => \"mock\",\n  alias: () => null,\n  set_config: () => null,\n  get_config: () => null,\n  get_property: () => null,\n  get_distinct_id: () => null,\n  has_opted_out_capturing: () => true,\n  has_opted_in_capturing: () => false,\n  disable_all_events: () => null,\n  people: {\n    set: () => null,\n    set_once: () => null,\n  },\n}\n\nwindow.posthogInitialized = false\nexport default () => {\n  const isDesktop = Boolean(useElectron())\n  if (window.Cypress) {\n    window.posthogInitialized = true\n    window.posthog = posthogMock\n  }\n  if (!window.posthogInitialized) {\n    posthog.init(\"dSrx1PbFd02XsxlLd7qNbeTxKZwwao2sclVmapyYlT4\", {\n      api_host: \"https://posthog.universaldatatool.com\",\n      autocapture: false,\n    })\n    window.posthog = posthog\n    const domain = isDesktop ? \"desktop\" : window.location.origin\n    posthog.capture(\"domain\", { domain })\n    posthog.capture(\"is_desktop\", { isDesktop: isDesktop })\n    posthog.people.set({ is_desktop: isDesktop, domain })\n    window.posthogInitialized = true\n  }\n  return window.posthog\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { useLocalStorage } from \"react-use\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport PeopleIcon from \"@material-ui/icons/People\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport InputAdornment from \"@material-ui/core/InputAdornment\"\nimport AddBoxTwoTone from \"@material-ui/icons/AddBoxTwoTone\"\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\", marginLeft: 8 })\nconst WIDTH = 300\nconst borderColor = colors.grey[500]\nconst popupBoxBeforeAndAfter = {\n  bottom: \"100%\",\n  left: \"25%\",\n  border: \"solid transparent\",\n  content: '\" \"',\n  height: 0,\n  width: 0,\n  position: \"absolute\",\n  pointerEvents: \"none\",\n}\nconst PopupBox = styled(\"div\")({\n  position: \"absolute\",\n  zIndex: 10,\n  top: 45,\n  padding: 16,\n  boxSizing: \"border-box\",\n  borderRadius: 4,\n  left: -WIDTH / 4 + 22,\n  backgroundColor: \"#fff\",\n  border: `1px solid ${borderColor}`,\n  width: WIDTH,\n  minHeight: 200,\n  boxShadow: \"0px 3px 12px rgba(0,0,0,0.3)\",\n  \"&:before\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(0,0,0, 0)\",\n    borderBottomColor: borderColor,\n    borderWidth: 12,\n    marginLeft: -12,\n  },\n  \"&:after\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(255,255,255, 0)\",\n    borderBottomColor: \"#fff\",\n    borderWidth: 10,\n    marginLeft: -10,\n  },\n  \"& h1\": {\n    fontSize: 18,\n    marginTop: 0,\n    color: colors.blue[800],\n  },\n  \"& h2\": {\n    fontSize: 14,\n    color: colors.grey[800],\n  },\n  opacity: 1,\n  transition: \"opacity 200ms linear, transform 200ms ease\",\n  \"&.hidden\": {\n    opacity: 0,\n    transform: \"translate(0, 10px)\",\n    pointerEvents: \"none\",\n  },\n})\nconst ErrorText = styled(\"div\")({\n  color: colors.red[500],\n  padding: 8,\n  fontSize: 14,\n})\n\nconst CreateNewButton = styled(Button)({\n  marginTop: 16,\n  justifyContent: \"flex-start\",\n  color: colors.blue[500],\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n  },\n})\nconst ExitButton = styled(Button)({\n  marginTop: 16,\n  justifyContent: \"flex-start\",\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n    color: colors.red[500],\n  },\n})\n\nexport default ({\n  fileOpen = false,\n  inSession = false,\n  error,\n  onJoinSession,\n  onCreateSession,\n  onLeaveSession,\n  sessionBoxOpen,\n  changeSessionBoxOpen,\n}) => {\n  const [loadingSession, changeLoadingSession] = useState(false)\n  const [sessionUrl, changeSessionUrl] = useState(\"\")\n  const [userName, changeUserName] = useLocalStorage(\"userName\", \"anonymous\")\n  const posthog = usePosthog()\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (loadingSession) {\n      setTimeout(() => {\n        changeLoadingSession(false)\n      }, 10000)\n    }\n  }, [loadingSession])\n\n  return (\n    <Container\n      title=\"collaborate-icon\"\n      onMouseEnter={() => changeSessionBoxOpen(true)}\n      onMouseLeave={() => changeSessionBoxOpen(false)}\n    >\n      <IconButton style={{ color: inSession ? colors.blue[500] : undefined }}>\n        <PeopleIcon />\n      </IconButton>\n      <PopupBox className={sessionBoxOpen ? \"\" : \"hidden\"}>\n        <h1>{t(\"collobrate\")}</h1>\n        {!inSession ? (\n          <>\n            <h2>{t(\"join-a-session\")}</h2>\n            <TextField\n              variant=\"outlined\"\n              label=\"URL to Session\"\n              value={sessionUrl}\n              onChange={(e) => changeSessionUrl(e.target.value)}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      color=\"primary\"\n                      onClick={() => {\n                        posthog.capture(\"join_collaborative_session\")\n                        onJoinSession(sessionUrl)\n                      }}\n                      disabled={!sessionUrl}\n                    >\n                      <ArrowForwardIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n            {error && <ErrorText>{error}</ErrorText>}\n            <CreateNewButton\n              fullWidth\n              disabled={!fileOpen || loadingSession || error}\n              onClick={() => {\n                posthog.capture(\"create_collaborative_session\")\n                onCreateSession()\n                changeLoadingSession(true)\n              }}\n            >\n              {loadingSession ? (\n                <CircularProgress className=\"icon\" size={24} />\n              ) : (\n                <AddBoxTwoTone className=\"icon\" />\n              )}\n              Create New Session\n            </CreateNewButton>\n          </>\n        ) : (\n          <>\n            <TextField\n              style={{ marginTop: 12 }}\n              variant=\"outlined\"\n              label=\"User Name\"\n              value={userName}\n              onChange={(e) => changeUserName(e.target.value)}\n            />\n            <ExitButton fullWidth onClick={onLeaveSession}>\n              <ExitToAppIcon className=\"icon\" />\n              {t(\"leave-session\")}\n            </ExitButton>\n          </>\n        )}\n      </PopupBox>\n    </Container>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst WIDTH = 300\nconst borderColor = colors.grey[500]\nconst popupBoxBeforeAndAfter = {\n  bottom: \"100%\",\n  left: \"25%\",\n  border: \"solid transparent\",\n  content: '\" \"',\n  height: 0,\n  width: 0,\n  position: \"absolute\",\n  pointerEvents: \"none\",\n}\nconst PopupBox = styled(\"div\")({\n  position: \"absolute\",\n  zIndex: 10,\n  top: 45,\n  padding: 16,\n  boxSizing: \"border-box\",\n  borderRadius: 4,\n  left: -WIDTH / 4 + 22,\n  backgroundColor: \"#fff\",\n  border: `1px solid ${borderColor}`,\n  width: WIDTH,\n  minHeight: 200,\n  boxShadow: \"0px 3px 12px rgba(0,0,0,0.3)\",\n  \"&:before\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(0,0,0, 0)\",\n    borderBottomColor: borderColor,\n    borderWidth: 12,\n    marginLeft: -12,\n  },\n  \"&:after\": {\n    ...popupBoxBeforeAndAfter,\n    borderColor: \"rgba(255,255,255, 0)\",\n    borderBottomColor: \"#fff\",\n    borderWidth: 10,\n    marginLeft: -10,\n  },\n  \"& h1\": {\n    fontSize: 18,\n    marginTop: 0,\n    color: colors.blue[800],\n  },\n  \"& h2\": {\n    fontSize: 14,\n    color: colors.grey[800],\n  },\n  opacity: 1,\n  transition: \"opacity 200ms linear, transform 200ms ease\",\n  \"&.hidden\": {\n    opacity: 0,\n    transform: \"translate(0, 10px)\",\n    pointerEvents: \"none\",\n  },\n})\n\nexport default ({ open, children }) => {\n  return <PopupBox className={open ? \"\" : \"hidden\"}>{children}</PopupBox>\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport HeaderPopupBox from \"../HeaderPopupBox\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\" })\n\nconst StyledButton = styled(Button)({\n  justifyContent: \"flex-start\",\n  \"& .fakeicon\": {\n    display: \"inline\",\n    marginRight: 8,\n    padding: 4,\n    paddingTop: 5,\n    fontSize: 11,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    backgroundColor: colors.grey[700],\n    borderRadius: 4,\n    width: 36,\n    \"&.blue\": {\n      backgroundColor: colors.blue[700],\n    },\n    \"&.green\": {\n      backgroundColor: colors.green[700],\n    },\n  },\n})\n\nexport default ({ onDownload }) => {\n  const [open, changeOpen] = useState(false)\n  const { t } = useTranslation()\n\n  return (\n    <Container\n      onMouseEnter={() => changeOpen(true)}\n      onMouseLeave={() => changeOpen(false)}\n    >\n      <IconButton>\n        <DownloadIcon />\n      </IconButton>\n      <HeaderPopupBox open={open}>\n        <h1>{t(\"download\")}</h1>\n        <StyledButton fullWidth onClick={() => onDownload(\"csv\")}>\n          <div className=\"fakeicon green\">CSV</div>\n          {t(\"download-csv\")}\n        </StyledButton>\n        <StyledButton fullWidth onClick={() => onDownload(\"json\")}>\n          <div className=\"fakeicon blue\">JSON</div>\n          {t(\"download-json\")}\n        </StyledButton>\n      </HeaderPopupBox>\n    </Container>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nfunction GitHub(props: Object) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M12.007 0C6.12 0 1.1 4.27.157 10.08c-.944 5.813 2.468 11.45 8.054 13.312.19.064.397.033.555-.084.16-.117.25-.304.244-.5v-2.042c-3.33.735-4.037-1.56-4.037-1.56-.22-.726-.694-1.35-1.334-1.756-1.096-.75.074-.735.074-.735.773.103 1.454.557 1.846 1.23.694 1.21 2.23 1.638 3.45.96.056-.61.327-1.178.766-1.605-2.67-.3-5.462-1.335-5.462-6.002-.02-1.193.42-2.35 1.23-3.226-.327-1.015-.27-2.116.166-3.09 0 0 1.006-.33 3.3 1.23 1.966-.538 4.04-.538 6.003 0 2.295-1.5 3.3-1.23 3.3-1.23.445 1.006.49 2.144.12 3.18.81.877 1.25 2.033 1.23 3.226 0 4.607-2.805 5.627-5.476 5.927.578.583.88 1.386.825 2.206v3.29c-.005.2.092.393.26.507.164.115.377.14.565.063 5.568-1.88 8.956-7.514 8.007-13.313C22.892 4.267 17.884.007 12.008 0z\" />\n    </SvgIcon>\n  )\n}\n\nexport default GitHub\n","// @flow weak\n\nimport seed from \"seed-random\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst fade = (cmap, amt) => {\n  const newCmap = {}\n  for (let i = 100; i < 1000; i++) {\n    if (i - amt <= 0) {\n      newCmap[i] = \"#fff\"\n    } else {\n      newCmap[i] = cmap[i - amt]\n    }\n  }\n  return newCmap\n}\n\nconst fadedGrey = {\n  ...colors.grey,\n  // \"800\": colors.grey[600],\n  // \"700\": colors.grey[500],\n  // \"600\": colors.grey[400],\n  // \"500\": colors.grey[300],\n  // \"400\": colors.grey[200],\n  // \"300\": colors.grey[100],\n  isFaded: true,\n}\n\nconst availableColors = [\n  colors.blue,\n  colors.deepOrange,\n  colors.green,\n  colors.purple,\n  colors.pink,\n  colors.cyan,\n  colors.orange,\n  colors.indigo,\n]\n\nconst colorMap = {\n  ...colors,\n  complete: colors.blue,\n  incomplete: fadedGrey,\n  faded: fadedGrey,\n  review: colors.deepOrange,\n  ellipsis1: fade(colors.grey, 100),\n  ellipsis2: fade(colors.grey, 200),\n  ellipsis3: fade(colors.grey, 300),\n}\n\nexport default (brush) => {\n  return (\n    colorMap[brush] || availableColors[seed(brush) * availableColors.length]\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport BrushIcon from \"@material-ui/icons/Brush\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Button from \"@material-ui/core/Button\"\nimport HeaderPopupBox from \"../HeaderPopupBox\"\nimport useEventCallback from \"use-event-callback\"\nimport memoize from \"lodash/memoize\"\nimport getBrushColorPalette from \"../../utils/get-brush-color-palette.js\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Container = styled(\"div\")({ position: \"relative\" })\nconst BrushCircle = styled(\"div\")(({ color }) => ({\n  display: \"inline\",\n  marginRight: 8,\n  backgroundColor: color[700],\n  width: 24,\n  height: 24,\n  borderRadius: 20,\n}))\n\nconst OtherColorContainers = styled(\"div\")({\n  paddingTop: 10,\n  padding: 4,\n  display: \"flex\",\n  flexWrap: \"wrap\",\n})\n\nconst StyledIconButton = styled(IconButton)(({ iconcolor, selected }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  backgroundColor: iconcolor[700],\n  border: selected ? `4px solid ${iconcolor[\"A200\"]}` : \"4px solid #fff\",\n  boxSizing: \"content-box\",\n  margin: 4,\n  transition: \"transform 200ms linear\",\n  \"&:hover\": {\n    backgroundColor: iconcolor[800],\n    transform: \"scale(1.2,1.2)\",\n  },\n  \"&:active\": {\n    transition: \"transform 100ms linear\",\n    transform: \"scale(1.4,1.4)\",\n  },\n}))\n\nconst StyledButton = styled(Button)(({ selected, iconcolor }) => ({\n  justifyContent: \"flex-start\",\n  marginTop: 4,\n  marginBottom: 4,\n  paddingTop: 8,\n  paddingBottom: 8,\n  backgroundColor: selected ? iconcolor[50] : \"#fff\",\n  border: selected ? `2px solid ${iconcolor[200]}` : \"2px solid #fff\",\n  \"&:hover\": {\n    backgroundColor: selected ? iconcolor[100] : \"none\",\n  },\n}))\n\nexport default ({ selectedBrush, onChangeSelectedBrush }) => {\n  const [open, changeOpen] = useState(false)\n  const handleClick = useEventCallback((color) =>\n    memoize(() => onChangeSelectedBrush(color))\n  )\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  return (\n    <Container\n      onMouseEnter={() => changeOpen(true)}\n      onMouseLeave={() => changeOpen(false)}\n    >\n      <IconButton>\n        <BrushIcon\n          style={{ color: getBrushColorPalette(selectedBrush)[800] }}\n        />\n      </IconButton>\n      <HeaderPopupBox open={open}>\n        <h1>{t(\"sample-brushes\")}</h1>\n        <StyledButton\n          selected={selectedBrush === \"complete\" || selectedBrush === \"blue\"}\n          iconcolor={colors.blue}\n          fullWidth\n          onClick={handleClick(\"complete\")}\n        >\n          <BrushCircle color={colors.blue} />\n          {t(\"complete\")}\n        </StyledButton>\n        <StyledButton\n          selected={\n            selectedBrush === \"review\" || selectedBrush === \"deepOrange\"\n          }\n          iconcolor={colors.deepOrange}\n          fullWidth\n          onClick={handleClick(\"review\")}\n        >\n          <BrushCircle color={colors.deepOrange} />\n          {t(\"review\")}\n        </StyledButton>\n        <OtherColorContainers>\n          <StyledIconButton\n            onClick={handleClick(\"green\")}\n            selected={selectedBrush === \"green\"}\n            iconcolor={colors.green}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"purple\")}\n            selected={selectedBrush === \"purple\"}\n            iconcolor={colors.purple}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"pink\")}\n            selected={selectedBrush === \"pink\"}\n            iconcolor={colors.pink}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"cyan\")}\n            selected={selectedBrush === \"cyan\"}\n            iconcolor={colors.cyan}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"orange\")}\n            selected={selectedBrush === \"orange\"}\n            iconcolor={colors.orange}\n          />\n          <StyledIconButton\n            onClick={handleClick(\"indigo\")}\n            selected={selectedBrush === \"indigo\"}\n            iconcolor={colors.indigo}\n          />\n        </OtherColorContainers>\n      </HeaderPopupBox>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst SlackIcon = (props) => {\n  return (\n    <SvgIcon>\n      <svg\n        style={{\n          width: 32,\n          height: 32,\n        }}\n        viewBox=\"50 60 160 160\"\n      >\n        <g>\n          <g>\n            <path d=\"M99.4,151.2c0,7.1-5.8,12.9-12.9,12.9s-12.9-5.8-12.9-12.9c0-7.1,5.8-12.9,12.9-12.9h12.9V151.2z\" />\n            <path d=\"M105.9,151.2c0-7.1,5.8-12.9,12.9-12.9s12.9,5.8,12.9,12.9v32.3c0,7.1-5.8,12.9-12.9,12.9 s-12.9-5.8-12.9-12.9C105.9,183.5,105.9,151.2,105.9,151.2z\" />\n          </g>\n          <g>\n            <path d=\"M118.8,99.4c-7.1,0-12.9-5.8-12.9-12.9s5.8-12.9,12.9-12.9s12.9,5.8,12.9,12.9v12.9H118.8z\" />\n            <path d=\"M118.8,105.9c7.1,0,12.9,5.8,12.9,12.9s-5.8,12.9-12.9,12.9H86.5c-7.1,0-12.9-5.8-12.9-12.9 s5.8-12.9,12.9-12.9C86.5,105.9,118.8,105.9,118.8,105.9z\" />\n          </g>\n          <g>\n            <path d=\"M170.6,118.8c0-7.1,5.8-12.9,12.9-12.9c7.1,0,12.9,5.8,12.9,12.9s-5.8,12.9-12.9,12.9h-12.9V118.8z\" />\n            <path d=\"M164.1,118.8c0,7.1-5.8,12.9-12.9,12.9c-7.1,0-12.9-5.8-12.9-12.9V86.5c0-7.1,5.8-12.9,12.9-12.9 c7.1,0,12.9,5.8,12.9,12.9V118.8z\" />\n          </g>\n          <g>\n            <path d=\"M151.2,170.6c7.1,0,12.9,5.8,12.9,12.9c0,7.1-5.8,12.9-12.9,12.9c-7.1,0-12.9-5.8-12.9-12.9v-12.9H151.2z\" />\n            <path d=\"M151.2,164.1c-7.1,0-12.9-5.8-12.9-12.9c0-7.1,5.8-12.9,12.9-12.9h32.3c7.1,0,12.9,5.8,12.9,12.9 c0,7.1-5.8,12.9-12.9,12.9H151.2z\" />\n          </g>\n        </g>\n      </svg>\n    </SvgIcon>\n  )\n}\n\nexport default SlackIcon\n","// @flow weak\n\nimport React, { memo } from \"react\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport Box from \"@material-ui/core/Box\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport StorageIcon from \"@material-ui/icons/Storage\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport CollaborateButton from \"../CollaborateButton\"\nimport DownloadButton from \"../DownloadButton\"\nimport Button from \"@material-ui/core/Button\"\nimport GithubIcon from \"../Header/GithubIcon\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport packageJSON from \"../../../package.json\"\nimport BrushButton from \"../BrushButton\"\nimport useAuth from \"../../utils/auth-handlers/use-auth.js\"\nimport SlackIcon from \"./SlackIcon\"\nimport GitHubButton from \"react-github-btn\"\n\nconst capitalize = (s) => {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nconst useStyles = makeStyles((theme) => ({\n  headerButton: {\n    marginLeft: 16,\n  },\n  grow: { flexGrow: 1 },\n  list: {\n    width: 300,\n  },\n  tab: {\n    color: \"#000\",\n    \"& .icon\": {},\n  },\n  fullHeightTab: {\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      minWidth: 20,\n    },\n  },\n  tabWrapper: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    textTransform: \"none\",\n    color: \"#000\",\n    \"&&& svg\": {\n      marginBottom: 0,\n      marginRight: 8,\n      width: 18,\n      height: 18,\n    },\n  },\n}))\n\nconst getIcon = (t) => {\n  switch (t) {\n    case \"Setup\":\n      return <SettingsIcon className=\"icon\" />\n    case \"Label\":\n      return <BorderColorIcon className=\"icon\" />\n    case \"Samples\":\n      return <StorageIcon className=\"icon\" />\n    default:\n      return <div></div>\n  }\n}\n\nconst HeaderToolbar = ({\n  tabs,\n  currentTab,\n  onChangeTab,\n  additionalButtons,\n  onOpenDrawer,\n  title = \"Universal Data Tool\",\n  isDesktop,\n  fileOpen,\n  sessionBoxOpen,\n  changeSessionBoxOpen,\n  inSession,\n  onCreateSession,\n  onLeaveSession,\n  onJoinSession,\n  onDownload,\n  selectedBrush,\n  onChangeSelectedBrush,\n  isSmall,\n  authConfig,\n  changeLoginDrawerOpen,\n  collaborateError,\n  isWelcomePage,\n}) => {\n  const c = useStyles()\n  const { authProvider, isLoggedIn, logout } = useAuth()\n  return (\n    <AppBar color=\"default\" position=\"static\">\n      <Toolbar variant=\"dense\">\n        {!isDesktop && (\n          <IconButton onClick={onOpenDrawer} className={c.headerButton}>\n            <MenuIcon />\n          </IconButton>\n        )}\n        {fileOpen ? title : \"Universal Data Tool v\" + packageJSON.version}\n        <CollaborateButton\n          sessionBoxOpen={sessionBoxOpen}\n          changeSessionBoxOpen={changeSessionBoxOpen}\n          fileOpen={fileOpen}\n          inSession={inSession}\n          onCreateSession={onCreateSession}\n          onLeaveSession={onLeaveSession}\n          onJoinSession={onJoinSession}\n          error={collaborateError}\n        />\n        {fileOpen && (\n          <BrushButton\n            selectedBrush={selectedBrush}\n            onChangeSelectedBrush={onChangeSelectedBrush}\n          />\n        )}\n        {!isDesktop && fileOpen && <DownloadButton onDownload={onDownload} />}\n        <div className={c.grow} />\n        {additionalButtons}\n        {tabs.length > 0 && (\n          <Tabs\n            onChange={(e, newTab) => onChangeTab(newTab.toLowerCase())}\n            value={currentTab}\n          >\n            {tabs.map((t) => (\n              <Tab\n                key={t}\n                classes={{ root: c.fullHeightTab, wrapper: c.tabWrapper }}\n                className={c.tab}\n                icon={getIcon(t)}\n                label={isSmall ? \"\" : t}\n                value={t.toLowerCase()}\n              />\n            ))}\n          </Tabs>\n        )}\n        {authProvider !== \"none\" && isWelcomePage && !isLoggedIn && (\n          <Button\n            onClick={() => {\n              changeLoginDrawerOpen(true)\n            }}\n            className={c.headerButton}\n          >\n            Login with {capitalize(authProvider)}\n          </Button>\n        )}\n        {isLoggedIn && (\n          <Button onClick={logout} className={c.headerButton}>\n            Logout\n          </Button>\n        )}\n        {!isSmall && !isWelcomePage && (\n          <IconButton\n            href=\"https://github.com/UniversalDataTool/universal-data-tool\"\n            className={c.headerButton}\n          >\n            <GithubIcon />\n          </IconButton>\n        )}\n        {!isSmall && isWelcomePage && (\n          <Box paddingTop=\"4px\" paddingLeft=\"8px\">\n            <GitHubButton\n              href=\"https://github.com/UniversalDataTool/universal-data-tool\"\n              data-icon=\"octicon-star\"\n              data-size=\"large\"\n              data-show-count=\"true\"\n              aria-label=\"Star UniversalDataTool/universal-data-tool on GitHub\"\n            >\n              Star\n            </GitHubButton>\n          </Box>\n        )}\n        {!isSmall && isWelcomePage && (\n          <IconButton\n            href=\"https://join.slack.com/t/universaldatatool/shared_invite/zt-d8teykwi-iOSOUfxugKR~M4AJN6VL3g\"\n            className={c.headerButton}\n          >\n            <SlackIcon />\n          </IconButton>\n        )}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default memo(HeaderToolbar)\n","// @flow\n\nimport ImageSearch from \"@material-ui/icons/ImageSearch\"\nimport Image from \"@material-ui/icons/Image\"\nimport CropFree from \"@material-ui/icons/CropFree\"\nimport TextFormat from \"@material-ui/icons/TextFormat\"\nimport Edit from \"@material-ui/icons/Edit\"\nimport Audiotrack from \"@material-ui/icons/Audiotrack\"\nimport Category from \"@material-ui/icons/Category\"\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\"\nimport OndemandVideoIcon from \"@material-ui/icons/OndemandVideo\"\nimport ContactSupport from \"@material-ui/icons/ContactSupport\"\n\nexport const templates = [\n  {\n    name: \"Empty\",\n    Icon: CropFree,\n    dataset: {\n      interface: {},\n      samples: [],\n    },\n  },\n  {\n    name: \"Image Segmentation\",\n    Icon: ImageSearch,\n    dataset: {\n      interface: {\n        type: \"image_segmentation\",\n        labels: [\"valid\", \"invalid\"],\n        regionTypesAllowed: [\n          \"bounding-box\",\n          \"polygon\",\n          // \"full-segmentation\",\n          \"point\",\n          // \"pixel-mask\"\n        ],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Image Classification\",\n    Icon: Image,\n    dataset: {\n      interface: {\n        type: \"image_classification\",\n        labels: [\"valid\", \"invalid\"],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Video Segmentation\",\n    Icon: OndemandVideoIcon,\n    dataset: {\n      interface: {\n        type: \"video_segmentation\",\n        labels: [\"valid\", \"invalid\"],\n        regionTypesAllowed: [\"bounding-box\", \"polygon\", \"point\"],\n      },\n      samples: [\n        {\n          videoUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/SampleVideo_1280x720_1mb.mp4\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Data Entry\",\n    Icon: Edit,\n    dataset: {\n      interface: {\n        type: \"data_entry\",\n        description: \"# Markdown description here\",\n        surveyjs: {\n          questions: [\n            {\n              type: \"text\",\n              name: \"document_title\",\n              title: \"Title of Document\",\n            },\n          ],\n        },\n      },\n      samples: [\n        {\n          pdfUrl: \"https://arxiv.org/pdf/1906.01969.pdf\",\n        },\n        {\n          pdfUrl: \"https://arxiv.org/pdf/1908.07069.pdf\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Named Entity Recognition\",\n    Icon: TextFormat,\n    dataset: {\n      interface: {\n        type: \"text_entity_recognition\",\n        overlapAllowed: false,\n        labels: [\n          {\n            id: \"food\",\n            displayName: \"Food\",\n            description: \"Edible item.\",\n          },\n          {\n            id: \"hat\",\n            displayName: \"Hat\",\n            description: \"Something worn on the head.\",\n          },\n        ],\n      },\n      samples: [\n        {\n          document:\n            \"This strainer makes a great hat, I'll wear it while I serve spaghetti!\",\n        },\n        {\n          document: \"Why are all these dumpings covered in butter?!\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Text Classification\",\n    Icon: ContactSupport,\n    dataset: {\n      interface: {\n        type: \"text_classification\",\n        labels: [\"positive_sentiment\", \"negative_sentiment\"],\n      },\n      samples: [\n        {\n          document: \"Wow this is terrible. I hated it.\",\n        },\n        {\n          document: \"This has made me so happy. I love this.\",\n        },\n        {\n          document:\n            \"At first I wasn't sure. Then I thought, oh it's not very good.\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Audio Transcription\",\n    Icon: Audiotrack,\n    dataset: {\n      interface: {\n        type: \"audio_transcription\",\n        description: \"# Markdown description here\",\n      },\n      samples: [\n        {\n          audioUrl: \"https://html5tutorial.info/media/vincent.mp3\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Composite\",\n    Icon: Category,\n    dataset: {\n      description: \"# Markdown description here\",\n      interface: {\n        type: \"composite\",\n        fields: [\n          {\n            fieldName: \"textInfo\",\n            interface: {\n              type: \"data_entry\",\n              surveyjs: {\n                questions: [\n                  {\n                    type: \"text\",\n                    name: \"group_letter\",\n                    title: \"Letter of Group\",\n                  },\n                ],\n              },\n            },\n          },\n          {\n            fieldName: \"segmentation\",\n            interface: {\n              type: \"image_segmentation\",\n              labels: [\"group text\"],\n              regionTypesAllowed: [\"bounding-box\"],\n            },\n          },\n        ],\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image1.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/asset.workaround.online/example-jobs/sticky-notes/image2.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"Pixel Segmentation\",\n    Icon: ImageSearch,\n    dataset: {\n      interface: {\n        type: \"image_pixel_segmentation\",\n        labels: [\"hair\", \"mouth\", \"nose\", \"eyes\"],\n        description: \"These are AI-generated faces, not real people.\",\n      },\n      samples: [\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010041.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010026.jpg\",\n        },\n        {\n          imageUrl:\n            \"https://s3.amazonaws.com/datasets.workaround.online/faces/010025.jpg\",\n        },\n      ],\n    },\n  },\n  {\n    name: \"3D Bounding Box\",\n    Icon: ThreeDRotation,\n    dataset: {\n      interface: {\n        type: \"3d_bounding_box\",\n        description: \"3D Bounding Box\",\n      },\n      samples: [{}],\n    },\n  },\n]\n\nexport const templateMap = templates.reduce((acc, t) => {\n  acc[t.name] = t\n  acc[t.dataset.interface.type] = t\n  return acc\n}, {})\n\nexport default templates\n","//@flow weak\n\nimport React, { useCallback } from \"react\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport { useDropzone } from \"react-dropzone\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport { GoMarkGithub } from \"react-icons/go\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport HomeIcon from \"@material-ui/icons/Home\"\nimport { FaTrashAlt } from \"react-icons/fa\"\nimport templates from \"../StartingPage/templates\"\nimport * as colors from \"@material-ui/core/colors\"\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\"\nimport NoteAddIcon from \"@material-ui/icons/NoteAdd\"\nimport { useTranslation } from \"react-i18next\"\n\nconst useStyles = makeStyles({})\n\nexport default ({\n  recentItems,\n  changeRecentItems,\n  onClickHome,\n  onCloseDrawer,\n  drawerOpen,\n  onOpenFile,\n  onOpenRecentItem,\n  onClickTemplate,\n}) => {\n  const c = useStyles()\n  const { t } = useTranslation()\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      onOpenFile(acceptedFiles[0])\n    },\n    [onOpenFile]\n  )\n\n  function onDeleteFile(i) {\n    changeRecentItems(\n      recentItems.filter((oneRecentFile) => oneRecentFile.id !== i)\n    )\n  }\n\n  const { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n  return (\n    <Drawer open={drawerOpen} onClose={onCloseDrawer}>\n      <List className={c.list}>\n        <ListItem onClick={onClickHome} button>\n          <ListItemIcon>\n            <HomeIcon />\n          </ListItemIcon>\n          <ListItemText>Home</ListItemText>\n        </ListItem>\n        <ListItem {...getRootProps()} button>\n          <ListItemIcon>\n            <NoteAddIcon />\n          </ListItemIcon>\n          <ListItemText>Open File</ListItemText>\n          <input {...getInputProps()} />\n        </ListItem>\n        <ListSubheader>Recent Files</ListSubheader>\n        {recentItems.length === 0 ? (\n          <ListItem>\n            <ListItemText\n              style={{ textAlign: \"center\", color: colors.grey[500] }}\n            >\n              {t(\"no-recent-items\")}\n            </ListItemText>\n          </ListItem>\n        ) : (\n          recentItems.map((ri, index) => (\n            <ListItem key={ri.fileName} button>\n              <ListItemIcon\n                onClick={() => {\n                  onOpenRecentItem(ri)\n                }}\n              >\n                <FileIcon />\n              </ListItemIcon>\n              <ListItemText\n                onClick={() => {\n                  onOpenRecentItem(ri)\n                }}\n              >\n                {ri.fileName}\n              </ListItemText>\n              <ListItemIcon\n                onClick={() => {\n                  onDeleteFile(ri.id)\n                }}\n              >\n                <FaTrashAlt />\n              </ListItemIcon>\n            </ListItem>\n          ))\n        )}\n        <ListSubheader>Create From Template</ListSubheader>\n        {templates.map((template) => (\n          <ListItem\n            button\n            key={template.name}\n            onClick={() => onClickTemplate(template)}\n          >\n            <ListItemIcon>\n              <template.Icon />\n            </ListItemIcon>\n            <ListItemText>{template.name}</ListItemText>\n          </ListItem>\n        ))}\n        <ListSubheader>{t(\"explore-more\")}</ListSubheader>\n        {/* <ListItem button>\n      <ListItemIcon>\n        <CodeIcon />\n      </ListItemIcon>\n      <ListItemText>Integrate</ListItemText>\n    </ListItem> */}\n        <ListItem\n          button\n          onClick={() => {\n            window.location.href =\n              \"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n          }}\n        >\n          <ListItemIcon>\n            <GoMarkGithub />\n          </ListItemIcon>\n          <ListItemText>Github</ListItemText>\n        </ListItem>\n      </List>\n    </Drawer>\n  )\n}\n","// @flow weak\n\nimport React, { useState, createContext, useContext, useCallback } from \"react\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\nimport LoginDrawer from \"../LoginDrawer\"\n\nimport HeaderToolbar from \"../HeaderToolbar\"\nimport HeaderDrawer from \"../HeaderDrawer\"\n\nexport const HeaderContext = createContext({\n  recentItems: [],\n  changeRecentItems: () => null,\n  onClickTemplate: () => null,\n  onClickHome: () => null,\n  onOpenFile: () => null,\n  onOpenRecentItem: () => null,\n  isDesktop: false,\n  inSession: false,\n  onJoinSession: () => null,\n  onCreateSession: () => null,\n  onLeaveSession: () => null,\n  sessionBoxOpen: false,\n  changeSessionBoxOpen: () => null,\n  fileOpen: false,\n  onDownload: () => null,\n  authConfig: null,\n  onUserChange: () => null,\n  user: null,\n  logoutUser: () => null,\n})\n\nconst emptyArray = []\n\nexport default ({\n  additionalButtons = emptyArray,\n  title,\n  currentTab,\n  onChangeTab,\n  tabs = emptyArray,\n}) => {\n  const [drawerOpen, changeDrawerOpen] = useState(false)\n  const [loginDrawerOpen, changeLoginDrawerOpen] = useState(false)\n  let headerContext = useContext(HeaderContext)\n  if (!headerContext.recentItems) headerContext.recentItems = []\n\n  const isSmall = useMediaQuery(\"(max-width: 800px)\")\n\n  const onOpenDrawer = useCallback(() => changeDrawerOpen(true), [])\n  const onCloseDrawer = useCallback(() => changeDrawerOpen(false), [])\n\n  return (\n    <>\n      <HeaderToolbar\n        tabs={tabs}\n        currentTab={currentTab}\n        onChangeTab={onChangeTab}\n        additionalButtons={additionalButtons}\n        onOpenDrawer={onOpenDrawer}\n        isSmall={isSmall}\n        {...headerContext}\n        changeLoginDrawerOpen={changeLoginDrawerOpen}\n        title={title}\n      />\n      <HeaderDrawer\n        drawerOpen={drawerOpen}\n        onCloseDrawer={onCloseDrawer}\n        onClickHome={headerContext.onClickHome}\n        recentItems={headerContext.recentItems}\n        changeRecentItems={headerContext.changeRecentItems}\n        onOpenFile={headerContext.onOpenFile}\n        onClickTemplate={headerContext.onClickTemplate}\n        onOpenRecentItem={headerContext.onOpenRecentItem}\n      />\n      <LoginDrawer\n        authConfig={headerContext.authConfig}\n        loginDrawerOpen={loginDrawerOpen}\n        onClose={() => changeLoginDrawerOpen(false)}\n        onUserChange={headerContext.onUserChange}\n        logoutUser={headerContext.logoutUser}\n      />\n    </>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport FullScreenIcon from \"@material-ui/icons/Fullscreen\"\nimport FullScreenExitIcon from \"@material-ui/icons/FullscreenExit\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Button from \"@material-ui/core/Button\"\nimport { grey, blue, red } from \"@material-ui/core/colors\"\nimport ReactMarkdown from \"react-markdown\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst StyledDialogTitle = styled(DialogTitle)({\n  backgroundColor: grey[100],\n  borderBottom: `1px solid ${grey[300]}`,\n  paddingBottom: 12,\n  boxShadow: \"0px 2px 3px rgba(0,0,0,0.05)\",\n})\nconst StyledDialogContent = styled(DialogContent)({\n  paddingTop: 16,\n})\nconst StyledDialogActions = styled(DialogActions)({\n  backgroundColor: grey[100],\n  borderTop: `1px solid ${grey[300]}`,\n})\n\nexport default ({\n  open = false,\n  title,\n  children,\n  markdownContent,\n  onClose,\n  red: redOn,\n  noActionBar = false,\n  actions = [],\n}) => {\n  const [fullScreen, changeFullScreen] = useState(false)\n  return (\n    <Dialog open={open} onClose={onClose} fullScreen={fullScreen}>\n      <StyledDialogTitle>\n        <Box display=\"flex\" alignItems=\"center\">\n          <span style={{ color: redOn ? red[700] : undefined }}>{title}</span>\n          <div style={{ flexGrow: 1 }} />\n          <IconButton onClick={() => changeFullScreen(!fullScreen)}>\n            {fullScreen ? <FullScreenExitIcon /> : <FullScreenIcon />}\n          </IconButton>\n          <IconButton onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Box>\n      </StyledDialogTitle>\n      <StyledDialogContent>\n        <Box maxWidth=\"90vw\" minWidth={400} lineHeight={1.5}>\n          {markdownContent ? (\n            <ReactMarkdown source={markdownContent} />\n          ) : (\n            children\n          )}\n        </Box>\n      </StyledDialogContent>\n      {!noActionBar && (\n        <StyledDialogActions>\n          <Button onClick={() => onClose()}>\n            <span style={{ color: grey[700], fontWeight: 500 }}>Close</span>\n          </Button>\n          {actions.map((action, i) => (\n            <Button disabled={action.disabled} key={i} onClick={action.onClick}>\n              <span\n                style={{ color: redOn ? red[700] : blue[700], fontWeight: 500 }}\n              >\n                {action.text}\n              </span>\n            </Button>\n          ))}\n        </StyledDialogActions>\n      )}\n    </Dialog>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport templates from \"../StartingPage/templates\"\nimport SimpleDialog from \"../SimpleDialog\"\n\nconst useStyles = makeStyles({\n  bigButton: {\n    padding: 10,\n    width: 150,\n    height: 120,\n    border: \"1px solid #ccc\",\n    margin: 10,\n  },\n  bigIcon: {\n    width: 48,\n    height: 48,\n  },\n})\n\nexport default ({ open, onClose, onSelect }) => {\n  const c = useStyles()\n  return (\n    <SimpleDialog title=\"Create from Template\" open={open} onClose={onClose}>\n      {templates.map((template) => (\n        <Button\n          key={template.name}\n          onClick={() => onSelect(template)}\n          className={c.bigButton}\n        >\n          <div>\n            <div>{template.name}</div>\n            <div>\n              <template.Icon className={c.bigIcon} />\n            </div>\n          </div>\n        </Button>\n      ))}\n    </SimpleDialog>\n  )\n}\n","// @flow\nimport React from \"react\"\n\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nconst CognitoIcon = (props) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 75 75\">\n      <g id=\"Reference\">\n        <rect\n          id=\"Red_Light_BG\"\n          data-name=\"Red Light BG\"\n          style={{ fill: \"#d6242d\" }}\n          width=\"75\"\n          height=\"75\"\n        />\n        <g id=\"Product_Icon\" data-name=\"Product Icon\">\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M55,15H16.46a3.92,3.92,0,0,0-3.71,4.1v24.8A3.92,3.92,0,0,0,16.46,48H37.75V46H16.46a2,2,0,0,1-1.71-2.1V27h18V42a1,1,0,0,0,1,1h8V41H35.2V40.7a7.74,7.74,0,0,1,5.53-7.43,5.91,5.91,0,0,0,4.92,0,7.82,7.82,0,0,1,4.42,3.42l1.7-1v0a9.8,9.8,0,0,0-4.34-3.82,5.4,5.4,0,0,0,1.27-3.48,5.5,5.5,0,0,0-11,0A5.42,5.42,0,0,0,39,31.8a9.67,9.67,0,0,0-4.22,3.62V22h17v13.7h0V36h2V27h3V37h2l0-17.9A3.92,3.92,0,0,0,55,15ZM43.2,24.87a3.48,3.48,0,0,1,3.5,3.46,3.43,3.43,0,0,1-1.81,3,3.57,3.57,0,0,1-3.39,0,3.44,3.44,0,0,1-1.8-3A3.48,3.48,0,0,1,43.2,24.87ZM53.75,25V21a1,1,0,0,0-1-1h-19a1,1,0,0,0-1,1v4h-18v-5.9A2,2,0,0,1,16.46,17H55a2,2,0,0,1,1.73,2.1V25Z\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"16.77\"\n            y=\"31.95\"\n            width=\"10.98\"\n            height=\"2\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"16.77\"\n            y=\"36.95\"\n            width=\"6.98\"\n            height=\"2\"\n          />\n          <rect\n            style={{ fill: \"#fff\" }}\n            x=\"25.77\"\n            y=\"36.95\"\n            width=\"2.98\"\n            height=\"2\"\n          />\n          <path style={{ fill: \"#fff\" }} d=\"M51.78,35.65h0v0Z\" />\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M52.14,60.05a10.11,10.11,0,1,1,1.22-20.14h0a10.12,10.12,0,0,1,6.46,16.61,10.47,10.47,0,0,1-3.37,2.57A10.19,10.19,0,0,1,52.14,60.05Zm0-18.22a8,8,0,0,0-3.69.9,8.11,8.11,0,0,0,7.16,14.55,8.2,8.2,0,0,0,2.71-2.07,8.11,8.11,0,0,0-5.19-13.32h0A8.22,8.22,0,0,0,52.12,41.83Z\"\n          />\n          <path\n            style={{ fill: \"#fff\" }}\n            d=\"M50.55,54.2h0a1,1,0,0,1-.71-.29l-3.23-3.23L48,49.27l2.52,2.52,5.7-5.71,1.42,1.42-6.42,6.41A1,1,0,0,1,50.55,54.2Z\"\n          />\n          <path style={{ fill: \"#fff\" }} d=\"M51.78,35.65h0v0Z\" />\n        </g>\n      </g>\n    </SvgIcon>\n  )\n}\n\nexport default [\n  {\n    name: \"AWS - Cognito\",\n    provider: \"cognito\",\n    Icon: CognitoIcon,\n    dataset: {\n      interface: {},\n      samples: [],\n    },\n  },\n]\n","// @flow\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport { red } from \"@material-ui/core/colors\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Fade from \"@material-ui/core/Fade\"\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"center\",\n    pointerEvents: \"none\",\n  },\n  errorBox: {\n    display: \"flex\",\n    backgroundColor: red[700],\n    color: \"#fff\",\n    padding: 4,\n    marginBottom: 4,\n  },\n})\n\nexport default ({ errors }) => {\n  const c = useStyles()\n  return (\n    <div className={c.root}>\n      {errors.map((err) => (\n        <Collapse key={err.id} in={err.life < 5000}>\n          <Fade in={err.life > 500}>\n            <div className={c.errorBox}>{err.message}</div>\n          </Fade>\n        </Collapse>\n      ))}\n    </div>\n  )\n}\n","// @flow\n\nimport { useState, useEffect } from \"react\"\n\nconst REFRESH_INTERVAL = 100\n\nexport default () => {\n  const [errors, changeErrors] = useState([])\n  useEffect(() => {\n    if (errors.length === 0) return () => {}\n    let interval = setInterval(() => {\n      changeErrors(\n        errors\n          .map((err) => ({\n            ...err,\n            life: err.life - REFRESH_INTERVAL,\n          }))\n          .filter((err) => err.life > 0)\n      )\n    }, REFRESH_INTERVAL)\n    return () => clearInterval(interval)\n  }, [errors])\n\n  function addError(message: string) {\n    changeErrors(\n      errors.concat([\n        {\n          id: Math.random().toString().split(\".\")[1],\n          message,\n          life: 5000,\n        },\n      ])\n    )\n  }\n\n  return [errors, addError]\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport authTemplates from \"./authTemplates\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport isEmpty from \"lodash/isEmpty\"\nimport Survey from \"material-survey/components/Survey\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport Amplify from \"aws-amplify\"\nimport { useAppConfig } from \"../AppConfig\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst useStyles = makeStyles({\n  bigButton: {\n    padding: 10,\n    width: 150,\n    height: 120,\n    border: \"1px solid #ccc\",\n    margin: 10,\n  },\n  bigIcon: {\n    width: 48,\n    height: 48,\n  },\n  cognitoIcon: {\n    width: 48,\n    height: 48,\n  },\n  howToSetupText: {\n    padding: 16,\n    color: colors.grey[600],\n    \"& a\": {\n      color: colors.blue[500],\n      textDecoration: \"none\",\n    },\n  },\n})\n\nconst forms = {\n  cognito: {\n    questions: [\n      {\n        name: \"auth.cognito.identity_pool_id\",\n        title: \"Amazon Cognito Identity Pool ID\",\n        placeholder: \"XX-XXXX-X:XXXXXXXX-XXXX-1234-abcd-1234567890ab\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.region\",\n        title: \"AWS Region\",\n        placeholder: \"XX-XXXX-X\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.user_pool_id\",\n        title: \"Amazon Cognito User Pool ID\",\n        placeholder: \"XX-XXXX-X_12ab34cd9\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.user_pool_web_client_id\",\n        title: \"Amazon Cognito Web Client ID\",\n        placeholder: \"26-char alphanumeric string\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.storage.aws_s3.bucket\",\n        title: \"Bucket AWS\",\n        placeholder: \"Name of the bucket\",\n        type: \"text\",\n        isRequired: true,\n      },\n      {\n        name: \"auth.cognito.storage.aws_s3.region\",\n        title: \"Region of the bucket\",\n        placeholder: \"XX-XXXX-X\",\n        type: \"text\",\n        isRequired: true,\n      },\n    ],\n  },\n}\n\nexport default ({ open, onClose, onSelect, onFinish, onAuthConfigured }) => {\n  const c = useStyles()\n  const [authProvider, setAuthProvider] = useState(null)\n  const [dialogTitle, setDialogTitle] = useState(\"Add Authentication\")\n  const [errors, addError] = useErrors()\n  const { appConfig, setAppConfig, fromConfig, setInConfig } = useAppConfig()\n\n  // TODO useAppConfig to load in existing configuration\n\n  const validateAuthProvider = async (answers) => {\n    if (answers.provider === \"cognito\") {\n      const config = {\n        Auth: {\n          identityPoolId: answers[\"auth.cognito.identity_pool_id\"],\n          region: answers[\"auth.cognito.region\"],\n          userPoolId: answers[\"auth.cognito.user_pool_id\"],\n          userPoolWebClientId: answers[\"auth.cognito.user_pool_web_client_id\"],\n          mandatorySignIn: true,\n          authenticationFlowType: \"USER_PASSWORD_AUTH\",\n        },\n        Storage: {\n          AWSS3: {\n            bucket: answers[\"auth.cognito.storage.aws_s3.bucket\"],\n            region: answers[\"auth.cognito.storage.aws_s3.region\"],\n          },\n        },\n      }\n\n      try {\n        Amplify.configure(config)\n      } catch (err) {\n        addError(\"Invalid Cognito config: \" + err.toString())\n      }\n\n      setAppConfig({\n        ...appConfig,\n        ...answers,\n        \"auth.provider\": answers.provider,\n      })\n      // TODO some kind of success message\n      onClose()\n    }\n  }\n\n  return (\n    <>\n      <SimpleDialog\n        title={dialogTitle}\n        open={open}\n        onClose={() => {\n          onClose()\n        }}\n        onFinish={onFinish}\n      >\n        {isEmpty(authProvider) &&\n          authTemplates.map((template, i) => (\n            <Button\n              key={template.name}\n              onClick={() => {\n                setAuthProvider(template.provider)\n                setDialogTitle(`Add Authentication for ${template.name}`)\n              }}\n              className={c.bigButton}\n            >\n              <div>\n                <div>{template.name}</div>\n                <div>\n                  <template.Icon className={c.cognitoIcon} />\n                </div>\n              </div>\n            </Button>\n          ))}\n        {authProvider === \"cognito\" && (\n          <div className={c.howToSetupText}>\n            Check this wiki{\" \"}\n            <a href=\"https://github.com/UniversalDataTool/universal-data-tool/wiki/Cognito---Amplify-Authentication-Setup-Instructions\">\n              guide for setting up AWS Cognito with the Universal Data Tool\n            </a>\n            .\n          </div>\n        )}\n        {!isEmpty(authProvider) && forms[authProvider] && (\n          <Survey\n            variant=\"flat\"\n            form={forms[authProvider]}\n            onQuestionChange={(questionId, newValue) => {\n              setInConfig(questionId, newValue)\n            }}\n            onFinish={(answers) => {\n              answers[\"provider\"] = authProvider\n              validateAuthProvider(answers)\n            }}\n            defaultAnswers={{\n              \"auth.cognito.identity_pool_id\": fromConfig(\n                \"auth.cognito.identity_pool_id\"\n              ),\n              \"auth.cognito.region\": fromConfig(\"auth.cognito.region\"),\n              \"auth.cognito.user_pool_id\": fromConfig(\n                \"auth.cognito.user_pool_id\"\n              ),\n              \"auth.cognito.user_pool_web_client_id\": fromConfig(\n                \"auth.cognito.user_pool_web_client_id\"\n              ),\n              \"auth.cognito.storage.aws_s3.bucket\": fromConfig(\n                \"auth.cognito.storage.aws_s3.bucket\"\n              ),\n              \"auth.cognito.storage.aws_s3.region\": fromConfig(\n                \"auth.cognito.storage.aws_s3.region\"\n              ),\n              \"auth.provider\": fromConfig(\"auth.provider\"),\n            }}\n          />\n        )}\n        <ErrorToasts errors={errors} />\n      </SimpleDialog>\n    </>\n  )\n}\n","export default (url) => {\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/\n  const match = url.match(regExp)\n\n  const id = match && match[2].length === 11 ? match[2] : null\n\n  if (!id) return null\n\n  return `https://youtube.com/embed/${id}`\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Header from \"../Header\"\nimport Button from \"@material-ui/core/Button\"\nimport templates from \"./templates\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useDropzone } from \"react-dropzone\"\nimport CreateFromTemplateDialog from \"../CreateFromTemplateDialog\"\nimport AddAuthFromTemplateDialog from \"../AddAuthFromTemplateDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport packageInfo from \"../../../package.json\"\nimport useEventCallback from \"use-event-callback\"\nimport DownloadIcon from \"@material-ui/icons/GetApp\"\nimport Box from \"@material-ui/core/Box\"\nimport Select from \"react-select\"\nimport { useTranslation } from \"react-i18next\"\nimport getEmbedYoutubeUrl from \"./get-embed-youtube-url.js\"\n\nconst useStyles = makeStyles({\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    backgroundColor: colors.grey[900],\n    height: \"100vh\",\n  },\n  headerButton: {\n    fontSize: 12,\n    backgroundColor: \"#fff\",\n  },\n  downloadIcon: {\n    marginTop: 2,\n    width: 18,\n    height: 18,\n    marginRight: 4,\n    marginLeft: -6,\n    color: colors.grey[700],\n  },\n  languageSelectionWrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    textAlign: \"center\",\n  },\n})\n\nconst ContentContainer = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  justifyContent: \"center\",\n  flexGrow: 1,\n  color: \"#fff\",\n  overflowY: \"scroll\",\n  padding: 100,\n  [theme.breakpoints.down(\"sm\")]: {\n    padding: 50,\n  },\n}))\nconst Content = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  flexDirection: \"column\",\n  width: \"calc(100% - 32px)\",\n  marginLeft: 16,\n  maxWidth: 1000,\n}))\n\nconst Title = styled(\"div\")({\n  marginTop: 20,\n  fontSize: 36,\n  fontWeight: 600,\n  color: colors.grey[300],\n})\n\nconst languageSelectionFormStyle = {\n  control: (base, state) => ({\n    ...base,\n    border: \"1px solid #9e9e9e\",\n    background: \"transparent\",\n    color: \"#e0e0e0\",\n  }),\n  menuList: (base) => ({\n    ...base,\n    padding: 0,\n    margin: 0,\n    color: \"black\",\n  }),\n  singleValue: (base) => ({\n    ...base,\n    color: \"white\",\n  }),\n}\n\nconst Subtitle = styled(\"div\")({\n  fontSize: 18,\n  // fontWeight: \"bold\",\n  marginTop: 8,\n  color: colors.grey[500],\n})\nconst ActionList = styled(\"div\")({ marginTop: 48 })\nconst Action = styled(\"a\")({\n  display: \"block\",\n  color: colors.blue[500],\n  marginTop: 4,\n  cursor: \"pointer\",\n  textDecoration: \"none\",\n})\nconst ActionTitle = styled(\"div\")({\n  // fontWeight: \"bold\",\n  fontSize: 24,\n  marginBottom: 8,\n  color: colors.grey[500],\n})\nconst ActionText = styled(\"div\")({\n  color: colors.grey[300],\n  \"& a\": {\n    cursor: \"pointer\",\n    color: colors.blue[500],\n    textDecoration: \"none\",\n  },\n})\nconst Actionless = styled(\"div\")({\n  color: colors.grey[600],\n  paddingTop: 16,\n})\n\nconst BottomSpacer = styled(\"div\")({ height: 100 })\n\nconst languageOptions = [\n  { label: \"English\", value: \"en\" },\n  { label: \"French\", value: \"fr\" },\n  { label: \"Chinese\", value: \"cn\" },\n]\n\nexport default ({\n  onFileDrop,\n  onOpenTemplate,\n  showDownloadLink = true,\n  recentItems = [],\n  onOpenRecentItem,\n  onClickOpenSession,\n}) => {\n  const c = useStyles()\n  const posthog = usePosthog()\n\n  // internalization hook\n  const { t, i18n } = useTranslation()\n\n  //const isDesktop = useIsDesktop()\n  const [newVersionAvailable, changeNewVersionAvailable] = useState(false)\n  useEffect(() => {\n    // if (!isDesktop) return\n    async function checkNewVersion() {\n      const newPackage = await fetch(\n        \"https://raw.githubusercontent.com/UniversalDataTool/universal-data-tool/master/package.json\"\n      ).then((r) => r.json())\n      if (newPackage.version !== packageInfo.version) {\n        changeNewVersionAvailable(newPackage.version)\n      }\n    }\n    checkNewVersion()\n  }, [])\n\n  const [latestCommunityUpdate, setLatestCommunityUpdate] = useState(null)\n  useEffect(() => {\n    async function getLatestREADME() {\n      const readme = await fetch(\n        \"https://raw.githubusercontent.com/UniversalDataTool/universal-data-tool/master/README.md\"\n      ).then((r) => r.text())\n      const startCU = readme.search(\"COMMUNITY-UPDATE:START\")\n      const endCU = readme.search(\"COMMUNITY-UPDATE:END\")\n      const communityUpdates = readme\n        .slice(startCU, endCU)\n        .split(\"\\n\")\n        .slice(1, -1)\n      const latestYtLink = communityUpdates[0].match(/\\((.*)\\)/)[1]\n      setLatestCommunityUpdate({\n        name: communityUpdates[0].match(/\\[(.*)\\]/)[1],\n        ytLink: latestYtLink,\n        embedYTLink: getEmbedYoutubeUrl(latestYtLink),\n      })\n    }\n    getLatestREADME()\n  }, [])\n\n  const [\n    createFromTemplateDialogOpen,\n    changeCreateFromTemplateDialogOpen,\n  ] = useState(false)\n  const [addAuthFromDialogOpen, changeAddAuthFromDialogOpen] = useState(false)\n  const onDrop = useEventCallback((acceptedFiles) => {\n    onFileDrop(acceptedFiles[0])\n  })\n\n  const changeLanguage = (language) => {\n    i18n.changeLanguage(language)\n  }\n\n  let { getRootProps, getInputProps } = useDropzone({ onDrop })\n\n  return (\n    <div className={c.container}>\n      <CreateFromTemplateDialog\n        open={createFromTemplateDialogOpen}\n        onSelect={(template) => {\n          posthog.capture(\"template_clicked\", {\n            clicked_template: template.name,\n          })\n          onOpenTemplate(template)\n        }}\n        onClose={() => changeCreateFromTemplateDialogOpen(false)}\n      />\n      <AddAuthFromTemplateDialog\n        open={addAuthFromDialogOpen}\n        onSelect={(template) => onOpenTemplate(template)}\n        onClose={() => changeAddAuthFromDialogOpen(false)}\n      />\n      <Header\n        additionalButtons={[\n          newVersionAvailable && (\n            <Button\n              variant=\"outlined\"\n              key=\"download-latest\"\n              className={c.headerButton}\n              href=\"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n            >\n              <DownloadIcon className={c.downloadIcon} />\n              {t(\"Download Version\")} v{newVersionAvailable}\n            </Button>\n          ),\n          !newVersionAvailable && showDownloadLink && (\n            <Button\n              variant=\"outlined\"\n              key=\"download\"\n              href=\"https://github.com/OpenHumanAnnotation/universal-data-tool/releases\"\n              className={c.headerButton}\n            >\n              <DownloadIcon className={c.downloadIcon} />\n              {t(\"download\")}\n            </Button>\n          ),\n        ].filter(Boolean)}\n      />\n      <ContentContainer>\n        <Content>\n          <Grid container>\n            <Grid xs={6} item>\n              <Title>Universal Data Tool</Title>\n              <Subtitle>{t(\"universaldatatool-description\")}</Subtitle>\n            </Grid>\n            <Grid xs={6}>\n              <Box display=\"flex\" justifyContent=\"flex-end\" paddingTop={3}>\n                <Box\n                  width=\"100%\"\n                  maxWidth={200}\n                  className={c.languageSelectionWrapper}\n                >\n                  <Select\n                    styles={languageSelectionFormStyle}\n                    defaultValue={languageOptions[0]}\n                    options={languageOptions}\n                    onChange={({ value }) => changeLanguage(value)}\n                  />\n                </Box>\n              </Box>\n            </Grid>\n            <Grid xs={6} item>\n              <ActionList>\n                <ActionTitle>Start</ActionTitle>\n                <Action\n                  onClick={() => {\n                    posthog.capture(\"template_clicked\", {\n                      clicked_template: \"empty\",\n                    })\n                    onOpenTemplate(templates.find((t) => t.name === \"Empty\"))\n                  }}\n                >\n                  {t(\"new-file\")}\n                </Action>\n                <Action\n                  onClick={() => changeCreateFromTemplateDialogOpen(true)}\n                >\n                  {t(\"start-from-template\")}\n                </Action>\n                <Action {...getRootProps()}>\n                  <input {...getInputProps()} />\n                  {t(\"open-file\")}\n                </Action>\n                {onClickOpenSession && (\n                  <Action onClick={onClickOpenSession}>\n                    {t(\"open-collabrative-session\")}\n                  </Action>\n                )}\n                <Action onClick={() => changeAddAuthFromDialogOpen(true)}>\n                  {t(\"add-authentication\")}\n                </Action>\n                {/* <Action>Open Folder</Action> */}\n              </ActionList>\n              <ActionList>\n                <ActionTitle>Recent</ActionTitle>\n                {recentItems.length === 0 ? (\n                  <Actionless>{t(\"no-recent-files\")}</Actionless>\n                ) : (\n                  recentItems.map((ri, i) => (\n                    <Action key={i} onClick={() => onOpenRecentItem(ri)}>\n                      {ri.fileName}\n                    </Action>\n                  ))\n                )}\n              </ActionList>\n              <ActionList>\n                <ActionTitle>Help</ActionTitle>\n                <Action href=\"https://github.com/UniversalDataTool/universal-data-tool/releases\">\n                  {t(\"downloading-and-installing-udt\")}\n                </Action>\n                <Action href=\"https://dev.to/seveibar/make-bounding-boxes-for-artificial-intelligence-with-udt-1kai\">\n                  {t(\"labeling-images\")}\n                </Action>\n                {/* <Action>Custom Data Entry</Action> */}\n                <Action href=\"https://github.com/UniversalDataTool/universal-data-tool\">\n                  Github Repository\n                </Action>\n                <Action href=\"https://www.youtube.com/channel/UCgFkrRN7CLt7_iTa2WDjf2g\">\n                  Youtube Channel\n                </Action>\n\n                {/* <Action href=\"#\">\n                  How to Collaborate in Real-Time with UDT\n                </Action> */}\n              </ActionList>\n            </Grid>\n            <Grid xs={6} item>\n              <ActionList>\n                <ActionTitle>About</ActionTitle>\n                <ActionText>\n                  {t(\"start-page-about-first-paragraph\")}\n                  <br />\n                  <br />\n                  {t(\"start-page-about-second-paragraph\")}\n                  <br />\n                  <br />\n                  {t(\"the-udt-uses-an\")}{\" \"}\n                  <a href=\"https://github.com/UniversalDataTool/udt-format\">\n                    open-source data format (.udt.json / .udt.csv)\n                  </a>{\" \"}\n                  {t(\"start-page-about-third-paragraph\")}\n                  <br />\n                  <br />\n                </ActionText>\n              </ActionList>\n              <ActionList>\n                {latestCommunityUpdate && (\n                  <>\n                    <ActionTitle>{latestCommunityUpdate.name}</ActionTitle>\n                    <iframe\n                      title={latestCommunityUpdate.name}\n                      width=\"320\"\n                      height=\"178\"\n                      // src=\"https://www.youtube.com/embed/QW-s4XVK3Ok\"\n                      src={latestCommunityUpdate.embedYTLink}\n                      frameborder=\"0\"\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                      allowfullscreen=\"true\"\n                    ></iframe>\n                  </>\n                )}\n                {/* <ActionText>\n                  <Action\n                    style={{ display: \"inline\" }}\n                    onClick={() => changeCreateFromTemplateDialogOpen(true)}\n                  >\n                    {t(\"open-a-template\")}\n                  </Action>{\" \"}\n                  {t(\"to-see-how-the-udt-could-work-for-your-data\")}\n                </ActionText> */}\n              </ActionList>\n            </Grid>\n            <Grid xs={12} item>\n              <BottomSpacer />\n            </Grid>\n          </Grid>\n        </Content>\n      </ContentContainer>\n    </div>\n  )\n}\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport isEmpty from \"lodash/isEmpty\"\n\nconst useStyles = makeStyles({\n  textField: {\n    marginLeft: 8,\n  },\n})\n\nconst SAVE_WAIT = 2000\n\nexport default ({ value, onChange }) => {\n  const c = useStyles()\n  const [{ editing, newValue }, changeEditing] = useState({\n    editing: false,\n    newValue: value || \"\",\n  })\n\n  useEffect(() => {\n    if (!isEmpty(newValue) && newValue !== \"unnamed\") {\n      changeEditing({ editing, newValue: newValue })\n    } else {\n      changeEditing({ editing, newValue: value })\n    }\n  }, [newValue, editing, value])\n\n  useEffect(() => {\n    if (!editing) return\n    let listener = (e) => {\n      if (e.key === \"Enter\") {\n        onChange(newValue)\n        changeEditing({ editing: false })\n      }\n    }\n    window.addEventListener(\"keydown\", listener)\n    return () => {\n      window.removeEventListener(\"keydown\", listener)\n    }\n  }, [editing, newValue, onChange])\n\n  useEffect(() => {\n    if (!newValue) return\n    if (editing) {\n      let timeout = setTimeout(\n        () => {\n          onChange(newValue)\n          changeEditing({ editing: false })\n        },\n        value === newValue ? SAVE_WAIT * 5 : SAVE_WAIT\n      )\n\n      return () => clearTimeout(timeout)\n    } else {\n      return () => {}\n    }\n  }, [editing, newValue, value, onChange])\n\n  return (\n    <TextField\n      className={c.textField}\n      label=\"File Name\"\n      variant=\"outlined\"\n      size=\"small\"\n      InputProps={{\n        inputProps: { style: { color: \"#000\" } },\n      }}\n      onKeyDown={(e) => {\n        if (e.key === \"Enter\") {\n          e.preventDefault()\n          e.stopPropagation()\n          e.target.blur()\n        }\n      }}\n      onKeyPress={(e) => {\n        e.stopPropagation()\n      }}\n      onChange={(e) => {\n        changeEditing({\n          editing: true,\n          newValue: e.target.value,\n        })\n      }}\n      value={newValue || \"\"}\n    />\n  )\n}\n","// @flow weak\n\nimport React, { memo, useCallback, useReducer, useEffect } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport { useLocalStorage } from \"react-use\"\nimport { styled } from \"@material-ui/core/styles\"\nimport range from \"lodash/range\"\nimport * as colors from \"@material-ui/core/colors\"\nimport classNames from \"classnames\"\nimport TablePagination from \"@material-ui/core/TablePagination\"\nimport Box from \"@material-ui/core/Box\"\nimport getBrushColorPalette from \"../../utils/get-brush-color-palette\"\n\nconst Container = styled(\"div\")({\n  flexWrap: \"wrap\",\n  height: \"100%\",\n  boxSizing: \"border-box\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\nconst EmptyState = styled(\"div\")({\n  fontSize: 24,\n  color: colors.grey[500],\n  padding: 30,\n  textAlign: \"center\",\n})\nconst SampleDiv = styled(\"div\")(({ color }) => ({\n  color: \"#fff\",\n  fontVariantNumeric: \"tabular-nums\",\n  margin: 4,\n  padding: 4,\n  backgroundColor: color[500],\n  display: \"inline-flex\",\n  fontSize: 14,\n  fontWeight: 500,\n  textAlign: \"center\",\n  justifyContent: \"center\",\n  minWidth: \"3em\",\n  borderRadius: 3,\n  cursor: \"pointer\",\n  userSelect: \"none\",\n  transition:\n    \"box-shadow 200ms ease, transform 200ms ease, background-color 200ms ease\",\n  \"&:hover\": {\n    backgroundColor: color[700],\n  },\n  // color: color.isFaded ? \"#000\" : \"#fff\",\n  \"&.selected\": {\n    backgroundColor: color[700],\n    boxShadow: `0px 0px 2px 1px ${color[\"A200\"]}`,\n    transform: \"scale(1.05,1.05)\",\n  },\n}))\n\nconst Sample = memo(\n  ({\n    index,\n    onClick,\n    completed,\n    selected,\n    onMouseDown,\n    onMouseUp,\n    onMouseEnter,\n    brush,\n  }) => {\n    return (\n      <SampleDiv\n        className={classNames({ completed, selected })}\n        onClick={() => onClick(index)}\n        onMouseDown={() => onMouseDown(index)}\n        onMouseUp={() => onMouseUp(index)}\n        onMouseEnter={() => onMouseEnter(index)}\n        color={getBrushColorPalette(brush)}\n      >\n        {index}\n      </SampleDiv>\n    )\n  },\n  function (p, n) {\n    return (\n      p.index === n.index &&\n      p.completed === n.completed &&\n      p.selected === n.selected &&\n      p.brush === n.brush\n    )\n  }\n)\n\nexport default ({ count, completed = [], samples, onClick }) => {\n  const [samplesPerPage, changeSamplesPerPage] = useLocalStorage(\n    \"samplesPerPage\",\n    100\n  )\n  const [sampleOffset, changeSampleOffset] = useLocalStorage(\"sampleOffset\", 0)\n\n  useEffect(() => {\n    if (sampleOffset > count) {\n      changeSampleOffset(0)\n    }\n  }, [changeSampleOffset, sampleOffset, count])\n\n  const [selectRange, changeSelectRange] = useReducer((state, newValue) => {\n    if (newValue === null) return null\n    if (typeof newValue === \"number\") {\n      if (!state) return null\n      return [Math.min(newValue, state[0]), Math.max(newValue + 1, state[1])]\n    }\n    return newValue\n  }, null)\n\n  const startSelectRange = useCallback(\n    (index) => changeSelectRange([index, index + 1]),\n    [changeSelectRange]\n  )\n  const moveSelectRange = useCallback((index) => changeSelectRange(index), [\n    changeSelectRange,\n  ])\n  const endSelectRange = useCallback(() => {}, [])\n  const checkAndNullifySelectRange = useCallback(\n    (e) => {\n      if (e.buttons !== 1) {\n        changeSelectRange(null)\n      }\n    },\n    [changeSelectRange]\n  )\n  const onClickMemo = useEventCallback(onClick)\n\n  return (\n    <Container\n      onMouseUp={checkAndNullifySelectRange}\n      onMouseEnter={checkAndNullifySelectRange}\n    >\n      {count === 0 && (\n        <EmptyState>\n          No samples, try using \"Import Toy Dataset\" in Samples > Import\n        </EmptyState>\n      )}\n      <Box flexGrow={1}>\n        {range(\n          sampleOffset,\n          Math.min(count, sampleOffset + samplesPerPage)\n        ).map((i) => (\n          <Sample\n            onClick={onClickMemo}\n            key={i}\n            index={i}\n            completed={completed[i]}\n            brush={completed[i] ? samples[i].brush || \"complete\" : \"incomplete\"}\n            selected={selectRange && i >= selectRange[0] && i < selectRange[1]}\n            onMouseDown={startSelectRange}\n            onMouseEnter={moveSelectRange}\n            onMouseUp={endSelectRange}\n          />\n        ))}\n        {sampleOffset + samplesPerPage < count && (\n          <>\n            {range(3).map((i) => (\n              <Sample\n                onClick={() => {\n                  changeSampleOffset(sampleOffset + samplesPerPage)\n                }}\n                key={sampleOffset + samplesPerPage + i}\n                selected={false}\n                brush={`ellipsis${i + 1}`}\n                index={sampleOffset + samplesPerPage + i}\n                completed={false}\n                onMouseEnter={() => {}}\n                onMouseDown={() => {}}\n                onMouseUp={() => {}}\n              />\n            ))}\n            <Box textAlign=\"center\" marginTop=\"16px\" color={colors.grey[700]}>\n              More Samples on Next Page\n            </Box>\n          </>\n        )}\n      </Box>\n      <TablePagination\n        rowsPerPageOptions={[100, 250, 500, 1000, 2000, 10000]}\n        component=\"div\"\n        count={count}\n        rowsPerPage={samplesPerPage}\n        page={Math.floor(sampleOffset / samplesPerPage)}\n        labelRowsPerPage=\"Samples per Page:\"\n        onChangePage={(e, newPage) =>\n          changeSampleOffset(newPage * samplesPerPage)\n        }\n        onChangeRowsPerPage={(e) => {\n          changeSampleOffset(0)\n          changeSamplesPerPage(+e.target.value)\n        }}\n      />\n    </Container>\n  )\n}\n","// @flow weak\nimport React, { useState } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Select from \"react-select\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst SelectContainer = styled(\"div\")({\n  marginTop: 8,\n  marginBottom: 16,\n})\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\nconst ErrorText = styled(\"div\")({\n  color: colors.red[600],\n  padding: 16,\n})\n\nconst autoDetectOptions = [\n  {\n    label: \"Auto Detect File Type\",\n    value: \"auto_detect\",\n  },\n  {\n    label: \"Image URLs\",\n    value: \"images\",\n  },\n]\n\nexport default ({ open, onClose, onAddSamples }) => {\n  const [content, changeContent] = useState(\"\")\n  const [urlType, changeURLType] = useState(\"auto_detect\")\n  const [error, setError] = useState(\"\")\n  return (\n    <SimpleDialog\n      title=\"Paste Urls\"\n      open={open}\n      onClose={onClose}\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            try {\n              onAddSamples(\n                content\n                  .split(\"\\n\")\n                  .map((l) => l.trim())\n                  .filter(Boolean)\n                  .map((s) => {\n                    if (urlType === \"images\") {\n                      return { imageUrl: s }\n                    }\n                    let extension = s\n                      .replace(/\\?.*/g, \"\")\n                      .split(\".\")\n                      .slice(-1)[0]\n                    if (s.includes(\"gstatic.com/images\")) {\n                      extension = \"jpg\"\n                    }\n                    switch (extension.toLowerCase()) {\n                      case \"png\":\n                      case \"jpg\":\n                      case \"gif\":\n                      case \"jpeg\":\n                      case \"bmp\": {\n                        return { imageUrl: s }\n                      }\n                      case \"pdf\": {\n                        return { pdfUrl: s }\n                      }\n                      case \"mp3\":\n                      case \"wav\": {\n                        return { audioUrl: s }\n                      }\n                      default: {\n                        throw new Error(\n                          `extension not recognized: \"${extension}\" in \"${s}\"`\n                        )\n                        // TODO if the user doesn't care, return null (this\n                        // behavior could be enabled with textfield option)\n                      }\n                    }\n                  })\n                  .filter(Boolean)\n              )\n            } catch (e) {\n              setError(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      <SelectContainer>\n        <Select\n          options={autoDetectOptions}\n          defaultValue={autoDetectOptions[0]}\n          onChange={(opt) => {\n            changeURLType(opt.value)\n          }}\n        />\n      </SelectContainer>\n      {error && <ErrorText>{error}</ErrorText>}\n      <TextArea\n        onChange={(e, v) => changeContent(e.target.value)}\n        placeholder={\"Paste URLs here\\nOne URL per line\"}\n      />\n    </SimpleDialog>\n  )\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (sample) => {\n  var sampleName\n  if (!isEmpty(sample)) {\n    if (!isEmpty(sample.imageUrl)) {\n      sampleName = decodeURI(sample.imageUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.videoUrl)) {\n      sampleName = decodeURI(sample.videoUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.audioUrl)) {\n      sampleName = decodeURI(sample.audioUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n    if (!isEmpty(sample.pdfUrl)) {\n      sampleName = decodeURI(sample.pdfUrl).match(\n        `.*\\\\/(([^\\\\/\\\\\\\\&\\\\?]*)\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n      )\n    }\n  }\n  return sampleName\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (UrlOfAFile) => {\n  var typeOfFile = \"File\"\n  var fileExtension = UrlOfAFile.match(\n    `\\\\/?([^\\\\/\\\\\\\\&\\\\?]*\\\\.([a-zA-Z0-9]*))(\\\\?|$)`\n  )\n  if (!isEmpty(fileExtension)) {\n    fileExtension = fileExtension[2].toLowerCase()\n  }\n  if (\n    fileExtension === \"jpg\" ||\n    fileExtension === \"jpeg\" ||\n    fileExtension === \"png\" ||\n    fileExtension === \"ico\" ||\n    fileExtension === \"jpe\" ||\n    fileExtension === \"gif\"\n  )\n    typeOfFile = \"Image\"\n  if (fileExtension === \"mp4\" || fileExtension === \"mkv\") typeOfFile = \"Video\"\n  if (fileExtension === \"mp3\") typeOfFile = \"Audio\"\n  if (fileExtension === \"pdf\") typeOfFile = \"PDF\"\n  if (fileExtension === \"txt\") typeOfFile = \"Texte\"\n  return typeOfFile\n}\n","// @flow weak\n\nimport getSampleNameFromURL from \"./get-sample-name-from-url\"\nimport RecognizeFileExtension from \"./RecognizeFileExtension\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { setIn } from \"seamless-immutable\"\n\nexport const getSampleName = (sample) => {\n  var sampleName\n  if (!isEmpty(sample.sampleName)) {\n    sampleName = sample.sampleName\n  } else {\n    sampleName = getSampleNameFromURL(sample)[1]\n  }\n  return sampleName\n}\n\nexport const getSampleUrl = (sample) => {\n  return (\n    sample.imageUrl ||\n    sample.videoUrl ||\n    sample.audioUrl ||\n    sample.pdfUrl ||\n    undefined\n  )\n}\n\nexport const constructSample = (sampleName, url, annotation) => {\n  var type = RecognizeFileExtension(url)\n  if (type === \"Image\") {\n    return {\n      annotation: annotation,\n      imageUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"Video\") {\n    return {\n      annotation: annotation,\n      videoUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"Audio\") {\n    return {\n      annotation: annotation,\n      audioUrl: url,\n      sampleName: sampleName,\n    }\n  }\n  if (type === \"PDF\") {\n    return {\n      annotation: annotation,\n      pdfUrl: url,\n      sampleName: sampleName,\n    }\n  }\n}\nexport const createOneNewSample = constructSample\n\nexport const getSampleWithName = (dataset, sampleName) => {\n  if (!dataset || !dataset.samples || !sampleName) return null\n  const { samples } = dataset\n  for (var i = 0; i < samples.length; i++) {\n    if (!isEmpty(samples[i])) {\n      const nameToSearch = getSampleNameFromURL(samples[i])\n      if (typeof samples[i].sampleName !== \"undefined\") {\n        nameToSearch[1] = samples[i].sampleName\n      }\n      if (nameToSearch[1] === sampleName) {\n        return samples[i]\n      }\n    }\n  }\n  return null\n}\nexport const getSampleWithThisSampleName = getSampleWithName\n\nexport const addNamesToSamples = (dataset) => {\n  if (!dataset || !dataset.samples) return\n  for (var i = 0; i < dataset.samples.length; i++) {\n    if (isEmpty(dataset.samples[i])) continue\n    var oldsample = dataset.samples[i]\n    var sampleName\n    if (!isEmpty(oldsample.document)) {\n      // Deal with the exception of the text file (they don't have url)\n      sampleName = [\n        oldsample.document,\n        \"sample\" + i.toString() + \".txt\",\n        \"sample\",\n        \"txt\",\n      ]\n    } else {\n      sampleName = getSampleNameFromURL(oldsample)\n      sampleName = renameSampleFromUrl(dataset.samples, oldsample, sampleName)\n    }\n    oldsample = setIn(oldsample, [\"sampleName\"], sampleName[1])\n    dataset = setIn(dataset, [\"samples\", i], oldsample)\n  }\n  return dataset\n}\nexport const setSamplesName = addNamesToSamples\n\nexport const renameSampleFromUrl = (samples, sampleToChange, sampleName) => {\n  var boolName = true\n  var v = 1\n  while (boolName) {\n    var sampletocompare1 = getSampleWithThisSampleName(sampleName[1], samples)\n    if (\n      sampletocompare1 !== null &&\n      getSampleUrl(sampletocompare1) !== getSampleUrl(sampleToChange)\n    ) {\n      if (isEmpty(sampleName[2].match(\"(.*)\\\\([0-9]*\\\\)$\"))) {\n        sampleName[1] =\n          sampleName[2] + \"(\" + v.toString() + \").\" + sampleName[3]\n      } else {\n        sampleName[1] =\n          sampleName[2].match(\"(.*)\\\\([0-9]*\\\\)$\")[1] +\n          \"(\" +\n          v.toString() +\n          \")\" +\n          +\".\" +\n          sampleName[3]\n      }\n      v++\n    } else {\n      boolName = false\n    }\n  }\n  return sampleName\n}\n\nexport const eraseAnnotation = (samples) => {\n  var samplesWithoutAnnotation = []\n  for (let i = 0; i < samples.length; i++) {\n    let Newsample = samples[i]\n    if (!isEmpty(Newsample.annotation)) {\n      Newsample = setIn(Newsample, [\"annotation\"], null)\n    }\n    samplesWithoutAnnotation.push(Newsample)\n  }\n  return samplesWithoutAnnotation\n}\n\nexport const concatSample = (actualSamples, newSamples, annotationToKeep) => {\n  var Tabsamples = actualSamples\n  if (annotationToKeep === \"incoming\") {\n    Tabsamples = eraseAnnotation(actualSamples)\n  }\n\n  var Tabsamples2 = newSamples\n  if (annotationToKeep === \"current\") {\n    Tabsamples2 = eraseAnnotation(newSamples)\n  }\n  var concatSamples = Tabsamples.concat(Tabsamples2)\n  return concatSamples\n}\n\nexport const getFileDifferences = (objectOfRef, objectToCheck) => {\n  var resultSet = {\n    fileName: false,\n    content: {\n      interface: {\n        type: false,\n        labels: false,\n        regionTypesAllowed: false,\n      },\n      samples: false,\n    },\n    id: false,\n    mode: false,\n    any: false,\n  }\n  // Check if the object to check exist if not return false\n  if (isEmpty(objectToCheck)) return resultSet\n\n  // Check if the object of reference exist if not return true\n  if (isEmpty(objectOfRef)) {\n    resultSet.fileName = true\n    resultSet.content.interface.type = true\n    resultSet.content.interface.labels = true\n    resultSet.content.interface.regionTypesAllowed = true\n    resultSet.content.samples = true\n    resultSet.id = true\n    resultSet.mode = true\n    resultSet.any = true\n    return resultSet\n  }\n\n  if (objectOfRef !== objectToCheck) {\n    resultSet.any = true\n  } else {\n    return resultSet\n  }\n\n  // Check if the id doesn't exist or have change\n  if (!isEmpty(objectToCheck.id)) {\n    if (isEmpty(objectOfRef.id)) resultSet.id = true\n    else if (objectToCheck.id !== objectOfRef.id) resultSet.id = true\n  }\n\n  // Check if the content doesn't exist or have change\n  if (!isEmpty(objectToCheck.content)) {\n    if (isEmpty(objectOfRef.content)) {\n      resultSet.content.interface.type = true\n      resultSet.content.interface.labels = true\n      resultSet.content.interface.regionTypesAllowed = true\n      resultSet.content.samples = true\n    } else if (objectToCheck.content !== objectOfRef.content) {\n      //Check if the interface doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.interface)) {\n        if (isEmpty(objectOfRef.content.interface)) {\n          resultSet.content.interface.type = true\n          resultSet.content.interface.labels = true\n          resultSet.content.interface.regionTypesAllowed = true\n        } else if (\n          objectToCheck.content.interface !== objectOfRef.content.interface\n        ) {\n          //Check if the type doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.type)) {\n            if (isEmpty(objectOfRef.content.interface.type)) {\n              resultSet.content.interface.type = true\n            } else if (\n              objectToCheck.content.interface.type !==\n              objectOfRef.content.interface.type\n            ) {\n              resultSet.content.interface.type = true\n            }\n          }\n          //Check if the labels doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.labels)) {\n            if (isEmpty(objectOfRef.content.interface.labels)) {\n              resultSet.content.interface.labels = true\n            } else if (\n              objectToCheck.content.interface.labels !==\n              objectOfRef.content.interface.labels\n            ) {\n              resultSet.content.interface.labels = true\n            }\n          }\n          //Check if the regionsTypesAllowed doesn't exist or have change\n          if (!isEmpty(objectToCheck.content.interface.regionTypesAllowed)) {\n            if (isEmpty(objectOfRef.content.interface.regionTypesAllowed)) {\n              resultSet.content.interface.regionTypesAllowed = true\n            } else if (\n              objectToCheck.content.interface.regionTypesAllowed !==\n              objectOfRef.content.interface.regionTypesAllowed\n            ) {\n              resultSet.content.interface.regionTypesAllowed = true\n            }\n          }\n        }\n      }\n      //Check if the samples doesn't exist or have change\n      if (!isEmpty(objectToCheck.content.samples)) {\n        if (isEmpty(objectOfRef.content.samples)) {\n          resultSet.content.samples = true\n        } else if (\n          objectToCheck.content.samples !== objectOfRef.content.samples\n        ) {\n          resultSet.content.samples = true\n        }\n      }\n    }\n  }\n\n  // Check if the mode doesn't exist or have change\n  if (!isEmpty(objectToCheck.mode)) {\n    if (isEmpty(objectOfRef.mode)) resultSet.mode = true\n    else if (objectToCheck.mode !== objectOfRef.mode) resultSet.mode = true\n  }\n\n  // Check if the fileName doesn't exist or have change\n  if (!isEmpty(objectToCheck.fileName)) {\n    if (isEmpty(objectOfRef.fileName)) resultSet.fileName = true\n    else if (objectToCheck.fileName !== objectOfRef.fileName)\n      resultSet.fileName = true\n  }\n  //Default behavior return false\n  return resultSet\n}\n\nexport const fileHasChanged = getFileDifferences\n","import isEmpty from \"lodash/isEmpty\"\nimport Amplify, { Storage } from \"aws-amplify\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nfunction CheckIfAnnotationExist(result, folderToFetch) {\n  return result.find(\n    (element) => element.key === `${folderToFetch}/annotations/annotations.json`\n  )\n}\n\nfunction GetSampleFromAnnotation(json, samples) {\n  if (isEmpty(json.content.samples)) return\n  var newSamples = []\n  for (var i = 0; i < json.content.samples.length; i++) {\n    var sampleName = datasetHelper.getSampleName(json.content.samples[i])\n    var annotation = json.content.samples[i].annotation\n    var sampleFound = datasetHelper.getSampleWithThisSampleName(\n      sampleName,\n      samples\n    )\n    var url\n    if (sampleFound === null) {\n      url = datasetHelper.getSampleUrl(samples)\n    } else {\n      url = datasetHelper.getSampleUrl(sampleFound)\n    }\n    newSamples.push(\n      datasetHelper.createOneNewSample(sampleName, url, annotation)\n    )\n  }\n  json.content.samples = newSamples\n}\n\nexport default async (result, samples, folderToFetch, authConfig) => {\n  Amplify.configure(authConfig)\n\n  var json = null\n  if (CheckIfAnnotationExist(result, folderToFetch)) {\n    await Storage.get(`${folderToFetch}/annotations/annotations.json`, {\n      expires: 24 * 60 * 60 * 2000,\n      level: \"private\",\n    })\n      .then(async (result) => {\n        await fetch(result).then(async (data) => {\n          return await data.json().then(async (result) => {\n            if (typeof result.content === \"undefined\") return\n            json = result\n            GetSampleFromAnnotation(json, samples)\n          })\n        })\n      })\n      .catch((err) => {\n        console.log(\"error getting link for s3 image\", err)\n        return null\n      })\n  }\n  return json\n}\n","import RecognizeFileExtension from \"../../utils/RecognizeFileExtension\"\nimport Amplify, { Storage } from \"aws-amplify\"\n\nasync function setUrl(result, configImport) {\n  if (configImport.loadProjectIsSelected) {\n    if (RecognizeFileExtension(result) === \"Image\") {\n      return { imageUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"Video\") {\n      return { videoUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"Audio\") {\n      return { audioUrl: `${result}` }\n    } else if (RecognizeFileExtension(result) === \"PDF\") {\n      return { pdfUrl: `${result}` }\n    }\n  } else {\n    if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Image\"\n    ) {\n      return { imageUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Video\"\n    ) {\n      return { videoUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Audio\"\n    ) {\n      return { audioUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"PDF\"\n    ) {\n      return { pdfUrl: `${result}` }\n    } else if (\n      RecognizeFileExtension(result) === configImport.typeOfFileToLoad &&\n      configImport.typeOfFileToLoad === \"Texte\"\n    ) {\n      var texte = await fetchTextInFile(result)\n      return { document: `${texte}` }\n    }\n  }\n}\nasync function fetchTextInFile(urlSource) {\n  var proxyUrl = \"https://cors-anywhere.herokuapp.com/\"\n  var response\n  var url\n  url = proxyUrl + urlSource\n  response = await fetch(url, {\n    method: \"GET\",\n  }).catch((error) => {\n    console.log(\"Looks like there was a problem: \\n\", error)\n  })\n  const texte = await response.text()\n  return texte\n}\nexport default async (result, folderToFetch, configImport, authConfig) => {\n  Amplify.configure(authConfig)\n  var samples = []\n  for (let i = 0; i < result.length; i++) {\n    if (result[i].key.match(`(${folderToFetch}/data).*(\\\\.).*`)) {\n      await Storage.get(result[i].key, {\n        expires: 24 * 60 * 60 * 2000,\n        level: \"private\",\n      })\n        .then(async (result) => {\n          samples.push(await setUrl(result, configImport))\n        })\n        .catch((err) => {\n          console.log(\"error getting link for s3 image\", err)\n          return null\n        })\n    }\n  }\n  return samples\n}\n","import JAC from \"jac-format\"\n\nconst alternativeSpellings = {\n  imageUrl: [\n    \"image_url\",\n    \"image_urls\",\n    \"image\",\n    \"image_src\",\n    \"img_url\",\n    \"img\",\n    \"img_src\",\n  ],\n  document: [\"text\"],\n}\nconst badSpellingMap = {}\nfor (const [correct, badSpellings] of Object.entries(alternativeSpellings)) {\n  for (const badSpelling of badSpellings) {\n    badSpellingMap[badSpelling] = correct\n  }\n}\n\nconst convertTaskDatumMistakes = (sample) => {\n  for (const key in sample) {\n    const normalizedKey = key.toLowerCase().replace(/ /g, \"_\")\n    const correction = badSpellingMap[normalizedKey]\n    if (correction) {\n      sample[correction] = sample[key]\n      delete sample[key]\n    }\n  }\n  return sample\n}\n\nexport default (csv) => {\n  const json = JAC.fromCSV(csv, { derivePath: () => \"samples.*\" })\n  if (!json.samples) throw new Error(\"No samples\")\n  return {\n    interface: json.interface,\n    taskOutput: json.samples.map((sample) => sample.output),\n    samples: json.samples.map(convertTaskDatumMistakes).map((sample) => {\n      delete sample.output\n      return sample\n    }),\n  }\n}\n","import isEmpty from \"lodash/isEmpty\"\nexport default (typeAuthorize, file) => {\n  function interfaceFileType(type) {\n    if (\n      type === \"image_classification\" ||\n      type === \"image_segmentation\" ||\n      type === \"composite\"\n    )\n      return \"Image\"\n    if (type === \"video_segmentation\") return \"Video\"\n    if (type === \"audio_transcription\") return \"Audio\"\n    if (type === \"data_entry\") return \"PDF\"\n    if (type === \"text_entity_recognition\" || type === \"text_classification\")\n      return \"Texte\"\n    if (isEmpty(type)) return \"Empty\"\n    return \"File\"\n  }\n\n  function typesamplesSample(samples) {\n    if (isEmpty(samples) || isEmpty(samples[0])) return \"Empty\"\n    if (!isEmpty(samples[0].imageUrl)) return \"Image\"\n    if (!isEmpty(samples[0].videoUrl)) return \"Video\"\n    if (!isEmpty(samples[0].audioUrl)) return \"Audio\"\n    if (!isEmpty(samples[0].pdfUrl)) return \"PDF\"\n    if (!isEmpty(samples[0].document)) return \"Texte\"\n    return \"File\"\n  }\n  var result = [null, null]\n  if (isEmpty(file)) return false\n  result[0] = interfaceFileType(file.content.interface.type)\n  result[1] = typesamplesSample(file.content.samples)\n  if (typeAuthorize.includes(result[0]) && typeAuthorize.includes(result[1]))\n    return true\n  return false\n}\n","import { setIn } from \"seamless-immutable\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nimport isEmpty from \"lodash/isEmpty\"\nexport default (file, json, configImport) => {\n  var contentOldFile = file.content\n  contentOldFile = setIn(\n    contentOldFile,\n    [\"samples\"],\n    datasetHelper.concatSample(\n      file.content.samples,\n      json.content.samples,\n      configImport.annotationToKeep\n    )\n  )\n\n  contentOldFile = setIn(contentOldFile, [\"interface\"], json.content.interface)\n  file = setIn(file, [\"content\"], contentOldFile)\n  if (isEmpty(file.fileName) || file.fileName === \"unnamed\")\n    file = setIn(file, [\"fileName\"], json.fileName)\n  return file\n}\n","// @flow weak\nimport React, { useState, useEffect, useRef, useCallback } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport DataTable from \"react-data-table-component\"\nimport Radio from \"@material-ui/core/Radio\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport FormLabel from \"@material-ui/core/FormLabel\"\nimport RadioGroup from \"@material-ui/core/RadioGroup\"\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\"\nimport { Storage } from \"aws-amplify\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { useLocalStorage } from \"react-use\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport SettingsIcon from \"@material-ui/icons/Settings\"\nimport StorageIcon from \"@material-ui/icons/Storage\"\nimport Button from \"@material-ui/core/Button\"\nimport GetAnnotationFromAFolderAWS from \"./get-annotation-from-aws\"\nimport GetImageFromAFolderAWS from \"./get-images-from-aws\"\nimport setButtonNameAddSample from \"./set-button-add-sample-name\"\nimport * as datasetHelper from \"../../utils//dataset-helper\"\nimport setTypeOfFileToLoadAndDisable from \"./set-type-of-file-to-load-and-disable\"\nimport initConfigImport from \"./init-config-import\"\nimport setAnnotationFromAws from \"./set-annotation-from-aws\"\nimport useAuth from \"../../utils/auth-handlers/use-auth.js\"\n\nconst selectedStyle = { color: \"DodgerBlue\" }\nconst tableStyle = {\n  marginLeft: \"auto\",\n  marginRight: \"auto\",\n  width: \"100%\",\n}\nconst expandedDataColumns = [\n  { name: \"Data\", selector: \"data\", sortable: true },\n  { name: \"Last Modified\", selector: \"lastModified\", sortable: true },\n]\n\nconst expandedAnnotationsColumns = [\n  { name: \"Annotations\", selector: \"annotation\" },\n  { name: \"Last Modified\", selector: \"lastModified\", sortable: true },\n]\n\nconst columns = [{ name: \"Projects\", selector: \"folder\", sortable: true }]\n\nconst customStyles = {\n  headCells: {\n    style: {\n      paddingLeft: \"10px\",\n      \"font-weight\": \"bold\",\n    },\n  },\n  cells: {\n    style: {\n      paddingLeft: \"25px\",\n    },\n  },\n}\n\nconst ExpandedRow = ({ data }) => {\n  const { rowData, rowAnnotations } = data\n  return (\n    <>\n      <DataTable\n        style={{\n          boxSizing: \"border-box\",\n          paddingLeft: \"50px\",\n          paddingRight: \"10px\",\n        }}\n        dense\n        striped\n        noHeader\n        columns={expandedAnnotationsColumns}\n        data={rowAnnotations}\n        noDataComponent='Make sure the project has \"annotations\" folder'\n        pagination={rowData.length > 10}\n        paginationPerPage={10}\n        paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n        customStyles={customStyles}\n      />\n      <DataTable\n        style={{\n          boxSizing: \"border-box\",\n          paddingLeft: \"50px\",\n          paddingRight: \"10px\",\n        }}\n        dense\n        striped\n        noHeader\n        columns={expandedDataColumns}\n        data={rowData}\n        noDataComponent={'Make sure the project has \"data\" folder'}\n        pagination={rowData.length > 10}\n        paginationPerPage={10}\n        paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n        customStyles={customStyles}\n      />\n    </>\n  )\n}\n\nexport default ({ file, open, onClose, onAddSamples, onChangeFile }) => {\n  const { authProvider, user, authConfig } = useAuth()\n  const [textButtonAdd, changetextButtonAdd] = useState(\"Add Samples\")\n  const [s3Content, changeS3Content] = useState(null)\n  const [dataForTable, changeDataForTable] = useState(null)\n  const [folderToFetch, setFolderToFetch] = useState(\"\")\n\n  const [configImport, setConfigImport] = useLocalStorage(\n    \"configImport\",\n    initConfigImport(file)\n  )\n  const lastObjectRef = useRef({})\n  const hasProjectStarted = useCallback(() => {\n    if (authProvider !== \"cognito\") return\n    if (\n      isEmpty(file) ||\n      isEmpty(file.content) ||\n      (isEmpty(file.content.interface) && isEmpty(file.content.samples))\n    )\n      return false\n    return true\n  }, [file, authProvider])\n\n  useEffect(() => {\n    if (authProvider !== \"cognito\") return\n    if (file === lastObjectRef.current) return\n    var configToSet = configImport\n    var changes = datasetHelper.fileHasChanged(lastObjectRef.current, file)\n    if (changes.content.interface.type || changes.content.samples) {\n      if (lastObjectRef.current !== {})\n        configToSet = setTypeOfFileToLoadAndDisable(configToSet, file)\n    }\n    setConfigImport({\n      ...configToSet,\n      projectStarted: hasProjectStarted(),\n      loadProjectIsSelected: hasProjectStarted()\n        ? false\n        : setConfigImport.loadProjectIsSelected,\n    })\n    lastObjectRef.current = file\n  }, [file, configImport, setConfigImport, hasProjectStarted, authProvider])\n\n  const handleAddSample = async () => {\n    var samples = await GetImageFromAFolderAWS(\n      s3Content,\n      folderToFetch,\n      configImport,\n      authConfig\n    )\n    var json = null\n    if (configImport.loadProjectIsSelected) {\n      json = await GetAnnotationFromAFolderAWS(\n        s3Content,\n        samples,\n        folderToFetch,\n        authConfig\n      )\n    }\n\n    if (\n      isEmpty(json) ||\n      isEmpty(json.content) ||\n      isEmpty(json.content.samples) ||\n      isEmpty(json.fileName)\n    ) {\n      onAddSamples(samples)\n    } else {\n      file = setAnnotationFromAws(file, json, configImport)\n      onChangeFile(file, true)\n      onAddSamples([])\n    }\n  }\n\n  const handleRowSelected = (whatsChanging) => {\n    if (!isEmpty(whatsChanging.selectedRows[0])) {\n      setFolderToFetch(whatsChanging.selectedRows[0].folder)\n      changeDataForTable((prevState) =>\n        prevState.map((row) => {\n          if (whatsChanging.selectedRows[0].id === row.id) {\n            row.isSelected = true\n          } else {\n            row.isSelected = false\n          }\n          return row\n        })\n      )\n    } else {\n      setFolderToFetch(null)\n      changeDataForTable((prevState) =>\n        prevState.map((row) => {\n          row.isSelected = false\n          return row\n        })\n      )\n    }\n  }\n  function changeLoadProjectIsSelected() {\n    setConfigImport({\n      ...configImport,\n      loadProjectIsSelected: !configImport.loadProjectIsSelected,\n    })\n  }\n\n  useEffect(() => {\n    var textToSet = setButtonNameAddSample(\n      configImport.loadProjectIsSelected,\n      configImport.typeOfFileToLoad,\n      dataForTable\n    )\n    changetextButtonAdd(textToSet)\n  }, [\n    configImport.loadProjectIsSelected,\n    configImport.typeOfFileToLoad,\n    dataForTable,\n  ])\n\n  useEffect(() => {\n    if (isEmpty(user)) {\n      changeS3Content(null)\n    } else if (!isEmpty(authConfig)) {\n      Storage.list(\"\", { level: \"private\" })\n        .then((result) => {\n          changeS3Content(result)\n          let _dataForTable = result\n            .filter((obj) => {\n              return obj.key.endsWith(\"/\") & (obj.key.split(\"/\").length === 2)\n            })\n            .map((obj, index) => {\n              const folder = obj.key.split(\"/\")[0]\n              const rowDataContent = result\n                .filter((obj) => {\n                  return (\n                    obj.key.startsWith(`${folder}/data/`) &\n                    !obj.key.endsWith(\"/\")\n                  )\n                })\n                .map((obj) => {\n                  return {\n                    data: obj.key.split(\"/data/\")[1],\n                    lastModified: obj.lastModified.toDateString(),\n                  }\n                })\n              const rowAnnotationsContent = result\n                .filter((obj) => {\n                  return (\n                    obj.key.startsWith(`${folder}/annotations/`) &\n                    !obj.key.endsWith(\"/\")\n                  )\n                })\n                .map((obj) => {\n                  return {\n                    annotation: obj.key.split(\"/annotations/\")[1],\n                    lastModified: obj.lastModified.toDateString(),\n                  }\n                })\n              return {\n                id: `${index}`,\n                folder: folder,\n                rowData: rowDataContent,\n                rowAnnotations: rowAnnotationsContent,\n                isSelected: true,\n              }\n            })\n          changeDataForTable(_dataForTable)\n        })\n        .catch((err) => console.log(err))\n    }\n  }, [user, authConfig])\n  return (\n    <SimpleDialog\n      title=\"Select Project\"\n      open={open}\n      onClose={onClose}\n      actions={[\n        {\n          text: textButtonAdd,\n          onClick: () => {\n            handleAddSample()\n          },\n          disabled: configImport.contentDialogBoxIsSetting,\n        },\n      ]}\n    >\n      <table style={tableStyle}>\n        <tbody>\n          <tr>\n            <th>\n              {configImport.loadProjectIsSelected ? (\n                <Button\n                  style={selectedStyle}\n                  onClick={changeLoadProjectIsSelected}\n                  disabled\n                >\n                  Load Project\n                </Button>\n              ) : (\n                <Button\n                  onClick={changeLoadProjectIsSelected}\n                  disabled={configImport.projectStarted}\n                >\n                  Load Project\n                </Button>\n              )}\n              {configImport.loadProjectIsSelected ? (\n                <Button onClick={changeLoadProjectIsSelected}>\n                  Load Samples\n                </Button>\n              ) : (\n                <Button\n                  style={selectedStyle}\n                  onClick={changeLoadProjectIsSelected}\n                  disabled\n                >\n                  Load Samples\n                </Button>\n              )}\n              <IconButton\n                onClick={() => {\n                  setConfigImport({\n                    ...configImport,\n                    contentDialogBoxIsSetting: !configImport.contentDialogBoxIsSetting,\n                  })\n                }}\n              >\n                {configImport.contentDialogBoxIsSetting ? (\n                  <StorageIcon></StorageIcon>\n                ) : (\n                  <SettingsIcon></SettingsIcon>\n                )}\n              </IconButton>\n            </th>\n          </tr>\n\n          {!configImport.contentDialogBoxIsSetting ? (\n            !isEmpty(dataForTable) && (\n              <tr>\n                <th>\n                  <DataTable\n                    expandableRows\n                    expandableRowsComponent={<ExpandedRow />}\n                    selectableRows\n                    selectableRowsHighlight\n                    selectableRowsNoSelectAll\n                    selectableRowsComponent={Radio}\n                    dense\n                    noHeader\n                    noTableHead\n                    columns={columns}\n                    onSelectedRowsChange={handleRowSelected}\n                    selectableRowSelected={(row) => row.isSelected}\n                    data={dataForTable}\n                    pagination={dataForTable.length > 10}\n                    paginationPerPage={10}\n                    paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n                  />\n                </th>\n              </tr>\n            )\n          ) : (\n            <tr>\n              <th>\n                {configImport.loadProjectIsSelected ? (\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">\n                      Annotation processing\n                    </FormLabel>\n                    <RadioGroup\n                      aria-label=\"option1\"\n                      onChange={(event) => {\n                        setConfigImport({\n                          ...configImport,\n                          annotationToKeep: event.target.value,\n                        })\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"both\"\n                        control={<Radio />}\n                        label=\"Keep both annotations\"\n                        checked={configImport.annotationToKeep === \"both\"}\n                      />\n                      <FormControlLabel\n                        value=\"incoming\"\n                        control={<Radio />}\n                        label=\"Keep incoming annotations\"\n                        checked={configImport.annotationToKeep === \"incoming\"}\n                      />\n                      <FormControlLabel\n                        value=\"current\"\n                        control={<Radio />}\n                        label=\"Keep current annotations\"\n                        checked={configImport.annotationToKeep === \"current\"}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                ) : (\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Choose file type</FormLabel>\n                    <RadioGroup\n                      aria-label=\"option2\"\n                      onChange={(event) => {\n                        setConfigImport({\n                          ...configImport,\n                          typeOfFileToLoad: event.target.value,\n                        })\n                      }}\n                    >\n                      <FormControlLabel\n                        value=\"Image\"\n                        control={<Radio />}\n                        label=\"Load image file\"\n                        disabled={configImport.typeOfFileToDisable.Image}\n                        checked={configImport.typeOfFileToLoad === \"Image\"}\n                      />\n                      <FormControlLabel\n                        value=\"Video\"\n                        control={<Radio />}\n                        label=\"Load video file\"\n                        disabled={configImport.typeOfFileToDisable.Video}\n                        checked={configImport.typeOfFileToLoad === \"Video\"}\n                      />\n                      <FormControlLabel\n                        value=\"Audio\"\n                        control={<Radio />}\n                        label=\"Load audio file\"\n                        disabled={configImport.typeOfFileToDisable.Audio}\n                        checked={configImport.typeOfFileToLoad === \"Audio\"}\n                      />\n                      <FormControlLabel\n                        value=\"PDF\"\n                        control={<Radio />}\n                        label=\"Load PDF file\"\n                        disabled={configImport.typeOfFileToDisable.PDF}\n                        checked={configImport.typeOfFileToLoad === \"PDF\"}\n                      />\n                      <FormControlLabel\n                        value=\"Texte\"\n                        control={<Radio />}\n                        label=\"Load texte file\"\n                        disabled={configImport.typeOfFileToDisable.Texte}\n                        checked={configImport.typeOfFileToLoad === \"Texte\"}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                )}\n              </th>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </SimpleDialog>\n  )\n}\n","import checkInterfaceAndsamples from \"./check-interface-and-sample-type\"\nexport default (file) => {\n  return {\n    annotationToKeep: \"both\",\n    typeOfFileToLoad: checkInterfaceAndsamples([\"Image\", \"Empty\"], file)\n      ? \"Image\"\n      : checkInterfaceAndsamples([\"Video\", \"Empty\"], file)\n      ? \"Video\"\n      : checkInterfaceAndsamples([\"Audio\", \"Empty\"], file)\n      ? \"Audio\"\n      : checkInterfaceAndsamples([\"PDF\", \"Empty\"], file)\n      ? \"PDF\"\n      : checkInterfaceAndsamples([\"Texte\", \"Empty\"], file)\n      ? \"Texte\"\n      : \"None\",\n    typeOfFileToDisable: {\n      Image: checkInterfaceAndsamples([\"Image\", \"Empty\"], file) ? false : true,\n      Video: checkInterfaceAndsamples([\"Video\", \"Empty\"], file) ? false : true,\n      Audio: checkInterfaceAndsamples([\"Audio\", \"Empty\"], file) ? false : true,\n      PDF: checkInterfaceAndsamples([\"PDF\", \"Empty\"], file) ? false : true,\n      Texte: checkInterfaceAndsamples([\"Texte\", \"Empty\"], file) ? false : true,\n    },\n    loadProjectIsSelected: true,\n    contentDialogBoxIsSetting: false,\n    projectStarted: false,\n  }\n}\n","import isEmpty from \"lodash/isEmpty\"\nimport checkInterfaceAndsamples from \"./check-interface-and-sample-type\"\nexport default (configImport, file) => {\n  return {\n    ...configImport,\n    typeOfFileToLoad:\n      !isEmpty(configImport) &&\n      !isEmpty(configImport.typeOfFileToLoad) &&\n      checkInterfaceAndsamples([configImport.typeOfFileToLoad, \"Empty\"], file)\n        ? configImport.typeOfFileToLoad\n        : checkInterfaceAndsamples([\"Image\", \"Empty\"], file)\n        ? \"Image\"\n        : checkInterfaceAndsamples([\"Video\", \"Empty\"], file)\n        ? \"Video\"\n        : checkInterfaceAndsamples([\"Audio\", \"Empty\"], file)\n        ? \"Audio\"\n        : checkInterfaceAndsamples([\"PDF\", \"Empty\"], file)\n        ? \"PDF\"\n        : checkInterfaceAndsamples([\"Texte\", \"Empty\"], file)\n        ? \"Texte\"\n        : \"None\",\n    typeOfFileToDisable: {\n      Image: checkInterfaceAndsamples([\"Image\", \"Empty\"], file) ? false : true,\n      Video: checkInterfaceAndsamples([\"Video\", \"Empty\"], file) ? false : true,\n      Audio: checkInterfaceAndsamples([\"Audio\", \"Empty\"], file) ? false : true,\n      PDF: checkInterfaceAndsamples([\"PDF\", \"Empty\"], file) ? false : true,\n      Texte: checkInterfaceAndsamples([\"Texte\", \"Empty\"], file) ? false : true,\n    },\n  }\n}\n","import RecognizeFileExtension from \"../../utils/RecognizeFileExtension\"\nimport isEmpty from \"lodash/isEmpty\"\nexport default (loadProjectIsSelected, typeOfFileToLoad, dataForTable) => {\n  var numberOfSamples = 0\n  var textToSet = \"\"\n  var folderName\n  if (!isEmpty(dataForTable)) {\n    for (var i = 0; i < dataForTable.length; i++) {\n      if (dataForTable[i].isSelected) {\n        folderName = dataForTable[i].folder\n        if (!isEmpty(dataForTable[i].rowData)) {\n          for (var y = 0; y < dataForTable[i].rowData.length; y++) {\n            if (\n              RecognizeFileExtension(dataForTable[i].rowData[y].data) ===\n              typeOfFileToLoad\n            ) {\n              numberOfSamples++\n            }\n          }\n        }\n      }\n    }\n    if (loadProjectIsSelected) {\n      textToSet = \"Load \" + folderName\n    } else {\n      textToSet = \"Add \" + numberOfSamples + \" \" + typeOfFileToLoad\n    }\n  }\n  return textToSet\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useEventCallback from \"use-event-callback\"\nimport { useDropzone } from \"react-dropzone\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\n\nconst UploadHover = styled(\"div\")({\n  fontSize: 24,\n  color: colors.grey[600],\n  textAlign: \"center\",\n  padding: 48,\n})\n\nconst emptyFunc = () => null\n\nexport default ({ content, onChangeContent, placeholder }) => {\n  const onDrop = useEventCallback((acceptedFiles) => {\n    const reader = new FileReader()\n    reader.onload = (e) => {\n      const fileContent = e.target.result\n      onChangeContent(fileContent)\n    }\n    reader.readAsText(acceptedFiles[0])\n  })\n\n  const [lastClickTime, changeLastClickTime] = useState(0)\n  const onClick = useEventCallback((e) => {\n    if (Date.now() - lastClickTime < 400) {\n      getRootProps().onClick(e)\n    }\n    changeLastClickTime(Date.now())\n  })\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div {...getRootProps()} onClick={emptyFunc}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <UploadHover>Drop the text or csv file here.</UploadHover>\n      ) : (\n        <TextArea\n          value={content}\n          onChange={(e, v) => onChangeContent(e.target.value)}\n          onClick={onClick}\n          placeholder={placeholder}\n        />\n      )}\n    </div>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport TextAreaWithUpload from \"../TextAreaWithUpload\"\n\nconst ImportTextSnippetsDialog = ({ open, onClose, onAddSamples }) => {\n  const [content, changeContent] = useState(\"\")\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Import Text Snippets\"\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            onAddSamples(\n              content\n                .split(\"\\n\")\n                .map((l) => l.trim())\n                .filter(Boolean)\n                .map((s) => ({ document: s }))\n            )\n          },\n        },\n      ]}\n    >\n      <TextAreaWithUpload\n        content={content}\n        onChangeContent={changeContent}\n        placeholder={\n          \"Paste Snippets here\\nOne snippet per line.\\n\\nYou can also drag a text or csv file here (double click to open file dialog)\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n\nexport default ImportTextSnippetsDialog\n","import React from \"react\"\nimport SvgIcon from \"@material-ui/core/SvgIcon\"\n\nexport default (props) => {\n  return (\n    <SvgIcon {...props} viewBox=\"0 0 50 50\">\n      <g id=\"Working\">\n        <path\n          style={props.color}\n          d=\"M21.17,42.88H13.76a1,1,0,0,1-1-1v-7.5a1,1,0,0,1,1-1h7.41a1,1,0,0,1,1,1v7.5A1,1,0,0,1,21.17,42.88Zm-6.41-2h5.41v-5.5H14.76Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M31,39.17a5.24,5.24,0,1,1,5.22-5.24A5.23,5.23,0,0,1,31,39.17Zm0-8.48a3.24,3.24,0,1,0,3.22,3.24A3.23,3.23,0,0,0,31,30.69Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M20.22,29.75H10.85a1,1,0,0,1-.87-.51,1,1,0,0,1,0-1l4.69-7.82a1,1,0,0,1,1.71,0l4.69,7.82a1,1,0,0,1,0,1A1,1,0,0,1,20.22,29.75Zm-7.61-2h5.85l-2.92-4.87Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,48.5c-6.39,0-16.5-1.45-16.63-5.34L2.51,9.55a1,1,0,0,1,2-.39c.5,1.93,8.05,4.63,19.2,4.63s18.69-2.7,19.19-4.63a1,1,0,0,1,2,.39L40.29,43.16c0,1.32-1.22,2.45-3.51,3.36a22.87,22.87,0,0,1-3.12.94A46,46,0,0,1,23.67,48.5ZM4.9,12.27,9,43s0,.09,0,.13c0,1.18,5.69,3.42,14.63,3.42a43.75,43.75,0,0,0,9.54-1A21,21,0,0,0,36,44.66c1.85-.73,2.26-1.39,2.26-1.58V43l4.14-30.68c-3.86,2.3-11.64,3.52-18.77,3.52S8.75,14.57,4.9,12.27Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,15.79c-9.47,0-20.1-2.15-21.14-6.12,0-.05,0-.09,0-.13l0-.41a.62.62,0,0,1,0-.13c0-4.42,11.18-7.5,21.22-7.5S44.88,4.58,44.88,9v.13l-.06.41a.69.69,0,0,1,0,.13C43.76,13.64,33.13,15.79,23.67,15.79ZM4.48,9.21c.62,1.93,8.14,4.58,19.19,4.58s18.56-2.65,19.18-4.58l0-.27C42.75,7,34.86,3.5,23.67,3.5S4.59,7,4.45,8.94Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M44.93,29.62c-4.76,0-15.18-4.71-21.7-7.91l.88-1.8c9,4.42,19.6,8.52,21.41,7.75-.14-.29-.81-1.19-4-2.92l-.16-.1,1-1.74.15.09c3.21,1.77,4.74,3.13,5,4.41a1.82,1.82,0,0,1-.4,1.52A2.77,2.77,0,0,1,44.93,29.62Z\"\n        />\n        <path\n          style={props.color}\n          d=\"M23.67,23a2.17,2.17,0,1,1,2.17-2.17A2.18,2.18,0,0,1,23.67,23Zm0-2.34a.17.17,0,0,0-.18.17c0,.19.35.19.35,0A.17.17,0,0,0,23.67,20.64Z\"\n        />\n      </g>\n    </SvgIcon>\n  )\n}\n","import React, { useState, useEffect, useCallback } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Button from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { useTranslation } from \"react-i18next\"\n\nconst ExplainText = styled(\"div\")({\n  marginTop: 8,\n  marginBottom: 8,\n})\nconst GoogleDriveScreenshot = styled(\"img\")({\n  width: \"100%\",\n  boxSizing: \"border-box\",\n})\n\n// Example for Google OAuth\n// https://developers.google.com/drive/api/v3/picker\n\nconst credentials = {\n  web: {\n    client_id:\n      process.env.REACT_APP_GOOGLE_DRIVE_CLIENT_ID ||\n      \"294393711342-h5aqqt3pvn8othepvsmi16iakdhi7m6j.apps.googleusercontent.com\",\n    app_id: process.env.REACT_APP_GOOGLE_DRIVE_APP_ID || \"294393711342\",\n    developer_key:\n      process.env.REACT_APP_GOOGLE_DRIVE_DEVELOPER_KEY ||\n      \"AIzaSyCoNoDnfzDBSXpt84Q75LU9UMTzvyLkRhg\",\n  },\n}\n\nconst scope = \"https://www.googleapis.com/auth/drive.readonly\"\n\nexport default ({ open, onClose, onAddSamples }) => {\n  const { t } = useTranslation()\n  const [googleScriptLoaded, setGoogleScriptLoaded] = useState(false)\n  const [pickerApiLoaded, setPickerApiLoaded] = useState(false)\n  const [oauthToken, setOAuthToken] = useState(null)\n  const [userSelectedItemsFromDrive, setUserSelectedItemsFromDrive] = useState(\n    []\n  )\n  const [isPickerOpen, setIsPickerOpen] = useState(false)\n\n  useEffect(() => {\n    const scriptElement = document.createElement(\"script\")\n    scriptElement.src = \"https://apis.google.com/js/api.js\"\n    scriptElement.async = true\n\n    scriptElement.onload = () => {\n      setGoogleScriptLoaded(true)\n    }\n\n    document.body.appendChild(scriptElement)\n    return () => {\n      scriptElement.remove()\n    }\n  }, [])\n\n  const googlePickerActionCallback = useCallback(\n    (data) => {\n      if (data.action === window.google.picker.Action.PICKED) {\n        setUserSelectedItemsFromDrive(\n          data.docs.map((googleDriveDocument) => ({\n            url: googleDriveDocument.url,\n            mimeType: googleDriveDocument.mimeType,\n            name: googleDriveDocument.name,\n            id: googleDriveDocument.id,\n          }))\n        )\n\n        setIsPickerOpen(false)\n      } else if (data.action === \"cancel\") {\n        onClose()\n      }\n    },\n    [onClose]\n  )\n\n  const createPicker = useCallback(() => {\n    if (pickerApiLoaded && oauthToken) {\n      const view = new window.google.picker.DocsView(\n        window.google.picker.ViewId.Docs,\n        window.google.picker.ViewId.FOLDERS\n      )\n        .setIncludeFolders(true)\n        .setSelectFolderEnabled(true)\n\n      const picker = new window.google.picker.PickerBuilder()\n        .enableFeature(window.google.picker.Feature.NAV_HIDDEN)\n        .enableFeature(window.google.picker.Feature.MINE_ONLY)\n        .enableFeature(window.google.picker.Feature.MULTISELECT_ENABLED)\n        .setAppId(credentials.web.app_id)\n        .setOAuthToken(oauthToken)\n        .addView(view)\n        .addView(window.google.picker.ViewId.DOCS)\n        .setDeveloperKey(credentials.web.developer_key)\n        .setCallback(googlePickerActionCallback)\n        .build()\n      picker.setVisible(true)\n      setIsPickerOpen(true)\n    }\n  }, [googlePickerActionCallback, oauthToken, pickerApiLoaded])\n\n  useEffect(() => {\n    createPicker()\n  }, [pickerApiLoaded, oauthToken, createPicker])\n\n  const handleAuthenticationResponse = useCallback(\n    (authenticationResponse) => {\n      if (authenticationResponse && !authenticationResponse.error) {\n        setOAuthToken(authenticationResponse.access_token)\n        createPicker()\n      }\n    },\n    [createPicker]\n  )\n\n  const onAuthApiLoad = useCallback(() => {\n    window.gapi.auth.authorize(\n      {\n        client_id: credentials.web.client_id,\n        scope: scope,\n        immediate: false,\n      },\n      handleAuthenticationResponse\n    )\n  }, [handleAuthenticationResponse])\n\n  const onPickerApiLoad = useCallback(() => {\n    setPickerApiLoaded(true)\n    createPicker()\n  }, [createPicker])\n\n  const onLoadPicker = useCallback(() => {\n    if (googleScriptLoaded === true) {\n      window.gapi.load(\"auth\", { callback: onAuthApiLoad })\n      window.gapi.load(\"picker\", { callback: onPickerApiLoad })\n    }\n  }, [googleScriptLoaded, onAuthApiLoad, onPickerApiLoad])\n\n  const onAddSamplesClicked = () => {\n    const samples = []\n    for (const item of userSelectedItemsFromDrive) {\n      if (item.mimeType.includes(\"image/\")) {\n        samples.push({ imageUrl: `https://drive.google.com/uc?id=${item.id}` })\n      } else if (item.mimeType.includes(\"video/\")) {\n        samples.push({ videoUrl: `https://drive.google.com/uc?id=${item.id}` })\n      }\n    }\n\n    onAddSamples(samples)\n  }\n\n  useEffect(() => {\n    if (open) {\n      onLoadPicker()\n    }\n  }, [open, googleScriptLoaded, onLoadPicker])\n\n  return (\n    <SimpleDialog\n      open={open && !isPickerOpen}\n      onClose={onClose}\n      title=\"Import from Google Drive\"\n      actions={[\n        userSelectedItemsFromDrive &&\n          userSelectedItemsFromDrive.length > 0 && {\n            text: `Add ${userSelectedItemsFromDrive.length} Samples`,\n            onClick: onAddSamplesClicked,\n          },\n      ].filter(Boolean)}\n    >\n      <Button variant=\"outlined\" onClick={onLoadPicker}>\n        {t(\"reopen-google-drive-picker\")}\n      </Button>\n      <ExplainText>\n        {t(\"import-from-google-drive-explanation-text\")}.{\" \"}\n        <b>{t(\"import-from-google-drive-explanation-bold-text\")}!</b>\n      </ExplainText>\n      <GoogleDriveScreenshot\n        src={\n          \"https://s3.amazonaws.com/asset.workaround.online/google-share-screenshot.png\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport TextAreaWithUpload from \"../TextAreaWithUpload\"\nimport * as colors from \"@material-ui/core/colors\"\nimport fromUDTCSV from \"../../utils/from-udt-csv.js\"\n\nconst InfoText = styled(\"div\")({\n  fontFamily: \"Inter\",\n  marginBottom: 20,\n  \"& a\": {\n    color: colors.blue[500],\n  },\n})\n\nconst Error = styled(\"div\")({\n  color: colors.red[500],\n  whiteSpace: \"pre-wrap\",\n  marginBottom: 20,\n})\n\nconst ImportUDTFileDialog = ({ open, onClose, onAddSamples }) => {\n  const [error, changeError] = useState(null)\n  const [content, setContent] = useState(\"\")\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Import JSON/CSV Samples\"\n      actions={[\n        {\n          text: \"Add Samples\",\n          onClick: () => {\n            changeError(null)\n            let samples, taskOutput\n            try {\n              ;[samples, taskOutput] = JSON.parse(content).samples\n            } catch (e1) {\n              try {\n                const udt = fromUDTCSV(content)\n                ;({ samples, taskOutput } = udt)\n              } catch (e2) {\n                console.log({\n                  message: \"CSV/JSON Error Stacks\",\n                  jsonError: e1.stack,\n                  csvError: e2.stack,\n                })\n                changeError(\n                  `JSON did not parse. CSV did not parse.\\n\\nJSON Error: ${e1.toString()}\\nCSV Error: ${e2.toString()}`\n                )\n                return\n              }\n            }\n            if (!samples || samples.length === 0) {\n              changeError(\"No task data found\")\n              return\n            }\n            onAddSamples(samples, taskOutput)\n          },\n        },\n      ]}\n    >\n      <InfoText>\n        See the{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format\">\n          UDT JSON format\n        </a>{\" \"}\n        or the{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format\">\n          UDT CSV format\n        </a>{\" \"}\n        for formatting details. Or take a look at a{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format/blob/master/SAMPLE.udt.json\">\n          sample JSON\n        </a>{\" \"}\n        or{\" \"}\n        <a href=\"https://github.com/UniversalDataTool/udt-format/blob/master/SAMPLE.udt.csv\">\n          sample CSV\n        </a>{\" \"}\n        file.\n      </InfoText>\n      <Error>{error}</Error>\n      <TextAreaWithUpload\n        content={content}\n        onChangeContent={setContent}\n        placeholder={\n          \"Paste CSV/JSON here. The file should be in the UDT JSON/CSV format.\\n\\nYou can also drag a json or csv file here (double click to open file dialog)\"\n        }\n      />\n    </SimpleDialog>\n  )\n}\n\nexport default ImportUDTFileDialog\n","// @flow weak\n\nimport React from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport { useTranslation } from \"react-i18next\"\n\nconst datasets = [\n  { name: \"Elon Musk Tweets\", type: \"text\", size: 2800 },\n  { name: \"Cats\", type: \"image\", size: 360 },\n  { name: \"VR Hand Pinching\", type: \"image\", size: 20517 },\n  { name: \"AI Generated Faces\", type: \"image\", size: 1999 },\n  { name: \"Text to Speech Audio\", type: \"audio\", size: 200 },\n]\n\nasync function getSamples(dataset) {\n  const datasetName =\n    dataset.name.toLowerCase().replace(/ /g, \"_\") + \".udt.json\"\n\n  const datasetUrl = `https://s3.amazonaws.com/datasets.workaround.online/${datasetName}`\n\n  return await fetch(datasetUrl)\n    .then((r) => r.json())\n    .then((r) => r.samples || r.taskData)\n}\n\nconst StyledButton = styled(Button)({})\n\nconst ImportToyDatasetDialog = ({ onClose, onAddSamples, open }) => {\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog onClose={onClose} open={open} title=\"Import Toy Dataset\">\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>{t(\"name\")}</TableCell>\n              <TableCell>{t(\"type\")}</TableCell>\n              <TableCell>{t(\"size\")}</TableCell>\n              <TableCell>{t(\"actions\")}</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {datasets.map((dataset) => (\n              <TableRow key={dataset.name}>\n                <TableCell>{dataset.name}</TableCell>\n                <TableCell>{dataset.type}</TableCell>\n                <TableCell>{dataset.size}</TableCell>\n                <TableCell>\n                  <StyledButton\n                    data-import-toy-dataset-name={dataset.name}\n                    onClick={async () => {\n                      onAddSamples(await getSamples(dataset))\n                    }}\n                    variant=\"outlined\"\n                  >\n                    {t(\"import\")}\n                  </StyledButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </SimpleDialog>\n  )\n}\n\nexport default ImportToyDatasetDialog\n","const idify = (s) =>\n  s\n    .toLowerCase()\n    .replace(/[^a-z0-9]/g, \"_\")\n    .replace(/_+/g, \"_\")\n\nexport default ({\n  youtubeUrl,\n  title: videoTitle,\n  remote,\n  videoQuality,\n  downloadPath,\n  onProgress,\n  onComplete,\n  onChangeOverallProgress,\n}) => {\n  //let starttime = Date.now()\n\n  const ytdl = remote.require(\"ytdl-core\")\n  const path = remote.require(\"path\")\n\n  const videoName = videoQuality.includes(\"audio\")\n    ? `${idify(videoTitle) + \".mp3\"}`\n    : `${idify(videoTitle) + \".mp4\"}`\n\n  const fullVideoPath = path.join(downloadPath, videoName)\n  const writableVideoFile = remote\n    .require(\"fs\")\n    .createWriteStream(fullVideoPath)\n\n  const videoFormat = videoName.endsWith(\".mp3\") ? \"audio/mp3\" : \"video/mp4\"\n\n  const youtubeVideoWithOptions = ytdl(youtubeUrl, {\n    format: videoFormat,\n    quality: videoQuality !== null ? videoQuality : \"highest\",\n  })\n\n  youtubeVideoWithOptions.pipe(writableVideoFile)\n\n  /*youtubeVideoWithOptions.once(\"response\", () => {\n    starttime = Date.now()\n  })*/\n\n  youtubeVideoWithOptions.on(\"progress\", (chunkLength, downloaded, total) => {\n    const percent = downloaded / total\n    // const downloadedMinutes = (Date.now() - starttime) / 1000 / 60\n\n    // const downloadedPercentage = (percent * 100).toFixed(2)\n    // const downloadedSize = (downloaded / 1024 / 1024).toFixed(2)\n    // const downloadedMBs = (\n    //   downloaded /\n    //   1024 /\n    //   1024\n    // ).toFixed(2)\n    // const totalSize = (total / 1024 / 1024).toFixed(2)\n    // const informationText = `${downloadedPercentage}% downloaded (${downloadedMBs}MB of ${totalSize}MB)\\nestimated time left: ${(downloadedMinutes / percent -downloadedMinutes).toFixed(2)}minutes`\n\n    onProgress({\n      progress: percent * 100,\n    })\n\n    onChangeOverallProgress(percent * 100)\n  })\n\n  youtubeVideoWithOptions.on(\"end\", () => onComplete(fullVideoPath))\n\n  return {\n    cancel: () => {\n      youtubeVideoWithOptions.destroy()\n    },\n  }\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  height: 36,\n  width: \"100%\",\n  boxSizing: \"border-box\",\n  position: \"relative\",\n  marginTop: 8,\n  marginBottom: 8,\n  backgroundColor: colors.blue[50],\n})\nconst Text = styled(\"div\")({\n  position: \"absolute\",\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n  paddingTop: 4,\n  fontSize: 18,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n})\nconst Bar = styled(\"div\")({\n  position: \"absolute\",\n  left: 0,\n  bottom: 0,\n  top: 0,\n  backgroundColor: colors.blue[300],\n})\n\nexport default ({ progress }) => {\n  return (\n    <Container>\n      <Bar style={{ right: 100 - progress + \"%\" }} />\n      <Text>{Math.floor(progress)}%</Text>\n    </Container>\n  )\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ProgressBar from \"../ProgressBar\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\n\nconst ProgressContainer = styled(\"div\")({\n  width: \"100%\",\n  height: \"100%\",\n})\n\nconst TotalPercentageWrapper = styled(\"div\")({\n  flexDirection: \"row\",\n  width: \"100%\",\n  display: \"flex\",\n  justifyContent: \"space-between\",\n})\n\nconst Progress = ({ unitProgress, overallProgress, completedVideoTitles }) => {\n  return (\n    <ProgressContainer>\n      <ProgressBar progress={overallProgress} />\n      <ProgressBar progress={unitProgress.progress} />\n\n      <h3>Downloading: {unitProgress.title}</h3>\n      <ExpansionPanel>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n          <TotalPercentageWrapper>\n            <h3>Downloaded Video Titles</h3>\n          </TotalPercentageWrapper>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <ul>\n            {completedVideoTitles && completedVideoTitles.length > 0\n              ? completedVideoTitles\n              : null}\n          </ul>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </ProgressContainer>\n  )\n}\n\nexport default Progress\n","const getYoutubeVideoInformation = async (\n  remote,\n  splittedURLsArray,\n  progressCallback = () => null\n) => {\n  const ytdl = remote.require(\"ytdl-core\")\n  const checkedVideos = []\n  if (splittedURLsArray.length > 0) {\n    for (let i = 0; i < splittedURLsArray.length; i++) {\n      const url = splittedURLsArray[i]\n      const video = await new Promise((resolve, reject) => {\n        ytdl.getBasicInfo(url, (err, info) => {\n          if (info && !err) {\n            resolve({\n              url,\n              title: info.title,\n            })\n          } else {\n            const errorText = `Error with video at \"${url}\"\\n\\n${err.toString()}`\n            reject(new Error(errorText))\n          }\n        })\n      })\n      checkedVideos.push(video)\n      progressCallback({\n        progress: (i / (splittedURLsArray.length - 1)) * 100,\n        text: \"Inspecting Video Information...\",\n      })\n    }\n  }\n  return checkedVideos\n}\n\nexport default getYoutubeVideoInformation\n","const splitURLsFromTextArea = (stringURLs) => {\n  const urlsHasHTTPS = []\n  const splittedURLsByNewLines = stringURLs.split(\"\\n\")\n  for (const url of splittedURLsByNewLines) {\n    if (url.includes(\"https://\")) {\n      urlsHasHTTPS.push(url)\n    }\n  }\n  return urlsHasHTTPS\n}\n\nexport default splitURLsFromTextArea\n","import React, { useState, useRef } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport Select from \"react-select\"\nimport downloadYoutubeVideo from \"./download-youtube-video\"\nimport Progress from \"./progress\"\nimport getYoutubeVideoInformation from \"./get-youtube-video-information\"\nimport splitURLsFromTextArea from \"./split-urls-from-text-area\"\nimport { useTranslation } from \"react-i18next\"\n\nconst TextArea = styled(\"textarea\")({\n  width: \"100%\",\n  minHeight: 300,\n})\n\nconst SelectVideoQualityHeader = styled(\"h3\")({\n  lineHeight: 0,\n  textAlign: \"center\",\n})\n\nconst SelectVideoQuality = styled(\"div\")({\n  width: \"100%\",\n  marginBottom: 8,\n  paddingBottom: 4,\n})\n\nconst ErrorText = styled(\"pre\")({\n  whiteSpace: \"pre-wrap\",\n  color: \"#f00\",\n})\n\nconst LoadingText = styled(\"h2\")({\n  width: \"100%\",\n  height: \"100%\",\n  margin: \"auto auto\",\n  textAlign: \"center\",\n})\n\nconst CompletedVideoTitle = styled(\"h3\")({\n  textDecoration: \"line-through\",\n  lineHeight: 0,\n})\n\nconst qualityOptions = [\n  { value: \"136\", label: \"720p\" },\n  { value: \"135\", label: \"480p\" },\n  { value: \"lowestvideo\", label: \"Lowest Video Only\" },\n  // TODO these did not seem to work in a local test (missing video)\n  // { value: \"lowest\", label: \"lowest\" },\n  // { value: \"highest\", label: \"Highest\" },\n  { value: \"highestvideo\", label: \"Highest Video Only\" },\n  { value: \"lowestaudio\", label: \"Lowest Audio Only\" },\n  { value: \"highestaudio\", label: \"Highest Audio Only\" },\n]\n\nconst ImportFromYoutubeUrls = ({ open, onClose, onAddSamples }) => {\n  const { remote } = useElectron() || {}\n  const { t } = useTranslation()\n\n  const [urlsFromTextArea, setUrlsFromTextArea] = useState([])\n  const [videoQuality, setVideoQuality] = useState(qualityOptions[0].value)\n  const [error, setError] = useState(null)\n\n  const [unitProgress, setUnitProgress] = useState({ progress: 0 })\n  const [overallProgress, setOverallProgress] = useState(0)\n  const [isDownloading, setIsDownloading] = useState(false)\n  const [completedVideoTitles, setCompletedVideoTitles] = useState(null)\n\n  const cancelRef = useRef()\n\n  const setDefaultState = async () => {\n    setUnitProgress({ progress: 0, title: \"\" })\n    setOverallProgress(0)\n    setIsDownloading(false)\n  }\n\n  const closeDialog = async () => {\n    await setDefaultState()\n    onClose()\n  }\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={closeDialog}\n      title=\"Import from Youtube URLs\"\n      actions={[\n        {\n          text: \"Cancel Downloads\",\n          disabled: !isDownloading,\n          onClick: () => {\n            cancelRef.current()\n            setIsDownloading(false)\n          },\n        },\n        {\n          text: \"Download Youtube URLs\",\n          onClick: async () => {\n            setIsDownloading(true)\n            const { canceled, filePaths } = await remote.dialog.showOpenDialog({\n              title: \"Directory to download files to\",\n              buttonLabel: \"Download Files Here\",\n              properties: [\n                \"createDirectory\",\n                \"openDirectory\",\n                \"promptToCreate\",\n              ],\n            })\n\n            if (canceled || !filePaths) return setIsDownloading(false)\n\n            const downloadPath = filePaths[0]\n\n            const youtubeVideoInfos = await getYoutubeVideoInformation(\n              remote,\n              urlsFromTextArea,\n              ({ progress, text }) => {\n                setUnitProgress({ progress })\n              }\n            ).catch((errorMessage) => {\n              console.error(errorMessage.stack)\n              setError(errorMessage.toString())\n              return null\n            })\n            if (!youtubeVideoInfos) return setIsDownloading(false)\n\n            const completedVideoPaths = []\n            const completedVideoTitlesArray = []\n\n            const youtubeVideosCount = youtubeVideoInfos.length\n\n            for (let i = 0; i < youtubeVideosCount; i++) {\n              const youtubeVideoInfo = youtubeVideoInfos[i]\n              const videoPath = await new Promise((resolve, reject) => {\n                const { cancel } = downloadYoutubeVideo({\n                  remote,\n                  downloadPath,\n                  youtubeUrl: youtubeVideoInfo.url,\n                  title: youtubeVideoInfo.title,\n                  videoQuality,\n                  onChangeOverallProgress: (currentProgress) =>\n                    setOverallProgress(\n                      ((completedVideoTitlesArray.length * 100 +\n                        currentProgress) /\n                        (youtubeVideosCount * 100)) *\n                        100\n                    ),\n                  onProgress: ({ progress, text }) =>\n                    setUnitProgress({\n                      progress,\n                      title: youtubeVideoInfo.title,\n                      progressText: text,\n                    }),\n                  onComplete: (filePath) => resolve(filePath),\n                })\n                cancelRef.current = cancel\n              })\n\n              completedVideoTitlesArray.push(\n                <li key={i + youtubeVideoInfo.title}>\n                  <CompletedVideoTitle>\n                    {youtubeVideoInfo.title}\n                  </CompletedVideoTitle>\n                </li>\n              )\n              setCompletedVideoTitles(completedVideoTitlesArray)\n\n              completedVideoPaths.push(videoPath)\n            }\n\n            onAddSamples(\n              completedVideoPaths.map((videoPath) => ({\n                videoUrl: `file://${videoPath}`,\n              }))\n            )\n\n            setIsDownloading(false)\n          },\n          disabled: isDownloading,\n        },\n      ]}\n    >\n      {error && <ErrorText>{error}</ErrorText>}\n      {isDownloading &&\n      ((unitProgress && unitProgress.progress && unitProgress.progress > 0) ||\n        (completedVideoTitles &&\n          Array.isArray(completedVideoTitles) === true &&\n          completedVideoTitles.length > 0)) ? (\n        <Progress\n          unitProgress={unitProgress}\n          completedVideoTitles={completedVideoTitles}\n          overallProgress={overallProgress}\n        />\n      ) : isDownloading === true ? (\n        <LoadingText>Information is Loading</LoadingText>\n      ) : null}\n      {!isDownloading && (\n        <React.Fragment>\n          <SelectVideoQuality>\n            <SelectVideoQualityHeader>\n              {t(\"select-video-quality\")}\n            </SelectVideoQualityHeader>\n            <Select\n              defaultValue={qualityOptions[0]}\n              options={qualityOptions}\n              onChange={({ value }) => setVideoQuality(value)}\n            />\n          </SelectVideoQuality>\n          <TextArea\n            onChange={(e, v) => {\n              setUrlsFromTextArea(splitURLsFromTextArea(e.target.value))\n            }}\n            placeholder={\"Paste Youtube URLs here\\nOne URL per line\"}\n          />\n        </React.Fragment>\n      )}\n    </SimpleDialog>\n  )\n}\n\nexport default ImportFromYoutubeUrls\n","// @flow weak\n\nconst convertToSamplesObject = (fp) => {\n  const ext = fp.split(\".\").slice(-1)[0].toLowerCase()\n  if ([\"png\", \"jpg\", \"jpeg\"].includes(ext)) {\n    return { imageUrl: `file://${fp}` }\n  }\n  if ([\"pdf\"].includes(ext)) {\n    return { pdfUrl: `file://${fp}` }\n  }\n  if ([\"mp4\", \"webm\", \"mkv\"].includes(ext)) {\n    return { videoUrl: `file://${fp}` }\n  }\n  return null\n}\n\nasync function promptAndGetSamplesLocalDirectory({ electron }) {\n  const {\n    canceled,\n    filePaths: dirPaths,\n  } = await electron.remote.dialog.showOpenDialog({\n    title: \"Select Directory to Import Files\",\n    properties: [\"openDirectory\"],\n  })\n  if (canceled) return\n  const dirPath = dirPaths[0]\n  const fs = electron.remote.require(\"fs\")\n  const path = electron.remote.require(\"path\")\n  return (await fs.promises.readdir(dirPath))\n    .filter((fn) => fn.includes(\".\"))\n    .map((fileName) => path.join(dirPath, fileName))\n    .map(convertToSamplesObject)\n    .filter(Boolean)\n}\n\nexport default promptAndGetSamplesLocalDirectory\n","// @flow weak\n\nimport React, { useState, createContext } from \"react\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport AssignmentReturnedIcon from \"@material-ui/icons/AssignmentReturned\"\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\"\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\"\nimport DescriptionIcon from \"@material-ui/icons/Description\"\nimport PetsIcon from \"@material-ui/icons/Pets\"\nimport * as colors from \"@material-ui/core/colors\"\nimport PasteUrlsDialog from \"../PasteUrlsDialog\"\nimport ImportFromS3Dialog from \"../ImportFromS3Dialog\"\nimport ImportTextSnippetsDialog from \"../ImportTextSnippetsDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport classnames from \"classnames\"\nimport S3Icon from \"./S3Icon\"\nimport isEmpty from \"lodash/isEmpty\"\nimport { setIn } from \"seamless-immutable\"\nimport useEventCallback from \"use-event-callback\"\nimport ImportFromGoogleDriveDialog from \"../ImportFromGoogleDriveDialog\"\nimport ImportUDTFileDialog from \"../ImportUDTFileDialog\"\nimport ImportToyDataset from \"../ImportToyDatasetDialog\"\nimport ImportFromYoutubeUrls from \"../ImportFromYoutubeUrls\"\nimport { FaGoogleDrive, FaYoutube } from \"react-icons/fa\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport promptAndGetSamplesFromLocalDirectory from \"./prompt-and-get-samples-from-local-directory.js\"\nimport { useTranslation } from \"react-i18next\"\n\nconst ButtonBase = styled(MuiButton)({\n  width: 240,\n  height: 140,\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  \"&.disabled\": {\n    backgroundColor: colors.grey[200],\n  },\n  margin: 8,\n  \"& .icon\": {\n    width: 48,\n    height: 48,\n    color: colors.grey[600],\n    \"&.disabled\": {\n      color: colors.grey[400],\n    },\n  },\n})\n\nconst DesktopOnlyText = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  \"&.disabled\": {\n    color: colors.grey[500],\n  },\n})\n\nconst SelectDialogContext = createContext()\n\nconst Button = ({\n  Icon,\n  desktopOnly,\n  isDesktop,\n  children,\n  dialog,\n  authConfiguredOnly,\n  authConfig,\n  signedInOnly,\n  user,\n  onlySupportType,\n  type,\n}) => {\n  const posthog = usePosthog()\n\n  const isDisabled = () => {\n    if (desktopOnly) {\n      return { disabled: !isDesktop, disabledText: \"DESKTOP ONLY\" }\n    } else if (onlySupportType && !onlySupportType.includes(type)) {\n      return { disabled: true, disabledText: `DOESN'T SUPPORT THIS INTERFACE` }\n    } else if (authConfiguredOnly) {\n      if (signedInOnly) {\n        return { disabled: isEmpty(user), disabledText: \"MUST BE SIGNED IN\" }\n      } else {\n        return {\n          disabled: isEmpty(authConfig),\n          disabledText: \"AUTH MUST BE CONFIGURED\",\n        }\n      }\n    } else {\n      return { disabled: false, disabledText: \"\" }\n    }\n  }\n\n  const { disabled, disabledText } = isDisabled()\n\n  return (\n    <SelectDialogContext.Consumer>\n      {({ onChangeDialog }) => {\n        return (\n          <ButtonBase\n            onClick={() => {\n              posthog.capture(\"import_button_clicked\", {\n                import_button: dialog,\n              })\n              onChangeDialog(dialog)\n            }}\n            className={classnames({ disabled })}\n            variant=\"outlined\"\n            disabled={disabled}\n          >\n            <div>\n              <Icon className={classnames(\"icon\", { disabled })} />\n              <div>{children}</div>\n              {disabled && (\n                <DesktopOnlyText className={classnames({ disabled })}>\n                  {disabledText}\n                </DesktopOnlyText>\n              )}\n            </div>\n          </ButtonBase>\n        )\n      }}\n    </SelectDialogContext.Consumer>\n  )\n}\n\nexport default ({\n  // TODO remove file, onChangeFile\n  file,\n  onChangeFile,\n\n  dataset,\n  onChangeDataset,\n  isDesktop,\n  authConfig,\n  user,\n}) => {\n  const { t } = useTranslation()\n  const [selectedDialog, changeDialog] = useState()\n  const electron = useElectron()\n  const onChangeDialog = async (dialog) => {\n    switch (dialog) {\n      case \"upload-directory\": {\n        if (!electron) return\n        const localSamples = await promptAndGetSamplesFromLocalDirectory({\n          electron,\n        })\n        onChangeDataset(\n          setIn(\n            dataset,\n            [\"samples\"],\n            (dataset.samples || []).concat(localSamples)\n          ),\n          true\n        )\n        return\n      }\n      default: {\n        return changeDialog(dialog)\n      }\n    }\n  }\n\n  const closeDialog = () => changeDialog(null)\n\n  const onAddSamples = useEventCallback(async (samplesToAdd) => {\n    onChangeDataset(\n      setIn(dataset, [\"samples\"], (dataset.samples || []).concat(samplesToAdd))\n    )\n    closeDialog()\n  })\n\n  const onAddSamplesAsToyDataset = useEventCallback(async (samplesToAdd) => {\n    onChangeDataset(\n      setIn(\n        dataset,\n        [\"samples\"],\n        (dataset.samples || []).concat(samplesToAdd)\n      ).setIn([\"usedToyDataset\"], true)\n    )\n    closeDialog()\n  })\n\n  return (\n    <SelectDialogContext.Provider value={{ onChangeDialog }}>\n      <div>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"paste-image-urls\"\n          Icon={AssignmentReturnedIcon}\n          authConfig={authConfig}\n          signedInOnly={false}\n          user={user}\n        >\n          {t(\"paste-urls\")}\n        </Button>\n        <Button\n          desktopOnly\n          isDesktop={isDesktop}\n          dialog=\"upload-directory\"\n          Icon={CreateNewFolderIcon}\n          authConfig={authConfig}\n          signedInOnly={false}\n          user={user}\n        >\n          {t(\"files-from-directory\")}\n        </Button>\n        <Button\n          dialog=\"import-text-snippets\"\n          Icon={TextFieldsIcon}\n          onlySupportType={[\"text_entity_recognition\", \"text_classification\"]}\n          type={dataset.interface.type}\n        >\n          {t(\"import-text-snippets\")}\n        </Button>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"import-toy-dataset\"\n          Icon={PetsIcon}\n        >\n          {t(\"import-toy-dataset\")}\n        </Button>\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"youtube-urls\"\n          Icon={FaYoutube}\n          desktopOnly\n        >\n          {t(\"import-from\")} Youtube URLs\n        </Button>\n        {file && (\n          <Button\n            isDesktop={isDesktop}\n            dialog=\"import-from-s3\"\n            Icon={S3Icon}\n            authConfiguredOnly={true}\n            authConfig={authConfig}\n            signedInOnly={true}\n            user={user}\n          >\n            {t(\"import-from\")} S3\n          </Button>\n        )}\n        <Button\n          isDesktop={isDesktop}\n          dialog=\"google-drive-file-picker\"\n          Icon={FaGoogleDrive}\n          onAddSamples={onAddSamples}\n        >\n          {t(\"import-from\")} Google Drive\n        </Button>\n        <Button dialog=\"import-csv-json\" Icon={DescriptionIcon}>\n          {t(\"import-from\")} CSV / JSON\n        </Button>\n        <ImportTextSnippetsDialog\n          open={selectedDialog === \"import-text-snippets\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <PasteUrlsDialog\n          open={selectedDialog === \"paste-image-urls\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        {file && (\n          <ImportFromS3Dialog\n            file={file}\n            authConfig={authConfig}\n            open={selectedDialog === \"import-from-s3\"}\n            onChangeFile={onChangeFile}\n            onClose={closeDialog}\n            user={user}\n            onAddSamples={onAddSamples}\n          />\n        )}\n        <ImportFromGoogleDriveDialog\n          open={selectedDialog === \"google-drive-file-picker\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <ImportToyDataset\n          open={selectedDialog === \"import-toy-dataset\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamplesAsToyDataset}\n        />\n        <ImportFromYoutubeUrls\n          open={selectedDialog === \"youtube-urls\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n        <ImportUDTFileDialog\n          open={selectedDialog === \"import-csv-json\"}\n          onClose={closeDialog}\n          onAddSamples={onAddSamples}\n        />\n      </div>\n    </SelectDialogContext.Provider>\n  )\n}\n","// @flow\n\nexport default () => {\n  if (window.require) {\n    return Boolean(window.require(\"electron\"))\n  }\n  return false\n}\n","// @flow weak\n\nimport React from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Box from \"@material-ui/core/Box\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport immutable from \"seamless-immutable\"\nimport { useTranslation } from \"react-i18next\"\n\nconst Code = styled(\"pre\")({\n  fontSize: 8,\n})\n\nconst StyledExpansionPanel = styled(ExpansionPanel)({\n  backgroundColor: colors.grey[100],\n  border: `1px solid ${colors.grey[500]}`,\n  marginTop: 16,\n  marginBottom: 16,\n})\n\nconst StyledExpansionPanelSummary = styled(ExpansionPanelSummary)({\n  fontWeight: \"bold\",\n})\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Transform Video Keyframes\"\n      actions={[\n        {\n          text: \"Transform Video Keyframes\",\n          disabled: !dataset.samples,\n          onClick: () => {\n            const samples = dataset.samples.flatMap((item, index) => {\n              if (!item.videoUrl) return { data: item, output: item.annotation }\n              if (item.videoUrl && !item.videoFrameAt) {\n                if (!item.annotation) return []\n                if (!item.annotation.keyframes) return []\n                const { keyframes } = item[index].annotation\n                return Object.keys(keyframes).map((kf) => ({\n                  videoUrl: item.videoUrl,\n                  videoFrameAt: parseInt(kf),\n                  annotation: keyframes[kf].regions || [],\n                }))\n              }\n            })\n\n            onChangeDataset(\n              immutable(dataset)\n                .setIn(\n                  [\"samples\"],\n                  samples.map((s) => s.data)\n                )\n                .setIn([\"interface\", \"type\"], \"image_segmentation\")\n            )\n          },\n        },\n      ]}\n    >\n      {t(\"transform-video-keyframes-dialog-explanation-text\")}\n      {!dataset.samples && (\n        <b>\n          <br />\n          <br />\n          {t(\"transform-video-keyframes-dialog-explanation-warning\")}\n        </b>\n      )}\n      <StyledExpansionPanel>\n        <StyledExpansionPanelSummary>Details</StyledExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Box display=\"flex\">\n            <Box>\n              <Code>\n                {`{\n  \"interface\": { \"type\": \"video_segmentation\" },\n  samples: [\n    {\n      videoUrl: \"https://example.com/video1.mp4\"\n    }\n  ],\n  taskOutput: [\n    {\n      keyframes: {\n        \"0\": { /* labels */ },\n        \"1000\": { /* labels */ },\n        \"2000\": { /* labels */ }\n      }\n    }\n  ]\n}`}\n              </Code>\n            </Box>\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n              <ArrowForwardIcon\n                style={{ color: colors.grey[500], width: 48, height: 48 }}\n              />\n            </Box>\n            <Box>\n              <Code>\n                {`{\n  \"interface\": { \"type\": \"image_segmentation\" },\n  samples: [\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 0\n    },\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 1000\n    },\n    {\n      videoUrl: \"https://example.com/vid1.mp4\",\n      videoFrameAt: 2000\n    }\n  ],\n  taskOutput: [\n    { /* labels */ },\n    { /* labels */ },\n    { /* labels */ }\n  ]\n}`}\n              </Code>\n            </Box>\n          </Box>\n        </ExpansionPanelDetails>\n      </StyledExpansionPanel>\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useElectron from \"../../utils/use-electron\"\nimport ProgressBar from \"../ProgressBar\"\nimport md5 from \"js-md5\"\nimport path from \"path\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nfunction downloadFile(urlToDownload, directoryPath, remote) {\n  const fileName = `sample_${md5(urlToDownload).slice(0, 6)}__${urlToDownload\n    .split(\"/\")\n    .slice(-1)[0]\n    .replace(/[^a-zA-Z0-9_\\-.]/g, \"\")}`\n  const downloadPath = path.join(directoryPath, fileName)\n  if (remote.require(\"fs\").existsSync(downloadPath)) return downloadPath\n  return new Promise((resolve, reject) => {\n    remote.require(\"download-file\")(\n      urlToDownload,\n      {\n        directory: directoryPath,\n        filename: fileName,\n      },\n      (err) => {\n        if (err) return reject(err)\n        return resolve(downloadPath)\n      }\n    )\n  })\n}\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { remote } = useElectron() || {}\n  const [progress, changeProgress] = useState(null)\n  const [errors, changeErrors] = useState(\"\")\n\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Download URLs\"\n      actions={[\n        {\n          text: \"Download URLs\",\n          disabled: progress !== null,\n          onClick: async () => {\n            changeProgress(0)\n            const {\n              cancelled,\n              filePaths: [directoryPath] = [null],\n            } = await remote.dialog.showOpenDialog({\n              title: \"Directory to download files to\",\n              buttonLabel: \"Download Files Here\",\n              properties: [\n                \"createDirectory\",\n                \"openDirectory\",\n                \"promptToCreate\",\n              ],\n            })\n            if (cancelled || !directoryPath) {\n              changeProgress(null)\n              return\n            }\n\n            const newSamples = [...dataset.samples]\n            let errors = \"\"\n\n            // Iterate over each task datum and download the url, then convert\n            // the path to a filesystem path\n            for (let i = 0; i < dataset.samples.length; i++) {\n              const td = dataset.samples[i]\n              let urlKey\n              if (td.imageUrl) urlKey = \"imageUrl\"\n              if (td.videoUrl) urlKey = \"videoUrl\"\n              if (!urlKey || !td[urlKey].startsWith(\"http\")) continue\n              const urlToDownload = td[urlKey]\n              try {\n                const pathToFile = await downloadFile(\n                  urlToDownload,\n                  directoryPath,\n                  remote\n                )\n                newSamples[i] = {\n                  ...td,\n                  [urlKey]: `file://${pathToFile}`,\n                }\n              } catch (e) {\n                errors += `Skipping sample, error downloading samples[${i}] (${urlToDownload}): ${e.toString()} \\n`\n              }\n              changeProgress((i / dataset.samples.length) * 100)\n            }\n\n            onChangeDataset(setIn(dataset, [\"samples\"], newSamples))\n\n            changeErrors(errors)\n            changeProgress(100)\n          },\n        },\n      ]}\n    >\n      {t(\"download-urls-dialog\")}\n      <ProgressBar progress={progress || 0} />\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport useElectron from \"../../utils/use-electron\"\nimport ProgressBar from \"../ProgressBar\"\nimport { setIn, without } from \"seamless-immutable\"\nimport { useTranslation } from \"react-i18next\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nconst getFfmpegTimeCode = (ms) => {\n  const cs = Math.floor(ms / 10) % 100\n  const ss = Math.floor(ms / 1000) % 60\n  const mn = Math.floor(ms / 1000 / 60) % 60\n  const hr = Math.floor(ms / 1000 / 60 / 60)\n  return [hr, \":\", mn, \":\", ss, \".\", cs]\n    .map((n) => (typeof n === \"number\" ? n.toString().padStart(2, \"0\") : n))\n    .join(\"\")\n}\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const { remote } = useElectron() || {}\n  const [progress, changeProgress] = useState(null)\n  const [errors, changeErrors] = useState(\"\")\n  const { t } = useTranslation()\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Video Frames to Images\"\n      actions={[\n        {\n          text: \"Convert Video Frames to Images\",\n          disabled: progress !== null,\n          onClick: async () => {\n            changeProgress(0)\n            let errors = \"\"\n            const pathToFfmpeg = remote.require(\"ffmpeg-static\")\n            if (!pathToFfmpeg) {\n              changeErrors(\n                \"There was an issue using ffmpeg. Please create an issue on the github repository.\"\n              )\n            }\n\n            const shell = remote.require(\"any-shell-escape\")\n            const { exec } = remote.require(\"child_process\")\n            const newsamples = [...dataset.samples]\n            let transformsPerformed = 0\n\n            for (let i = 0; i < dataset.samples.length; i++) {\n              const td = dataset.samples[i]\n              if (td.videoUrl && td.videoFrameAt !== undefined) {\n                if (td.videoUrl.startsWith(\"http\")) {\n                  errors += `Sample ${i} has a url to a video, videos must be downloaded before extracting frames.`\n                  continue\n                }\n                transformsPerformed++\n\n                const videoPath = td.videoUrl.replace(/^file:\\/\\//, \"\")\n                const imageOutputPath =\n                  videoPath + \"__frameat__\" + td.videoFrameAt + \".jpg\"\n                const ffmpegCommand = shell([\n                  pathToFfmpeg,\n                  \"-y\",\n                  \"-ss\",\n                  getFfmpegTimeCode(td.videoFrameAt),\n                  \"-i\",\n                  videoPath,\n                  \"-frames:v\",\n                  1,\n                  imageOutputPath,\n                ])\n                await new Promise((resolve, reject) => {\n                  exec(ffmpegCommand, { timeout: 5000 }, (err) => {\n                    if (err) return reject(err)\n                    resolve()\n                  })\n                })\n                newsamples[i] = {\n                  ...without(\n                    without(dataset.samples[i], \"videoUrl\"),\n                    \"videoFrameAt\"\n                  ),\n                  imageUrl: `file://${imageOutputPath}`,\n                }\n              }\n              changeProgress((i / dataset.samples.length) * 100)\n            }\n\n            if (transformsPerformed === 0) {\n              errors +=\n                \"No transforms were performed, do all of your video samples have frames specified? You may need to convert the keyframes to samples.\"\n            }\n\n            onChangeDataset(setIn(dataset, [\"samples\"], newsamples))\n\n            changeErrors(errors)\n            changeProgress(100)\n          },\n        },\n      ]}\n    >\n      {t(\"transform-video-frames-to-images-dialog-explanation-text\")}\n      <ProgressBar progress={progress || 0} />\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","const uploadFileToTransferSh = async ({ fileName, fileURL, remote }) => {\n  window.remote = remote // TODO remove\n  const remoteURL = `https://files.universaldatatool.com/${fileName}` ///${hashedFileName}\n\n  const axios = remote.require(\"axios\")\n  const exactFilePath = fileURL.split(\"file://\")[1]\n\n  const fsFileBuffer = remote.require(\"fs\").readFileSync(exactFilePath)\n\n  const uploadedFileURL = await axios\n    .put(remoteURL, fsFileBuffer)\n    .then((response) => {\n      if (response.status === 200) {\n        return response.data\n      }\n    })\n\n  return uploadedFileURL.replace(\n    \"universaldatatool.com/\",\n    \"universaldatatool.com/get/\"\n  )\n}\n\nexport default uploadFileToTransferSh\n","const splitFileNameFromFileURL = (fileURL) => {\n  if (fileURL.startsWith(\"file://\")) {\n    const splittedFullFileName = fileURL.split(\"/\")\n    const fullFileName = splittedFullFileName[splittedFullFileName.length - 1]\n    return fullFileName\n  }\n}\n\nexport default splitFileNameFromFileURL\n","const getFileURLKey = (item) => {\n  if (item.imageUrl) return \"imageUrl\"\n  if (item.videoUrl) return \"videoUrl\"\n  if (item.audioUrl) return \"audioUrl\"\n  return null\n}\n\nexport default getFileURLKey\n","import uploadFileToTransferSh from \"./upload-file-to-transfersh\"\nimport splitFileNameFromFileURL from \"./split-file-name-from-file-url\"\nimport getFileURLKey from \"./get-file-url-key\"\nimport { setIn } from \"seamless-immutable\"\n\n// TODO move to utils directory\nconst idify = (s) =>\n  s\n    .toLowerCase()\n    .replace(/[^a-z0-9]/g, \"_\")\n    .replace(/_+/g, \"_\")\n\nconst transformFileURLsToWebURLs = async ({\n  dataset,\n  onChangeDataset,\n  setProgress,\n  remote,\n}) => {\n  const newsamples = []\n\n  const progressUnit = 100 / dataset.samples.length\n  for (\n    let samplesIndex = 0;\n    samplesIndex < dataset.samples.length;\n    samplesIndex++\n  ) {\n    const samplesItem = dataset.samples[samplesIndex]\n\n    const fileURLKey = getFileURLKey(samplesItem)\n\n    if (!fileURLKey) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    const fileURL = samplesItem[fileURLKey]\n\n    if (!fileURL.startsWith(\"file://\")) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    const halfProgressOfUnit = progressUnit * samplesIndex\n    setProgress(halfProgressOfUnit)\n\n    const fileName = idify(splitFileNameFromFileURL(fileURL))\n\n    const webURLOfUploadedFile = await uploadFileToTransferSh({\n      fileName,\n      fileURL,\n      remote,\n    }).catch((e) => console.warn(e))\n\n    if (!webURLOfUploadedFile) {\n      newsamples.push(samplesItem)\n      continue\n    }\n\n    newsamples.push({\n      ...samplesItem,\n      [fileURLKey]: webURLOfUploadedFile,\n    })\n  }\n  setProgress(100)\n  onChangeDataset(setIn(dataset, [\"samples\"], newsamples))\n}\n\nexport default transformFileURLsToWebURLs\n","import React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport transformFileURLsToWebURLs from \"./functions/transform-file-urls-to-web-urls\"\nimport ProgressBar from \"../ProgressBar\"\nimport useElectron from \"../../utils/use-electron\"\nimport { useTranslation } from \"react-i18next\"\n\nconst TransformLocalFilesToWebURLs = ({\n  open,\n  onClose,\n  dataset,\n  onChangeDataset,\n}) => {\n  const { t } = useTranslation()\n\n  const [progress, setProgress] = useState(0)\n  const { remote } = useElectron() || {}\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Local Files to Web URLs\"\n      actions={[\n        {\n          text: \"Convert Local Files to Web URLs\",\n          onClick: async () =>\n            await transformFileURLsToWebURLs({\n              dataset,\n              onChangeDataset,\n              setProgress,\n              remote,\n            }),\n        },\n      ]}\n    >\n      {t(\"transform-local-files-to-web-urls-explanation\")}\n      <ProgressBar progress={progress} />\n    </SimpleDialog>\n  )\n}\n\nexport default TransformLocalFilesToWebURLs\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { setIn } from \"seamless-immutable\"\nimport Box from \"@material-ui/core/Box\"\nimport Select from \"react-select\"\nimport range from \"lodash/range\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nconst splitOptions = [\n  { label: \"2x2\", value: \"2x2\" },\n  { label: \"3x3\", value: \"3x3\" },\n  { label: \"1x2 (columns)\", value: \"1x2\" },\n  { label: \"1x3 (columns)\", value: \"1x3\" },\n  { label: \"2x3 (2 rows)\", value: \"2x3\" },\n  { label: \"4x4\", value: \"4x4\" },\n  { label: \"3x4 (3 rows)\", value: \"3x4\" },\n]\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const [errors, setErrors] = useState(\"\")\n  const [splitType, setSplitType] = useState(splitOptions[0].value)\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Image Samples into Segments\"\n      actions={[\n        {\n          text: \"Convert Image Samples into Segments\",\n          onClick: async () => {\n            const [rows, cols] = splitType.split(\"x\").map((v) => parseInt(v))\n\n            try {\n              onChangeDataset(\n                setIn(\n                  dataset,\n                  [\"samples\"],\n                  range(rows).flatMap((y) =>\n                    range(cols).flatMap((x) =>\n                      dataset.samples.map((s) => {\n                        return setIn(s, [\"allowedArea\"], {\n                          x: x / cols,\n                          y: y / rows,\n                          width: 1 / cols,\n                          height: 1 / rows,\n                        })\n                      })\n                    )\n                  )\n                )\n              )\n              onClose()\n            } catch (e) {\n              setErrors(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      This transformation will multiply the number of image samples you have,\n      splitting each individual image into segments. The image is not processed\n      and clipped, but rather an \"allowedArea\" property is placed on the sample\n      which limits the labeling to a section of the image. This is useful when\n      trying to reduce the amount of work per image sample.\n      <Box padding={4}>\n        <Select\n          defaultValue={splitOptions[0]}\n          options={splitOptions}\n          onChange={({ value }) => setSplitType(value)}\n        />\n      </Box>\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { setIn } from \"seamless-immutable\"\n\nconst ErrorBox = styled(\"pre\")({\n  color: \"red\",\n  whiteSpace: \"prewrap\",\n  fontSize: 11,\n})\n\nexport default ({ open, onChangeDataset, onClose, dataset }) => {\n  const [errors, setErrors] = useState(\"\")\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title=\"Convert Segments to Image Samples\"\n      actions={[\n        {\n          text: \"Convert Segments to Image Samples\",\n          onClick: async () => {\n            try {\n              const imageUrls = Array.from(\n                new Set(dataset.samples.map((s) => s.imageUrl))\n              )\n              const newSamples = []\n              for (const imageUrl of imageUrls) {\n                const pieces = dataset.samples.filter(\n                  (s) => s.imageUrl === imageUrl\n                )\n                newSamples.push({\n                  imageUrl,\n                  annotation: pieces\n                    .flatMap((p) => p.annotation)\n                    .filter(Boolean),\n                })\n              }\n              onChangeDataset(setIn(dataset, [\"samples\"], newSamples))\n              onClose()\n            } catch (e) {\n              setErrors(e.toString())\n            }\n          },\n        },\n      ]}\n    >\n      This transformation will take image samples that have been split into\n      segments (each with an allowedArea), and combine them into one image\n      sample again. This is typically executed after a splitting operation when\n      the samples are to be recombined.\n      {errors && <ErrorBox>{errors}</ErrorBox>}\n    </SimpleDialog>\n  )\n}\n","// @flow weak\n\nimport React, { useState, createContext } from \"react\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ImageIcon from \"@material-ui/icons/Image\"\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\"\nimport * as colors from \"@material-ui/core/colors\"\nimport useIsDesktop from \"../../utils/use-is-desktop\"\nimport classnames from \"classnames\"\nimport OndemandVideoIcon from \"@material-ui/icons/OndemandVideo\"\nimport TransformVideoKeyframesDialog from \"../TransformVideoKeyframesDialog\"\nimport DownloadURLsDialog from \"../DownloadURLsDialog\"\nimport GetAppIcon from \"@material-ui/icons/GetApp\"\nimport CollectionsIcon from \"@material-ui/icons/Collections\"\nimport TransformVideoFramesToImagesDialog from \"../TransformVideoFramesToImagesDialog\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport TransformLocalFilesToWebURLs from \"../TransformLocalFilesToWebURLs\"\nimport TransformImageSamplesIntoSegmentsDialog from \"../TransformImageSamplesIntoSegmentsDialog\"\nimport TransformSegmentsIntoImageSamplesDialog from \"../TransformSegmentsIntoImageSamplesDialog\"\n\nimport ComputerIcon from \"@material-ui/icons/Computer\"\nimport LanguageIcon from \"@material-ui/icons/Language\"\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\"\nimport GridOnIcon from \"@material-ui/icons/GridOn\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ButtonBase = styled(MuiButton)({\n  width: 240,\n  height: 140,\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  \"&.disabled\": {\n    backgroundColor: colors.grey[200],\n  },\n  margin: 8,\n  \"& .icon\": {\n    width: 36,\n    height: 36,\n    color: colors.grey[600],\n    \"&.disabled\": {\n      color: colors.grey[400],\n    },\n  },\n})\n\nconst DesktopOnlyText = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  \"&.disabled\": {\n    color: colors.grey[500],\n  },\n})\n\nconst SelectDialogContext = createContext()\n\nconst Button = ({ Icon1, Icon2, desktopOnly, children, dialog, disabled }) => {\n  const isDesktop = useIsDesktop()\n  const posthog = usePosthog()\n  const { t } = useTranslation()\n\n  disabled =\n    disabled === undefined ? (desktopOnly ? !isDesktop : false) : disabled\n  return (\n    <SelectDialogContext.Consumer>\n      {({ onChangeDialog }) => {\n        return (\n          <ButtonBase\n            onClick={() => {\n              onChangeDialog(dialog)\n              posthog.capture(\"transform_button_clicked\", {\n                transform_button: dialog,\n              })\n            }}\n            className={classnames({ disabled })}\n            variant=\"outlined\"\n            disabled={disabled}\n          >\n            <div>\n              {Icon1 && Icon2 ? (\n                <>\n                  <Icon1 className={classnames(\"icon\", { disabled })} />\n                  <ArrowForwardIcon\n                    className={classnames(\"icon\", { disabled })}\n                  />\n                  <Icon2 className={classnames(\"icon\", { disabled })} />\n                </>\n              ) : (\n                <Icon1 className={classnames(\"icon\", { disabled })} />\n              )}\n              <div>{children}</div>\n              {desktopOnly && (\n                <DesktopOnlyText className={classnames({ disabled })}>\n                  {t(\"desktop-only\").toUpperCase()}\n                </DesktopOnlyText>\n              )}\n            </div>\n          </ButtonBase>\n        )\n      }}\n    </SelectDialogContext.Consumer>\n  )\n}\n\nexport default ({ dataset, onChangeDataset }) => {\n  const { t } = useTranslation()\n  const [selectedDialog, changeDialog] = useState()\n  const onChangeDialog = async (dialog) => {\n    switch (dialog) {\n      case \"convert-keyframes-to-samples\": {\n        break\n      }\n      default: {\n        return changeDialog(dialog)\n      }\n    }\n  }\n  const closeDialog = () => changeDialog(null)\n  return (\n    <SelectDialogContext.Provider value={{ onChangeDialog }}>\n      <div>\n        <Button\n          disabled={dataset.interface.type !== \"video_segmentation\"}\n          dialog=\"convert-keyframes-to-samples\"\n          Icon1={OndemandVideoIcon}\n          Icon2={CollectionsIcon}\n        >\n          {t(\"convert-video-keyframes-to-samples\")}\n        </Button>\n        <Button\n          desktopOnly\n          dialog=\"convert-local-files-to-web-urls\"\n          Icon1={ComputerIcon}\n          Icon2={LanguageIcon}\n        >\n          {t(\"transform-local-files-to-web-urls\")}\n        </Button>\n        <Button desktopOnly dialog=\"download-urls\" Icon1={GetAppIcon}>\n          {t(\"download\")} URLs\n        </Button>\n        <Button\n          desktopOnly\n          dialog=\"convert-video-frames-to-images\"\n          Icon1={OndemandVideoIcon}\n          Icon2={ImageIcon}\n        >\n          {t(\"convert-video-frames-to-images\")}\n        </Button>\n        <Button\n          dialog=\"split-image-samples-into-segments\"\n          Icon1={CheckBoxOutlineBlankIcon}\n          Icon2={GridOnIcon}\n        >\n          Split Image Samples into Segments\n        </Button>\n        <Button\n          dialog=\"combine-segments-into-image-samples\"\n          Icon1={GridOnIcon}\n          Icon2={CheckBoxOutlineBlankIcon}\n        >\n          Combine Segments into Image Samples\n        </Button>\n        <TransformVideoKeyframesDialog\n          open={selectedDialog === \"convert-keyframes-to-samples\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          onChangeDataset={(...args) => {\n            onChangeDataset(...args)\n            closeDialog()\n          }}\n        />\n        <DownloadURLsDialog\n          open={selectedDialog === \"download-urls\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          desktopOnly\n          onChangeDataset={onChangeDataset}\n        ></DownloadURLsDialog>\n        <TransformLocalFilesToWebURLs\n          dataset={dataset}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n          desktopOnly\n          open={selectedDialog === \"convert-local-files-to-web-urls\"}\n        ></TransformLocalFilesToWebURLs>\n        <TransformVideoFramesToImagesDialog\n          open={selectedDialog === \"convert-video-frames-to-images\"}\n          onClose={closeDialog}\n          dataset={dataset}\n          desktopOnly\n          onChangeDataset={onChangeDataset}\n        ></TransformVideoFramesToImagesDialog>\n        <TransformImageSamplesIntoSegmentsDialog\n          dataset={dataset}\n          open={selectedDialog === \"split-image-samples-into-segments\"}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n        ></TransformImageSamplesIntoSegmentsDialog>\n        <TransformSegmentsIntoImageSamplesDialog\n          dataset={dataset}\n          open={selectedDialog === \"combine-segments-into-image-samples\"}\n          onClose={closeDialog}\n          onChangeDataset={onChangeDataset}\n        ></TransformSegmentsIntoImageSamplesDialog>\n      </div>\n    </SelectDialogContext.Provider>\n  )\n}\n","// @flow weak\n\nimport React, { useMemo, useState } from \"react\"\nimport DataTable from \"react-data-table-component\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport DeleteIcon from \"@material-ui/icons/Delete\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Grid from \"@material-ui/core/Grid\"\nimport SampleGrid from \"../SampleGrid\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport AppsIcon from \"@material-ui/icons/Apps\"\nimport SlideshowIcon from \"@material-ui/icons/Slideshow\"\nimport TableChartIcon from \"@material-ui/icons/TableChart\"\nimport Box from \"@material-ui/core/Box\"\nimport ImportIcon from \"@material-ui/icons/Publish\"\nimport ImportPage from \"../ImportPage\"\nimport TransformPage from \"../TransformPage\"\nimport useIsDesktop from \"../../utils/use-is-desktop.js\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  padding: 16,\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  boxSizing: \"border-box\",\n})\n\nconst SampleCounter = styled(\"div\")({\n  fontSize: 14,\n  color: colors.grey[600],\n  display: \"flex\",\n  justifyContent: \"flex-end\",\n  alignItems: \"center\",\n  flexGrow: 1,\n})\n\nconst ExpandedRowContainer = styled(\"div\")({\n  padding: 8,\n  border: \"#888 solid 1px\",\n  borderTop: \"none\",\n  borderRadius: 4,\n  borderTopLeftRadius: 0,\n  borderTopRightRadius: 0,\n  boxShadow: \"inset 0 3px 3px rgba(0,0,0,0.2)\",\n})\nconst ExpandedRowTitle = styled(\"div\")({\n  fontSize: 11,\n  fontWeight: \"bold\",\n})\nconst ExpandedRowCode = styled(\"pre\")({ whiteSpace: \"pre-wrap\", fontSize: 11 })\n\nconst ExpandedRow = ({ data }) => {\n  const { annotation, ...input } = data\n\n  return (\n    <ExpandedRowContainer>\n      <Grid spacing={2} container>\n        <Grid item xs={6}>\n          <ExpandedRowTitle>samples[{data.index}]:</ExpandedRowTitle>\n          <ExpandedRowCode>{JSON.stringify(input, null, \"  \")}</ExpandedRowCode>\n        </Grid>\n        <Grid item xs={6}>\n          <ExpandedRowTitle>samples[{data.index}].annotation:</ExpandedRowTitle>\n          <ExpandedRowCode>\n            {JSON.stringify(annotation, null, \"  \")}\n          </ExpandedRowCode>\n        </Grid>\n      </Grid>\n    </ExpandedRowContainer>\n  )\n}\n\nexport const SamplesView = ({\n  file,\n  dataset,\n  openSampleInputEditor,\n  openSampleLabelEditor,\n  deleteSample,\n  onChangeDataset,\n  onChangeFile,\n  authConfig,\n  user,\n}) => {\n  const isDesktop = useIsDesktop()\n  const [currentTab, changeTabState] = useState(\n    (dataset.samples || []).length === 0\n      ? \"import\"\n      : window.localStorage.lastSampleTab || \"grid\"\n  )\n  const changeTab = (tab) => {\n    changeTabState(tab)\n    window.localStorage.lastSampleTab = tab\n  }\n  const columns = useMemo(() => {\n    if (!dataset.samples) return []\n    const columns = [\n      {\n        name: \"Index\",\n        selector: \"index\",\n        sortable: true,\n      },\n    ]\n    const knownKeys = new Set()\n    for (const td of dataset.samples) {\n      for (const key in td) {\n        if (!knownKeys.has(key)) {\n          columns.push({\n            name: key,\n            selector: key,\n            cell: (row) =>\n              typeof row[key] !== \"object\"\n                ? row[key]\n                : JSON.stringify(row[key]).slice(0, 30) + \"...\",\n          })\n          knownKeys.add(key)\n        }\n      }\n    }\n    columns.push({\n      name: \"Edit\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised onClick={() => openSampleInputEditor(row.index)}>\n          <EditIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    columns.push({\n      name: \"Label\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised onClick={() => openSampleLabelEditor(row.index)}>\n          <BorderColorIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    columns.push({\n      name: \"Delete\",\n      button: true,\n      cell: (row) => (\n        <IconButton raised primary onClick={() => deleteSample(row.index)}>\n          <DeleteIcon style={{ width: 20, height: 20 }} />\n        </IconButton>\n      ),\n    })\n    return columns\n  }, [\n    dataset.samples,\n    deleteSample,\n    openSampleInputEditor,\n    openSampleLabelEditor,\n  ])\n\n  const data = useMemo(() => {\n    if (!dataset.samples) return []\n    return dataset.samples.map((td, i) => ({\n      ...td,\n      index: i,\n    }))\n  }, [dataset.samples])\n  return (\n    <Container>\n      <Box display=\"flex\">\n        <Tabs value={currentTab} onChange={(e, newTab) => changeTab(newTab)}>\n          <Tab icon={<ImportIcon />} label=\"Import\" value=\"import\" />\n          <Tab icon={<SlideshowIcon />} label=\"Transform\" value=\"transform\" />\n          <Tab icon={<AppsIcon />} label=\"Grid\" value=\"grid\" />\n          <Tab icon={<TableChartIcon />} label=\"Table\" value=\"table\" />\n        </Tabs>\n        <SampleCounter>\n          {(dataset.samples || []).length} Samples\n          <br />\n          {(dataset.samples || []).filter((s) => s.annotation).length} Labels\n        </SampleCounter>\n      </Box>\n      <Box paddingTop={2} />\n      <Box flexGrow={1}>\n        {currentTab === \"import\" && (\n          <ImportPage\n            file={file}\n            isDesktop={isDesktop}\n            onChangeFile={(file) => onChangeFile(file)}\n            onImportPageShouldExit={() => changeTab(\"grid\")}\n            onChangeDataset={(newOHA) => onChangeDataset(newOHA)}\n            dataset={dataset}\n            authConfig={authConfig}\n            user={user}\n          />\n        )}\n        {currentTab === \"transform\" && (\n          <TransformPage\n            isDesktop={isDesktop}\n            dataset={dataset}\n            onChangeDataset={(dataset, shouldViewChange) => {\n              onChangeDataset(dataset)\n              if (shouldViewChange) {\n                changeTab(\"grid\")\n              }\n            }}\n          />\n        )}\n        {currentTab === \"grid\" && (\n          <SampleGrid\n            count={(dataset.samples || []).length}\n            samples={dataset.samples || []}\n            completed={(dataset.samples || []).map((s) =>\n              Boolean(s.annotation)\n            )}\n            onClick={(sampleIndex) => {\n              openSampleLabelEditor(sampleIndex)\n            }}\n          />\n        )}\n        {currentTab === \"table\" && (\n          <DataTable\n            title=\"Samples\"\n            expandableRowsComponent={<ExpandedRow />}\n            expandableRows\n            dense\n            columns={columns}\n            data={data}\n            pagination\n            paginationPerPage={10}\n            paginationRowsPerPageOptions={[10, 20, 25, 50, 100, 200]}\n          />\n        )}\n      </Box>\n    </Container>\n  )\n}\nexport default SamplesView\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn, asMutable } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"regionTypesAllowed\",\n      title: \"Region Types Allowed\",\n      description: \"What types of regions can be drawn on the image.\",\n      type: \"multiple-dropdown\",\n      choices: [\"bounding-box\", \"polygon\", \"point\"],\n    },\n    {\n      name: \"multipleRegions\",\n      title: \"Can multiple regions be created?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"multipleRegionLabels\",\n      title: \"Multiple Region Labels Allowed?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Available Labels\",\n      description:\n        \"If you're labeling regions on an image, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () =>\n      asMutable(\n        {\n          multipleRegions: Boolean(\n            iface.multipleRegions || iface.multipleRegions === undefined\n          ),\n          multipleRegionLabels: Boolean(iface.multipleRegionLabels),\n          regionTypesAllowed: iface.regionTypesAllowed,\n          labels:\n            (iface.labels || []).map((a) =>\n              typeof a === \"string\" ? { id: a, description: a } : a\n            ) || [],\n        },\n        { deep: true }\n      ),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\n\nconst maxClusterPresets = {\n  low: 1000,\n  medium: 8000,\n  high: 64000,\n}\nconst maxClusterPresetsRev = Object.entries(maxClusterPresets).reduce(\n  (acc, curr) => {\n    acc[curr[1]] = curr[0]\n    return acc\n  },\n  {}\n)\n\nconst form = {\n  questions: [\n    {\n      name: \"labels\",\n      title: \"Available Labels\",\n      description:\n        \"If you're labeling regions on an image, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n    {\n      name: \"description\",\n      title: \"Sidebar Description\",\n      description: \"Any instructions or notes in markdown.\",\n      type: \"text\",\n    },\n    {\n      name: \"autosegMode\",\n      type: \"dropdown\",\n      title: \"Automatic Segmentation Engine\",\n      choices: [\"simple\", \"autoseg\"],\n    },\n    {\n      name: \"autosegPreset\",\n      type: \"dropdown\",\n      visibleIf: \"{autosegMode}='autoseg'\",\n      title: \"Super Pixel Quality\",\n      choices: [\"low\", \"medium\", \"high\", \"custom\"],\n    },\n    {\n      name: \"autosegMaxClusters\",\n      type: \"slider\",\n      visibleIf: \"{autosegPreset}='custom'\",\n      title: \"Total Super Pixels\",\n      min: 10,\n      max: 100000,\n      step: 10,\n      defaultValue: 1000,\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      description: iface.description,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n      autosegMode: iface.autoSegmentationEngine?.mode,\n      autosegPreset:\n        maxClusterPresetsRev[\n          iface.autoSegmentationEngine?.maxClusters || 1000\n        ] || \"custom\",\n      autosegMaxClusters: iface.autoSegmentationEngine?.maxClusters || 1000,\n    }),\n    [iface]\n  )\n  return (\n    <>\n      <Survey\n        noActions\n        variant=\"flat\"\n        defaultAnswers={defaultAnswers}\n        onQuestionChange={(questionId, newValue, answers) => {\n          onChange({\n            ...iface,\n            description: answers.description,\n            labels: answers.labels,\n            autoSegmentationEngine: {\n              mode: answers.autosegMode,\n              maxClusters:\n                answers.autosegPreset === \"custom\"\n                  ? answers.autosegMaxClusters\n                  : maxClusterPresets[answers.autosegPreset],\n            },\n          })\n        }}\n        form={form}\n      />\n    </>\n  )\n}\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"multiple\",\n      title: \"Allow multiple classifications per image?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description: \"Classifications or tags to be labeled.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      allowMultiple: false,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n    }),\n    [iface.labels]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"multiple\",\n      title: \"Allow Multiple Classifications\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description: \"Classifications or tags to be labeled.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        { cellType: \"text\", name: \"displayName\", title: \"Display Name\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      multiple: false,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, displayName: a, description: a } : a\n        ) || [],\n    }),\n    [iface.labels]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","import React from \"react\"\nimport Survey from \"material-survey/components/Survey\"\n\n// https://gist.github.com/DimazzzZ/4e2a5a6c8c6f67900091#gistcomment-2021620\nconst languages = [\n  { value: \"ab\", text: \"Abkhazian\" },\n  { value: \"aa\", text: \"Afar\" },\n  { value: \"af\", text: \"Afrikaans\" },\n  { value: \"ak\", text: \"Akan\" },\n  { value: \"sq\", text: \"Albanian\" },\n  { value: \"am\", text: \"Amharic\" },\n  { value: \"ar\", text: \"Arabic\" },\n  { value: \"an\", text: \"Aragonese\" },\n  { value: \"hy\", text: \"Armenian\" },\n  { value: \"as\", text: \"Assamese\" },\n  { value: \"av\", text: \"Avaric\" },\n  { value: \"ae\", text: \"Avestan\" },\n  { value: \"ay\", text: \"Aymara\" },\n  { value: \"az\", text: \"Azerbaijani\" },\n  { value: \"bm\", text: \"Bambara\" },\n  { value: \"ba\", text: \"Bashkir\" },\n  { value: \"eu\", text: \"Basque\" },\n  { value: \"be\", text: \"Belarusian\" },\n  { value: \"bn\", text: \"Bengali\" },\n  { value: \"bh\", text: \"Bihari languages\" },\n  { value: \"bi\", text: \"Bislama\" },\n  { value: \"bs\", text: \"Bosnian\" },\n  { value: \"br\", text: \"Breton\" },\n  { value: \"bg\", text: \"Bulgarian\" },\n  { value: \"my\", text: \"Burmese\" },\n  { value: \"ca\", text: \"Catalan, Valencian\" },\n  { value: \"km\", text: \"Central Khmer\" },\n  { value: \"ch\", text: \"Chamorro\" },\n  { value: \"ce\", text: \"Chechen\" },\n  { value: \"ny\", text: \"Chichewa, Chewa, Nyanja\" },\n  { value: \"zh\", text: \"Chinese\" },\n  { value: \"cu\", text: \"Church Slavonic, Old Bulgarian, Old Church Slavonic\" },\n  { value: \"cv\", text: \"Chuvash\" },\n  { value: \"kw\", text: \"Cornish\" },\n  { value: \"co\", text: \"Corsican\" },\n  { value: \"cr\", text: \"Cree\" },\n  { value: \"hr\", text: \"Croatian\" },\n  { value: \"cs\", text: \"Czech\" },\n  { value: \"da\", text: \"Danish\" },\n  { value: \"dv\", text: \"Divehi, Dhivehi, Maldivian\" },\n  { value: \"nl\", text: \"Dutch, Flemish\" },\n  { value: \"dz\", text: \"Dzongkha\" },\n  { value: \"en\", text: \"English\" },\n  { value: \"eo\", text: \"Esperanto\" },\n  { value: \"et\", text: \"Estonian\" },\n  { value: \"ee\", text: \"Ewe\" },\n  { value: \"fo\", text: \"Faroese\" },\n  { value: \"fj\", text: \"Fijian\" },\n  { value: \"fi\", text: \"Finnish\" },\n  { value: \"fr\", text: \"French\" },\n  { value: \"ff\", text: \"Fulah\" },\n  { value: \"gd\", text: \"Gaelic, Scottish Gaelic\" },\n  { value: \"gl\", text: \"Galician\" },\n  { value: \"lg\", text: \"Ganda\" },\n  { value: \"ka\", text: \"Georgian\" },\n  { value: \"de\", text: \"German\" },\n  { value: \"ki\", text: \"Gikuyu, Kikuyu\" },\n  { value: \"el\", text: \"Greek (Modern)\" },\n  { value: \"kl\", text: \"Greenlandic, Kalaallisut\" },\n  { value: \"gn\", text: \"Guarani\" },\n  { value: \"gu\", text: \"Gujarati\" },\n  { value: \"ht\", text: \"Haitian, Haitian Creole\" },\n  { value: \"ha\", text: \"Hausa\" },\n  { value: \"he\", text: \"Hebrew\" },\n  { value: \"hz\", text: \"Herero\" },\n  { value: \"hi\", text: \"Hindi\" },\n  { value: \"ho\", text: \"Hiri Motu\" },\n  { value: \"hu\", text: \"Hungarian\" },\n  { value: \"is\", text: \"Icelandic\" },\n  { value: \"io\", text: \"Ido\" },\n  { value: \"ig\", text: \"Igbo\" },\n  { value: \"id\", text: \"Indonesian\" },\n  {\n    value: \"ia\",\n    text: \"Interlingua (International Auxiliary Language Association)\",\n  },\n  { value: \"ie\", text: \"Interlingue\" },\n  { value: \"iu\", text: \"Inuktitut\" },\n  { value: \"ik\", text: \"Inupiaq\" },\n  { value: \"ga\", text: \"Irish\" },\n  { value: \"it\", text: \"Italian\" },\n  { value: \"ja\", text: \"Japanese\" },\n  { value: \"jv\", text: \"Javanese\" },\n  { value: \"kn\", text: \"Kannada\" },\n  { value: \"kr\", text: \"Kanuri\" },\n  { value: \"ks\", text: \"Kashmiri\" },\n  { value: \"kk\", text: \"Kazakh\" },\n  { value: \"rw\", text: \"Kinyarwanda\" },\n  { value: \"kv\", text: \"Komi\" },\n  { value: \"kg\", text: \"Kongo\" },\n  { value: \"ko\", text: \"Korean\" },\n  { value: \"kj\", text: \"Kwanyama, Kuanyama\" },\n  { value: \"ku\", text: \"Kurdish\" },\n  { value: \"ky\", text: \"Kyrgyz\" },\n  { value: \"lo\", text: \"Lao\" },\n  { value: \"la\", text: \"Latin\" },\n  { value: \"lv\", text: \"Latvian\" },\n  { value: \"lb\", text: \"Letzeburgesch, Luxembourgish\" },\n  { value: \"li\", text: \"Limburgish, Limburgan, Limburger\" },\n  { value: \"ln\", text: \"Lingala\" },\n  { value: \"lt\", text: \"Lithuanian\" },\n  { value: \"lu\", text: \"Luba-Katanga\" },\n  { value: \"mk\", text: \"Macedonian\" },\n  { value: \"mg\", text: \"Malagasy\" },\n  { value: \"ms\", text: \"Malay\" },\n  { value: \"ml\", text: \"Malayalam\" },\n  { value: \"mt\", text: \"Maltese\" },\n  { value: \"gv\", text: \"Manx\" },\n  { value: \"mi\", text: \"Maori\" },\n  { value: \"mr\", text: \"Marathi\" },\n  { value: \"mh\", text: \"Marshallese\" },\n  { value: \"ro\", text: \"Moldovan, Moldavian, Romanian\" },\n  { value: \"mn\", text: \"Mongolian\" },\n  { value: \"na\", text: \"Nauru\" },\n  { value: \"nv\", text: \"Navajo, Navaho\" },\n  { value: \"nd\", text: \"Northern Ndebele\" },\n  { value: \"ng\", text: \"Ndonga\" },\n  { value: \"ne\", text: \"Nepali\" },\n  { value: \"se\", text: \"Northern Sami\" },\n  { value: \"no\", text: \"Norwegian\" },\n  { value: \"nb\", text: \"Norwegian Bokmål\" },\n  { value: \"nn\", text: \"Norwegian Nynorsk\" },\n  { value: \"ii\", text: \"Nuosu, Sichuan Yi\" },\n  { value: \"oc\", text: \"Occitan (post 1500)\" },\n  { value: \"oj\", text: \"Ojibwa\" },\n  { value: \"or\", text: \"Oriya\" },\n  { value: \"om\", text: \"Oromo\" },\n  { value: \"os\", text: \"Ossetian, Ossetic\" },\n  { value: \"pi\", text: \"Pali\" },\n  { value: \"pa\", text: \"Panjabi, Punjabi\" },\n  { value: \"ps\", text: \"Pashto, Pushto\" },\n  { value: \"fa\", text: \"Persian\" },\n  { value: \"pl\", text: \"Polish\" },\n  { value: \"pt\", text: \"Portuguese\" },\n  { value: \"qu\", text: \"Quechua\" },\n  { value: \"rm\", text: \"Romansh\" },\n  { value: \"rn\", text: \"Rundi\" },\n  { value: \"ru\", text: \"Russian\" },\n  { value: \"sm\", text: \"Samoan\" },\n  { value: \"sg\", text: \"Sango\" },\n  { value: \"sa\", text: \"Sanskrit\" },\n  { value: \"sc\", text: \"Sardinian\" },\n  { value: \"sr\", text: \"Serbian\" },\n  { value: \"sn\", text: \"Shona\" },\n  { value: \"sd\", text: \"Sindhi\" },\n  { value: \"si\", text: \"Sinhala, Sinhalese\" },\n  { value: \"sk\", text: \"Slovak\" },\n  { value: \"sl\", text: \"Slovenian\" },\n  { value: \"so\", text: \"Somali\" },\n  { value: \"st\", text: \"Sotho, Southern\" },\n  { value: \"nr\", text: \"South Ndebele\" },\n  { value: \"es\", text: \"Spanish, Castilian\" },\n  { value: \"su\", text: \"Sundanese\" },\n  { value: \"sw\", text: \"Swahili\" },\n  { value: \"ss\", text: \"Swati\" },\n  { value: \"sv\", text: \"Swedish\" },\n  { value: \"tl\", text: \"Tagalog\" },\n  { value: \"ty\", text: \"Tahitian\" },\n  { value: \"tg\", text: \"Tajik\" },\n  { value: \"ta\", text: \"Tamil\" },\n  { value: \"tt\", text: \"Tatar\" },\n  { value: \"te\", text: \"Telugu\" },\n  { value: \"th\", text: \"Thai\" },\n  { value: \"bo\", text: \"Tibetan\" },\n  { value: \"ti\", text: \"Tigrinya\" },\n  { value: \"to\", text: \"Tonga (Tonga Islands)\" },\n  { value: \"ts\", text: \"Tsonga\" },\n  { value: \"tn\", text: \"Tswana\" },\n  { value: \"tr\", text: \"Turkish\" },\n  { value: \"tk\", text: \"Turkmen\" },\n  { value: \"tw\", text: \"Twi\" },\n  { value: \"ug\", text: \"Uighur, Uyghur\" },\n  { value: \"uk\", text: \"Ukrainian\" },\n  { value: \"ur\", text: \"Urdu\" },\n  { value: \"uz\", text: \"Uzbek\" },\n  { value: \"ve\", text: \"Venda\" },\n  { value: \"vi\", text: \"Vietnamese\" },\n  { value: \"vo\", text: \"Volap_k\" },\n  { value: \"wa\", text: \"Walloon\" },\n  { value: \"cy\", text: \"Welsh\" },\n  { value: \"fy\", text: \"Western Frisian\" },\n  { value: \"wo\", text: \"Wolof\" },\n  { value: \"xh\", text: \"Xhosa\" },\n  { value: \"yi\", text: \"Yiddish\" },\n  { value: \"yo\", text: \"Yoruba\" },\n  { value: \"za\", text: \"Zhuang, Chuang\" },\n  { value: \"zu\", text: \"Zulu\" },\n]\n\nconst form = {\n  questions: [\n    {\n      name: \"transcriptionType\",\n      title: \"Transcription Type\",\n      type: \"dropdown\",\n      choices: [\"simple\", \"proper\"],\n    },\n    {\n      name: \"phraseBank\",\n      title: \"Phrase Bank\",\n      description: \"URL of single-column CSV or TXT file with allowed phrases\",\n      type: \"text\",\n    },\n    {\n      name: \"onlyUseWordsInPhraseBank\",\n      title: \"Only Use Words In Phrase Bank\",\n      type: \"boolean\",\n    },\n    {\n      name: \"language\",\n      title: \"Language\",\n      type: \"dropdown\",\n      // https://gist.github.com/DimazzzZ/4e2a5a6c8c6f67900091#gistcomment-2858621\n      choices: languages,\n    },\n    {\n      name: \"description\",\n      title: \"Description\",\n      type: \"multiline-text\",\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      onQuestionChange={(questionId, newValue, answers) => {\n        if (newValue.value) {\n          onChange({ ...iface, [questionId]: newValue.value })\n        } else {\n          onChange({ ...iface, [questionId]: newValue })\n        }\n      }}\n      form={form}\n    />\n  )\n}\n","import React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    // TODO uncomment when description can be seen in the interface somewhere\n    // {\n    //   name: \"description\",\n    //   title: \"Description\",\n    //   type: \"multiline-text\",\n    // },\n    // TODO enable when we support overlap\n    // {\n    //   name: \"overlapAllowed\",\n    //   title: \"Overlap Allowed\",\n    //   type: \"boolean\",\n    // },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      type: \"matrixdynamic\",\n      hasOther: true,\n      columns: [\n        {\n          cellType: \"text\",\n          name: \"id\",\n          title: \"ID\",\n        },\n        {\n          cellType: \"text\",\n          name: \"displayName\",\n          title: \"Display Name\",\n        },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      description: iface.description,\n      overlapAllowed: Boolean(\n        iface.overlapAllowed || iface.overlapAllowed === undefined\n      ),\n      labels: (iface.labels || []).map((column) =>\n        typeof column === \"string\"\n          ? {\n              id: column,\n              displayName: column,\n              description: column,\n            }\n          : column\n      ),\n    }),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n      defaultAnswers={defaultAnswers}\n    />\n  )\n}\n","// @flow\n\nimport React, { useRef, useState } from \"react\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Menu from \"@material-ui/core/Menu\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\nimport CancelIcon from \"@material-ui/icons/Cancel\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Survey from \"material-survey/components/Survey\"\nimport Grid from \"@material-ui/core/Grid\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ButtonsContainer = styled(\"div\")({\n  textAlign: \"right\",\n})\nconst NoQuestions = styled(\"div\")({\n  fontSize: 18,\n  color: colors.grey[500],\n  fontWeight: \"bold\",\n  textAlign: \"center\",\n  padding: 16,\n})\n\nconst Question = styled(\"div\")({\n  position: \"relative\",\n  padding: 16,\n  margin: 16,\n  borderLeft: `4px solid ${colors.blue[400]}`,\n  // backgroundColor: colors.grey[50],\n  borderRadius: 4,\n  paddingRight: 64,\n  \"& .quitButton\": {\n    position: \"absolute\",\n    right: 4,\n    top: 4,\n  },\n  \"& > *\": {\n    margin: 8,\n  },\n})\nconst PreviewHeader = styled(\"div\")({\n  fontSize: 12,\n  fontWeight: \"bold\",\n  color: colors.grey[600],\n  textTransform: \"uppercase\",\n  margin: 16,\n  marginBottom: 32,\n})\n\nconst StyledButton = styled(Button)({\n  position: \"relative\",\n  \"& .icon\": {\n    marginRight: 8,\n    opacity: 0.7,\n  },\n})\n\nexport default ({ iface, onChange }) => {\n  const anchorEl = useRef()\n  const [menuOpen, changeMenuOpen] = useState(false)\n  const { questions = [] } = iface.surveyjs || {}\n\n  const { t } = useTranslation()\n\n  return (\n    <div>\n      {questions.length === 0 ? (\n        <NoQuestions>No Inputs, Click Add Input Below</NoQuestions>\n      ) : (\n        questions.map((q, i) => (\n          <Question key={i}>\n            <div style={{ display: \"flex\" }}>\n              <TextField\n                variant=\"outlined\"\n                label=\"Name / Identifier\"\n                value={q.name || \"\"}\n                onChange={(e) => {\n                  onChange(\n                    setIn(\n                      iface,\n                      [\"surveyjs\", \"questions\", i, \"name\"],\n                      e.target.value\n                    )\n                  )\n                }}\n              />\n              <TextField\n                style={{ marginLeft: 8, flexGrow: 1 }}\n                variant=\"outlined\"\n                label=\"Title / Instruction\"\n                value={q.title || \"\"}\n                onChange={(e) => {\n                  onChange(\n                    setIn(\n                      iface,\n                      [\"surveyjs\", \"questions\", i, \"title\"],\n                      e.target.value\n                    )\n                  )\n                }}\n              />\n            </div>\n            <Grid container>\n              <Grid item xs={6}>\n                {q.choices && (\n                  <TextField\n                    style={{\n                      marginTop: 8,\n                      paddingRight: 8,\n                      boxSizing: \"border-box\",\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                    label=\"Choices (One per Line)\"\n                    defaultValue={q.choices.join(\"\\n\") || \"\"}\n                    onChange={(e) => {\n                      onChange(\n                        setIn(\n                          iface,\n                          [\"surveyjs\", \"questions\", i, \"choices\"],\n                          e.target.value.split(\"\\n\")\n                        )\n                      )\n                    }}\n                    multiline\n                    rows={6}\n                  />\n                )}\n              </Grid>\n              <Grid item xs={6}>\n                <PreviewHeader>Preview</PreviewHeader>\n                <Survey\n                  noActions\n                  variant=\"flat\"\n                  key={q}\n                  form={{ questions: [q] }}\n                />\n              </Grid>\n            </Grid>\n            <IconButton\n              className=\"quitButton\"\n              onClick={() => {\n                onChange(\n                  setIn(\n                    iface,\n                    [\"surveyjs\", \"questions\"],\n                    [...questions.slice(0, i), ...questions.slice(i + 1)]\n                  )\n                )\n              }}\n            >\n              <CancelIcon />\n            </IconButton>\n          </Question>\n        ))\n      )}\n      <ButtonsContainer>\n        <StyledButton onClick={(e) => changeMenuOpen(true)} ref={anchorEl}>\n          <AddCircleIcon className=\"icon\" />\n          {t(\"add-input\")}\n        </StyledButton>\n      </ButtonsContainer>\n      <Menu\n        anchorEl={anchorEl && anchorEl.current}\n        open={menuOpen}\n        onClose={() => changeMenuOpen(false)}\n      >\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                ((iface.surveyjs || {}).questions || []).concat([\n                  {\n                    name: \"input\" + questions.length,\n                    type: \"text\",\n                    title: \"New Text Input\",\n                  },\n                ])\n              )\n            )\n          }}\n        >\n          {t(\"text-input\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.surveyjs.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"radiogroup\",\n                  title: \"New Exclusive Choice Input\",\n                  choices: [\"Yes\", \"Maybe\", \"No\"],\n                })\n              )\n            )\n          }}\n        >\n          {t(\"exclusive-choice\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.surveyjs.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"checkbox\",\n                  title: \"New Checkbox Input\",\n                  choices: [\"A\", \"B\", \"C\"],\n                })\n              )\n            )\n          }}\n        >\n          Checkboxes\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                iface.surveyjs.questions.concat({\n                  name: \"input\" + questions.length,\n                  type: \"boolean\",\n                  title: \"New Boolean Input\",\n                })\n              )\n            )\n          }}\n        >\n          Boolean\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                (iface.questions || []).concat({\n                  name: \"input\" + questions.length,\n                  type: \"dropdown\",\n                  title: \"New Dropdown Input\",\n                  choices: [\"A\", \"B\", \"C\"],\n                })\n              )\n            )\n          }}\n        >\n          {t(\"drop-down-autocomplete\")}\n        </MenuItem>\n        <MenuItem\n          onClick={() => {\n            changeMenuOpen(false)\n            onChange(\n              setIn(\n                iface,\n                [\"surveyjs\", \"questions\"],\n                iface.surveyjs.questions.concat([\n                  {\n                    name: \"input\" + questions.length,\n                    type: \"multiple-dropdown\",\n                    title: \"New Multiple Dropdown Input\",\n                    choices: [\"A\", \"B\", \"C\"],\n                  },\n                ])\n              )\n            )\n          }}\n        >\n          {t(\"multiple-item-dropdown-autocomplete\")}\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n","import React from \"react\"\nimport ConfigureInterface from \"../ConfigureInterface\"\nimport { styled } from \"@material-ui/core/styles\"\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\"\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\"\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { setIn } from \"seamless-immutable\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Fields = styled(\"div\")({})\nconst StyledExpansionPanel = styled(ExpansionPanel)({\n  marginTop: 16,\n  border: \"2px solid #000\",\n})\nconst StyledButton = styled(Button)({\n  width: \"100%\",\n  margin: 16,\n  marginLeft: 0,\n})\n\nexport default ({ iface, onChange }) => {\n  const { t } = useTranslation()\n\n  return (\n    <React.Fragment>\n      <Fields>\n        {(iface.fields || []).map((f, fieldIndex) => (\n          <StyledExpansionPanel key={fieldIndex}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n              {f.fieldName}\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>\n              <Box display=\"flex\" flexDirection=\"column\">\n                <TextField\n                  label=\"Field Name\"\n                  value={f.fieldName}\n                  onChange={(e) => {\n                    onChange(\n                      setIn(\n                        [\"fields\", fieldIndex, \"fieldName\"],\n                        e.target.value,\n                        iface\n                      )\n                    )\n                  }}\n                />\n                <ConfigureInterface\n                  isNested\n                  dataset={{ interface: f.interface }}\n                  onChange={(newFieldInterface) => {\n                    onChange({\n                      ...iface,\n                      fields: iface.fields.map((field) =>\n                        field.fieldName === f.fieldName\n                          ? { ...f, interface: newFieldInterface }\n                          : field\n                      ),\n                    })\n                  }}\n                />\n                <Button\n                  onClick={() => {\n                    onChange({\n                      ...iface,\n                      fields: iface.fields.filter(\n                        ({ fieldName }) => fieldName !== f.fieldName\n                      ),\n                    })\n                  }}\n                >\n                  {t(\"remove-field\")}\n                </Button>\n              </Box>\n            </ExpansionPanelDetails>\n          </StyledExpansionPanel>\n        ))}\n        <StyledButton\n          onClick={() => {\n            onChange(\n              setIn(\n                iface,\n                [\"fields\"],\n                (iface.fields || []).concat({\n                  fieldOrder: (iface.fields || []).length,\n                  fieldName: \"New Field\",\n                  interface: {\n                    type: \"empty\",\n                  },\n                })\n              )\n            )\n          }}\n        >\n          {t(\"add-new-field\")}\n        </StyledButton>\n      </Fields>\n    </React.Fragment>\n  )\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst ExplanationTextHeader = styled(\"div\")({\n  textAlign: \"center\",\n  paddingTop: 30,\n  paddingBottom: 50,\n  userSelect: \"none\",\n})\n\nconst ExplanationText = styled(\"h3\")({\n  fontWeight: \"bold\",\n  color: colors.grey[500],\n})\n\nconst GithubLink = styled(\"a\")({\n  color: colors.blue[500],\n})\n\nconst Configure3D = () => {\n  const { t } = useTranslation()\n\n  return (\n    <ExplanationTextHeader>\n      <ExplanationText>\n        {t(\"configure-3d-explanation-text-part-1\")}{\" \"}\n        <GithubLink\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href=\"https://github.com/UniversalDataTool/universal-data-tool/issues/20\"\n        >\n          this\n        </GithubLink>{\" \"}\n        {t(\"github-issue\")}.\n      </ExplanationText>\n    </ExplanationTextHeader>\n  )\n}\n\nexport default Configure3D\n","// @flow\nimport React, { useMemo } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport { setIn } from \"seamless-immutable\"\n\nconst form = {\n  questions: [\n    {\n      name: \"regionTypesAllowed\",\n      title: \"Region Types Allowed\",\n      description: \"What types of regions can be drawn on the image.\",\n      type: \"multiple-dropdown\",\n      choices: [\"bounding-box\", \"polygon\", \"point\"],\n    },\n    {\n      name: \"multipleRegions\",\n      title: \"Can multiple regions be created?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"multipleRegionLabels\",\n      title: \"Multiple Region Labels Allowed?\",\n      type: \"boolean\",\n    },\n    {\n      name: \"labels\",\n      title: \"Labels\",\n      description:\n        \"If you're labeling regions on an video frames, these are the allowed classifications or tags.\",\n      type: \"matrixdynamic\",\n      columns: [\n        { cellType: \"text\", name: \"id\", title: \"id\" },\n        {\n          cellType: \"text\",\n          name: \"description\",\n          title: \"Description (optional)\",\n        },\n      ],\n    },\n  ],\n}\n\nexport default ({ iface, onChange }) => {\n  const defaultAnswers = useMemo(\n    () => ({\n      multipleRegions: Boolean(\n        iface.multipleRegions || iface.multipleRegions === undefined\n      ),\n      multipleRegionLabels: Boolean(iface.multipleRegionLabels),\n      regionTypesAllowed: iface.regionTypesAllowed,\n      labels:\n        (iface.labels || []).map((a) =>\n          typeof a === \"string\" ? { id: a, description: a } : a\n        ) || [],\n    }),\n    [iface]\n  )\n  return (\n    <Survey\n      noActions\n      variant=\"flat\"\n      defaultAnswers={defaultAnswers}\n      onQuestionChange={(questionId, newValue, answers) => {\n        onChange(setIn(iface, [questionId], newValue))\n      }}\n      form={form}\n    />\n  )\n}\n","import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\nimport enTranslation from \"./locales/en/translation.json\"\nimport frTranslation from \"./locales/fr/translations.json\"\nimport cnTranslation from \"./locales/cn/translations.json\"\n\nimport LanguageDetector from \"i18next-browser-languagedetector\"\n// not like to use this?\n// have a look at the Quick start guide\n// for passing in lng and translations on init\n\ni18n\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    },\n\n    resources: {\n      fr: {\n        translation: frTranslation,\n      },\n      en: {\n        translation: enTranslation,\n      },\n      cn: {\n        translation: cnTranslation,\n      },\n    },\n  })\n\nexport default i18n\n","export default function getTaskDescription(samplesItem) {\n  const { description, imageUrl, url, pdfUrl } = samplesItem\n  if (description) return description\n  if (imageUrl) return `![${imageUrl}](${imageUrl})`\n  if (pdfUrl)\n    return (\n      `[PDF Link](${pdfUrl})` +\n      `<object data=\"${pdfUrl.replace(\n        \"http://\",\n        \"https://\"\n      )}\" type=\"application/pdf\" width=\"100%\" height=\"600px\"></object>`\n    )\n  if (url) return `Use this [Link](${url})`\n  return null\n}\n","// @flow\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  linkButtonContainer: {\n    marginLeft: 8,\n    marginRight: 8,\n  },\n  linkButton: {\n    textTransform: \"none\",\n    cursor: \"pointer\",\n    textDecoration: \"underline\",\n  },\n})\n\nexport default ({ onClick, text }: { onClick: Function, text: string }) => {\n  const c = useStyles()\n  return (\n    <span className={c.linkButtonContainer}>\n      (\n      <span onClick={onClick} className={c.linkButton}>\n        {text}\n      </span>\n      )\n    </span>\n  )\n}\n","// @flow\n\nimport React, { useState } from \"react\"\nimport { makeStyles } from \"@material-ui/core\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Button from \"@material-ui/core/Button\"\nimport ReactMarkdown from \"react-markdown\"\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport LeftIcon from \"@material-ui/icons/KeyboardArrowLeft\"\nimport CircleIcon from \"@material-ui/icons/RadioButtonUnchecked\"\nimport CheckCircle from \"@material-ui/icons/CheckCircle\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport LinkButton from \"./LinkButton\"\nimport range from \"lodash/range\"\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: \"#fff\",\n    marginTop: 40,\n  },\n  footerContent: {\n    alignItems: \"center\",\n    padding: 20,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n  },\n  footerBorder: {\n    borderTop: \"1px solid #ccc\",\n    marginLeft: 20,\n    marginRight: 20,\n  },\n  footerCount: {\n    display: \"inline-flex\",\n  },\n  allSamplesButton: {\n    color: \"#fff\",\n    border: \"1px solid rgba(255,255,255,0.5)\",\n    marginRight: 10,\n    paddingLeft: 8,\n  },\n  sampleIcon: {\n    marginRight: 8,\n  },\n  menuButton: {\n    marginRight: 8,\n    color: \"#fff\",\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  buttons: {\n    \"& > *\": {\n      margin: 4,\n    },\n  },\n  description: {\n    padding: 10,\n    \"& img\": {\n      maxWidth: \"calc(100% - 16px)\",\n      marginLeft: 8,\n      marginRight: 8,\n      maxHeight: 600,\n    },\n  },\n  sectionHeader: {\n    fontWeight: 700,\n    fontSize: 12,\n    padding: 10,\n    paddingTop: 16,\n    textTransform: \"uppercase\",\n    color: colors.grey[600],\n  },\n  content: {\n    padding: 10,\n    // minHeight: \"calc(100vh - 200px)\"\n  },\n}))\n\nexport const SampleContainer = ({\n  hideDescription: defaultHideDescription = window.localStorage.getItem(\n    \"hideDescription\"\n  ) === '\"true\"',\n  lastSampleExitText,\n  onExit,\n  requireCompleteToPressNext = false,\n  samples,\n  minContentHeight,\n  currentSampleIndex,\n  totalSamples,\n  onChangeSample,\n  taskOutput = [],\n  description,\n  children,\n}) => {\n  const c = useStyles()\n  const [hideDescription, changeHideDescriptionState] = useState(\n    defaultHideDescription\n  )\n  const changeHideDescription = (hide) => {\n    window.localStorage.setItem(\n      \"hideDescription\",\n      `\"${hide ? \"true\" : \"false\"}\"`\n    )\n    changeHideDescriptionState(hide)\n  }\n\n  const [sampleDrawerOpen, changeSampleDrawerOpen] = useState(false)\n  return (\n    <>\n      <Grid container>\n        {!hideDescription && (\n          <Grid item xs={12} sm={12} md={6}>\n            <div className={c.sectionHeader}>\n              Description\n              <LinkButton\n                onClick={() => changeHideDescription(true)}\n                text=\"hide\"\n              />\n            </div>\n            <div className={c.description}>\n              <ReactMarkdown escapeHtml={false} source={description} />\n            </div>\n          </Grid>\n        )}\n        <Grid item xs={12} sm={12} md={hideDescription ? 12 : 6}>\n          <div className={c.sectionHeader}>\n            Sample {currentSampleIndex + 1}/{totalSamples}\n            {hideDescription && (\n              <LinkButton\n                onClick={() => changeHideDescription(false)}\n                text=\"show description\"\n              />\n            )}\n            {totalSamples > 1 && (\n              <LinkButton\n                onClick={() => changeSampleDrawerOpen(true)}\n                text=\"view all\"\n              />\n            )}\n            {onExit && (\n              <LinkButton onClick={() => onExit()} text=\"exit without saving\" />\n            )}\n          </div>\n          <div style={{ minHeight: minContentHeight }} className={c.content}>\n            {children}\n          </div>\n        </Grid>\n        {totalSamples > 1 && (\n          <Grid item xs={12}>\n            <div className={c.footer}>\n              <div className={c.footerBorder} />\n              <div className={c.footerContent}>\n                <Button\n                  onClick={() =>\n                    onChangeSample(\n                      (currentSampleIndex - 1 + totalSamples) % totalSamples\n                    )\n                  }\n                >\n                  <LeftIcon /> Prev Sample\n                </Button>\n                <Button\n                  onClick={() => changeSampleDrawerOpen(true)}\n                  className={c.footerCount}\n                >\n                  {currentSampleIndex + 1} / {totalSamples}\n                </Button>\n                <Button\n                  disabled={\n                    requireCompleteToPressNext &&\n                    !taskOutput[currentSampleIndex]\n                  }\n                  onClick={() =>\n                    onChangeSample((currentSampleIndex + 1) % totalSamples)\n                  }\n                >\n                  {requireCompleteToPressNext && !taskOutput[currentSampleIndex]\n                    ? \"Save to Continue\"\n                    : \"Next Sample\"}\n                  <RightIcon />\n                </Button>\n              </div>\n            </div>\n          </Grid>\n        )}\n      </Grid>\n      <Drawer\n        open={sampleDrawerOpen}\n        anchor=\"left\"\n        onClose={() => changeSampleDrawerOpen(false)}\n      >\n        <List style={{ minWidth: 300 }}>\n          <ListSubheader>Samples</ListSubheader>\n          {range(0, totalSamples).map((i) => (\n            <ListItem\n              style={{\n                backgroundColor:\n                  i === currentSampleIndex ? colors.grey[200] : undefined,\n              }}\n              button\n              onClick={() => onChangeSample(i)}\n            >\n              <ListItemIcon\n                style={{\n                  color:\n                    i === currentSampleIndex ? colors.blue[500] : undefined,\n                }}\n              >\n                {taskOutput[i] ? <CheckCircle /> : <CircleIcon />}\n              </ListItemIcon>\n              <ListItemText>Sample {i + 1}</ListItemText>\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n    </>\n  )\n}\n\nexport default SampleContainer\n","import React, { useState } from \"react\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport NLPAnnotator from \"react-nlp-annotate/components/NLPAnnotator\"\n\nexport const TextClassification = (props) => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useState(0)\n  const { annotation } = props.samples[currentSampleIndex]\n  // TODO remove legacy support for availableLabels\n  if (!props.interface.labels && props.interface.availableLabels) {\n    props.interface.labels = props.interface.availableLabels\n  }\n  const initialLabels = annotation\n    ? typeof annotation === \"string\"\n      ? [annotation]\n      : annotation\n    : undefined\n  if (!props.interface.labels) {\n    throw new Error(\"Labels not defined. Try defining some labels in Setup\")\n  }\n  let labels = props.interface.labels\n    .map((l) =>\n      typeof l === \"string\" ? { id: l, description: l, displayName: l } : l\n    )\n    .map((l) => (!l.displayName ? { ...l, displayName: l.id } : l))\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples}\n      description={\n        getTaskDescription(props.samples[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={(sampleIndex) => changeCurrentSampleIndex(sampleIndex)}\n    >\n      <NLPAnnotator\n        key={(props.sampleIndex || 0) + currentSampleIndex}\n        type=\"label-document\"\n        labels={labels}\n        multipleLabels={props.interface.multiple}\n        document={props.samples[currentSampleIndex].document}\n        initialLabels={initialLabels}\n        onFinish={(result) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, result)\n          if (props.containerProps.onExit)\n            props.containerProps.onExit(\"go-to-next\")\n        }}\n      />\n    </SampleContainer>\n  )\n}\n\nexport default TextClassification\n","import React, { useState } from \"react\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport NLPAnnotator from \"react-nlp-annotate/components/NLPAnnotator\"\n\nconst simpleSequenceToEntitySequence = (simpleSeq) => {\n  const entSeq = []\n  let charsPassed = 0\n  for (const seq of simpleSeq) {\n    if (seq.label) {\n      entSeq.push({\n        text: seq.text,\n        label: seq.label,\n        start: charsPassed,\n        end: charsPassed + seq.text.length,\n      })\n    }\n    charsPassed += seq.text.length\n  }\n  return entSeq\n}\n\nconst entitySequenceToSimpleSeq = (doc, entSeq) => {\n  if (!entSeq) return undefined\n  const simpleSeq = []\n  entSeq = [...entSeq]\n  entSeq.sort((a, b) => a.start - b.start)\n  let nextEntity = 0\n  for (let i = 0; i < doc.length; i++) {\n    if ((entSeq[nextEntity] || {}).start === i) {\n      simpleSeq.push({\n        text: entSeq[nextEntity].text,\n        label: entSeq[nextEntity].label,\n      })\n      i = entSeq[nextEntity].end\n      nextEntity += 1\n    } else {\n      if (simpleSeq.length === 0 || simpleSeq[simpleSeq.length - 1].label) {\n        simpleSeq.push({ text: doc[i] })\n      } else {\n        simpleSeq[simpleSeq.length - 1].text += doc[i]\n      }\n    }\n  }\n  return simpleSeq\n}\n\nexport const TextEntityRecognition = (props) => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useState(0)\n  const initialSequence = props.samples[currentSampleIndex].annotation\n    ? entitySequenceToSimpleSeq(\n        props.samples[currentSampleIndex].document,\n        props.samples[currentSampleIndex].annotation.entities\n      )\n    : undefined\n\n  if (!props.interface.labels && !props.interface.availableLabels) {\n    throw new Error(\"Labels not defined. Try adding some labels in setup.\")\n  }\n\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples.map((s) => s.annotation)}\n      description={\n        getTaskDescription(props.samples[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={(sampleIndex) => changeCurrentSampleIndex(sampleIndex)}\n    >\n      <NLPAnnotator\n        key={currentSampleIndex}\n        type=\"label-sequence\"\n        document={props.samples[currentSampleIndex].document}\n        labels={props.interface.labels || props.interface.availableLabels}\n        initialSequence={initialSequence}\n        onFinish={(result) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, {\n            entities: simpleSequenceToEntitySequence(result),\n          })\n          if (props.containerProps.onExit)\n            props.containerProps.onExit(\"go-to-next\")\n        }}\n      />\n    </SampleContainer>\n  )\n}\n\nexport default TextEntityRecognition\n","// @flow\n\n// RIA = React Image Annotate\n\nexport function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nexport function getRandomColor() {\n  var h = getRandomInt(0, 360)\n  var s = 100\n  var l = 50\n  return \"hsl(\"\n    .concat(h.toString(), \",\")\n    .concat(s.toString(), \"%,\")\n    .concat(l.toString(), \"%)\")\n}\n\nexport const rid = () => Math.random().toString().split(\".\")[1]\n\nexport const convertToRIARegionFmt = (region) => {\n  switch (region.regionType) {\n    case \"bounding-box\": {\n      return {\n        id: rid(),\n        cls: region.classification,\n        tags: region.labels,\n        color: region.color || getRandomColor(),\n        type: \"box\",\n        x: region.centerX - region.width / 2,\n        y: region.centerY - region.height / 2,\n        w: region.width,\n        h: region.height,\n      }\n    }\n    case \"point\": {\n      return {\n        id: rid(),\n        type: \"point\",\n        tags: region.labels,\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        x: region.x,\n        y: region.y,\n      }\n    }\n    case \"polygon\": {\n      return {\n        id: rid(),\n        type: \"polygon\",\n        tags: region.labels,\n        cls: region.classification,\n        color: region.color || getRandomColor(),\n        open: false,\n        points: region.points.map((p) => [p.x, p.y]),\n      }\n    }\n    case \"line\":\n    case \"pixel-mask\": {\n      throw new Error(`Unsupported region \"${JSON.stringify(region)}\"`)\n    }\n    default:\n      return null\n  }\n}\n\nexport const convertFromRIARegionFmt = (riaRegion) => {\n  switch (riaRegion.type) {\n    case \"point\": {\n      return {\n        regionType: \"point\",\n        x: riaRegion.x,\n        y: riaRegion.y,\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n      }\n    }\n    case \"box\": {\n      return {\n        regionType: \"bounding-box\",\n        centerX: riaRegion.x + riaRegion.w / 2,\n        centerY: riaRegion.y + riaRegion.h / 2,\n        width: riaRegion.w,\n        height: riaRegion.h,\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n      }\n    }\n    case \"polygon\": {\n      return {\n        regionType: \"polygon\",\n        classification: riaRegion.cls,\n        labels: riaRegion.tags,\n        color: riaRegion.color,\n        points: riaRegion.points.map(([x, y]) => ({ x, y })),\n      }\n    }\n    default:\n      throw new Error(`Unsupported riaRegion \"${JSON.stringify(riaRegion)}\"`)\n  }\n}\n\nexport const convertToRIAImageFmt = ({\n  title,\n  taskDatum: td,\n  index: i,\n  output,\n}) => {\n  td = td || {}\n  const regions = !output\n    ? undefined\n    : Array.isArray(output)\n    ? output.map(convertToRIARegionFmt)\n    : [convertToRIARegionFmt(output)]\n\n  if (td.imageUrl) {\n    return {\n      src: td.imageUrl,\n      name: title || `Sample ${i}`,\n      regions,\n    }\n  } else if (td.videoUrl && td.videoFrameAt !== undefined) {\n    return {\n      src: td.videoUrl,\n      frameTime: td.videoFrameAt,\n      name: title || `Sample ${i}`,\n      regions,\n    }\n  }\n  throw new Error(`Task Datum not supported \"${JSON.stringify(td)}\"`)\n}\n\nexport const convertToRIAKeyframes = (keyframes) => {\n  const newKeyframes = {}\n  for (const key in keyframes) {\n    newKeyframes[key] = {\n      regions: keyframes[key].regions.map(convertToRIARegionFmt),\n    }\n  }\n  return newKeyframes\n}\n","// @flow\n\nimport React, { useState, useMemo } from \"react\"\nimport Annotator from \"react-image-annotate\"\nimport useEventCallback from \"use-event-callback\"\nimport {\n  convertFromRIARegionFmt,\n  convertToRIAImageFmt,\n} from \"../../utils/ria-format.js\"\n\nconst regionTypeToTool = {\n  \"bounding-box\": \"create-box\",\n  polygon: [\"create-polygon\", \"create-expanding-line\"],\n  point: \"create-point\",\n}\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport default ({\n  sampleIndex: globalSampleIndex,\n  interface: iface,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  onSaveTaskOutputItem,\n}) => {\n  // TODO remove legacy \"availableLabels\" support\n  if (iface.availableLabels && !iface.labels) {\n    iface.labels = iface.availableLabels\n  }\n\n  const [selectedIndex, changeSelectedIndex] = useState(0)\n  const [showTags, changeShowTags] = useState(true)\n  const [selectedTool, changeSelectedTool] = useState(\"select\")\n\n  const { regionTypesAllowed = [\"bounding-box\"] } = iface\n\n  const isClassification = !Boolean(iface.multipleRegionLabels)\n  const isPixel = iface.type === \"image_pixel_segmentation\"\n\n  const saveCurrentIndexAnnotation = useEventCallback((output) => {\n    const img = output.images[selectedIndex]\n    onSaveTaskOutputItem(\n      selectedIndex,\n      multipleRegions\n        ? (img.regions || []).map(convertFromRIARegionFmt)\n        : convertToRIAImageFmt((img.regions || [])[0])\n    )\n  })\n\n  const labelProps = useMemo(\n    () =>\n      isPixel\n        ? {\n            regionClsList: [\"background\"]\n              .concat(iface.labels || [])\n              .map((l) => (typeof l === \"string\" ? l : l.id)),\n          }\n        : isClassification\n        ? {\n            regionClsList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          }\n        : {\n            regionTagList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          },\n    [isClassification, iface.labels, isPixel]\n  )\n\n  const multipleRegions =\n    iface.multipleRegions || iface.multipleRegions === undefined\n\n  const onExit = useEventCallback((output, nextAction) => {\n    saveCurrentIndexAnnotation(output)\n    changeShowTags(output.showTags)\n    changeSelectedTool(output.selectedTool)\n    if (containerProps.onExit) containerProps.onExit(nextAction)\n  })\n  const onNextImage = useEventCallback((output) => {\n    if (selectedIndex + 1 >= samples.length) {\n      onExit(output, \"go-to-next\")\n    } else {\n      saveCurrentIndexAnnotation(output)\n      changeSelectedIndex(selectedIndex + 1)\n    }\n  })\n  const onPrevImage = useEventCallback((output) => {\n    if (selectedIndex - 1 < 0) {\n      onExit(output, \"go-to-previous\")\n    } else {\n      saveCurrentIndexAnnotation(output)\n      changeSelectedIndex(selectedIndex - 1)\n    }\n  })\n\n  const images = useMemo(\n    () =>\n      samples.map((taskDatum, index) =>\n        convertToRIAImageFmt({\n          title: containerProps.datasetName,\n          taskDatum,\n          output: samples[index].annotation,\n          index,\n        })\n      ),\n    [samples, containerProps.datasetName]\n  )\n\n  const enabledTools =\n    iface.type === \"image_pixel_segmentation\"\n      ? undefined\n      : useMemo(\n          () =>\n            [\"select\"].concat(\n              regionTypesAllowed\n                .flatMap((rt) => regionTypeToTool[rt])\n                .filter(Boolean)\n            ),\n          [regionTypesAllowed]\n        )\n\n  const allowedArea = useMemo(() => {\n    if (!iface.allowedArea && !samples[selectedIndex].allowedArea)\n      return undefined\n    const { x, y, width: w, height: h } =\n      samples[selectedIndex].allowedArea || iface.allowedArea\n    return { x, y, w, h }\n    // eslint-disable-next-line\n  }, [iface.allowedArea, samples[selectedIndex].allowedArea])\n\n  return (\n    <div\n      style={{\n        height: containerProps.height || \"calc(100% - 70px)\",\n        minHeight: 600,\n        width: \"100%\",\n      }}\n    >\n      <Annotator\n        key={globalSampleIndex}\n        fullImageSegmentationMode={isPixel}\n        selectedImage={samples[selectedIndex].imageUrl}\n        taskDescription={iface.description}\n        showTags={showTags}\n        {...labelProps}\n        autoSegmentationOptions={iface.autoSegmentationEngine}\n        allowedArea={allowedArea}\n        onNextImage={onNextImage}\n        onPrevImage={onPrevImage}\n        enabledTools={enabledTools}\n        selectedTool={selectedTool}\n        images={images}\n        onExit={onExit}\n      />\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport Workspace from \"react-material-workspace-layout/Workspace\"\nimport { styled } from \"@material-ui/core/styles\"\n\nconst HeaderLeftSideContainer = styled(\"div\")({\n  fontSize: 24,\n  fontWeight: \"bold\",\n})\n\nexport default ({\n  children,\n  onNext,\n  onPrev,\n  currentSampleIndex = 0,\n  numberOfSamples = 1,\n  globalSampleIndex = 1,\n  titleContent,\n  onClickHeaderItem,\n}: any) => {\n  const headerItems = useMemo(\n    () =>\n      [\n        (currentSampleIndex > 0 || onPrev) && { name: \"Prev\", onClick: onPrev },\n        (numberOfSamples > currentSampleIndex + 1 || onNext) && {\n          name: \"Next\",\n          onClick: onNext,\n        },\n        { name: \"Save\" },\n      ].filter(Boolean),\n    [currentSampleIndex, numberOfSamples, onNext, onPrev]\n  )\n  return (\n    <Workspace\n      headerLeftSide={\n        titleContent === undefined ? (\n          <Box paddingLeft={2} fontWeight=\"bold\">\n            <HeaderLeftSideContainer>\n              Sample{\" \"}\n              {numberOfSamples > 1\n                ? `${currentSampleIndex + 1} / ${numberOfSamples}`\n                : `${globalSampleIndex}`}\n            </HeaderLeftSideContainer>\n          </Box>\n        ) : (\n          titleContent\n        )\n      }\n      onClickHeaderItem={onClickHeaderItem}\n      headerItems={headerItems}\n      iconSidebarItems={[]}\n      rightSidebarItems={[]}\n    >\n      <Box padding={2} style={{ width: \"100%\" }}>\n        {children}\n      </Box>\n    </Workspace>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect, useMemo } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport without from \"lodash/without\"\nimport WorkspaceContainer from \"../WorkspaceContainer\"\n\nconst brightColors = [\n  colors.blue[600],\n  colors.green[600],\n  colors.red[600],\n  colors.deepOrange[600],\n  colors.pink[600],\n  colors.teal[600],\n  colors.deepPurple[600],\n  colors.indigo[600],\n  colors.blue[600],\n  colors.cyan[600],\n  colors.purple[600],\n]\n\nconst letters = \"abcdefghijklmnopqrstuvwxyz1234567890\".split(\"\")\nconst getRandomColor = (label) => {\n  const hashInt = label.id\n    .split(\"\")\n    .reduce((acc, v, i) => acc + (letters.indexOf(v) + 1), 0)\n  return brightColors[hashInt % brightColors.length]\n}\n\nconst Container = styled(\"div\")({\n  maxWidth: \"100vw\",\n  display: \"flex\",\n  flexDirection: \"column\",\n})\n\nconst ImageContainer = styled(\"div\")({\n  position: \"relative\",\n  display: \"flex\",\n  flexGrow: 1,\n})\n\nconst Image = styled(\"img\")({\n  display: \"inline-block\",\n  position: \"absolute\",\n  left: 0,\n  top: 0,\n  width: \"100%\",\n  height: \"100%\",\n  objectFit: \"contain\",\n})\n\nconst ButtonsContainer = styled(\"div\")({\n  paddingLeft: 50,\n  paddingRight: 50,\n  marginTop: 8,\n  textAlign: \"center\",\n  flexShrink: 0,\n})\n\nconst CheckButton = styled(Button)({\n  margin: 8,\n  color: \"#fff\",\n  fontSize: 18,\n  paddingRight: 16,\n  transition: \"transform 50ms ease\",\n})\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport default ({\n  sampleIndex: globalSampleIndex,\n  interface: iface,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  onSaveTaskOutputItem,\n}) => {\n  // TODO remove legacy \"availableLabels\" support\n  if (iface.availableLabels && !iface.labels) {\n    iface.labels = iface.availableLabels\n  }\n\n  if (!iface.labels)\n    throw new Error(\"No labels defined. Add some labels in Setup to continue.\")\n  const [sampleIndex, changeSampleIndex] = useState(0)\n  const [enlargedLabel, changeEnlargedLabel] = useState(null)\n  const [currentOutput, changeCurrentOutput] = useState(emptyArr)\n  const labels = useMemo(\n    () =>\n      iface.labels.map((l) =>\n        typeof l === \"string\" ? { id: l, description: l } : l\n      ),\n    [iface.labels]\n  )\n\n  const onDone = useEventCallback(() => {\n    if (containerProps.onExit) containerProps.onExit()\n  })\n  const onNextNoSave = useEventCallback(() => {\n    if (containerProps.onExit) {\n      containerProps.onExit(\"go-to-next\")\n    }\n  })\n  const onNext = useEventCallback((newOutput) => {\n    onSaveTaskOutputItem(sampleIndex, newOutput || currentOutput)\n    if (sampleIndex !== samples.length - 1) {\n      changeSampleIndex(sampleIndex + 1)\n    } else {\n      if (containerProps.onExit) containerProps.onExit(\"go-to-next\")\n    }\n  })\n  const onPrev = useEventCallback(() => {\n    if (sampleIndex > 0) {\n      changeSampleIndex(sampleIndex - 1)\n    } else {\n      if (containerProps.onExit) containerProps.onExit(\"go-to-previous\")\n    }\n  })\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      changeEnlargedLabel(null)\n    }, 100)\n    return () => clearTimeout(timeout)\n  }, [enlargedLabel])\n\n  const onClickLabel = useEventCallback((label) => {\n    changeEnlargedLabel(label)\n    let newOutput\n    if ((currentOutput || []).includes(label.id)) {\n      newOutput = without(currentOutput, label.id)\n    } else {\n      if (iface.allowMultiple) {\n        newOutput = currentOutput.concat([label.id])\n      } else {\n        newOutput = label.id\n      }\n    }\n\n    changeCurrentOutput(newOutput)\n    if (!iface.allowMultiple && newOutput.length > 0) {\n      onNext(newOutput)\n    }\n  })\n\n  useEffect(() => {\n    let newOutput = samples[sampleIndex].annotation\n    if (!newOutput) newOutput = []\n    if (typeof newOutput === \"string\") newOutput = [newOutput]\n    changeCurrentOutput(newOutput)\n  }, [sampleIndex, globalSampleIndex, samples])\n\n  const [hotkeyMap, labelKeyMap] = useMemo(() => {\n    const hotkeyMap = {\n      \" \": onNext,\n      backspace: onPrev,\n      enter: onDone,\n      rightarrow: onNext,\n      leftarrow: onPrev,\n    }\n    const labelKeyMap = {}\n    for (let label of labels) {\n      const nextAvailableLetter = label.id\n        .split(\"\")\n        .filter((l) => letters.includes(l))\n        .find((l) => !hotkeyMap[l.toLowerCase()])\n      if (!nextAvailableLetter) continue\n      hotkeyMap[nextAvailableLetter] = () => onClickLabel(label)\n      labelKeyMap[label.id] = nextAvailableLetter\n    }\n    return [hotkeyMap, labelKeyMap]\n  }, [labels, onClickLabel, onDone, onNext, onPrev])\n\n  useEffect(() => {\n    const onKeyDown = (e) => {\n      const key = e.key.toLowerCase()\n      if (hotkeyMap[key]) {\n        hotkeyMap[key]()\n      }\n    }\n    window.addEventListener(\"keydown\", onKeyDown)\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown)\n    }\n  }, [hotkeyMap])\n\n  return (\n    <WorkspaceContainer\n      onNext={onNextNoSave}\n      onPrev={onPrev}\n      onClickHeaderItem={onDone}\n      numberOfSamples={samples.length}\n      currentSampleIndex={sampleIndex}\n      globalSampleIndex={globalSampleIndex}\n    >\n      <Container\n        style={{\n          height: containerProps.height || \"calc(100% - 70px)\",\n          minHeight: 600,\n        }}\n      >\n        <ImageContainer>\n          <Image src={samples[sampleIndex].imageUrl} />\n        </ImageContainer>\n        <ButtonsContainer>\n          {labels.map((label) => (\n            <CheckButton\n              key={label.id}\n              onClick={() => onClickLabel(label)}\n              style={{\n                backgroundColor: getRandomColor(label),\n                transform:\n                  enlargedLabel === label ? \"scale(1.1,1.1)\" : undefined,\n              }}\n            >\n              <Checkbox\n                style={{ color: \"#fff\" }}\n                checked={currentOutput.includes(label.id)}\n              />\n              {label.id}\n              {labelKeyMap[label.id] ? ` (${labelKeyMap[label.id]})` : \"\"}\n            </CheckButton>\n          ))}\n        </ButtonsContainer>\n      </Container>\n    </WorkspaceContainer>\n  )\n}\n","// @flow\n\nimport React, { useMemo } from \"react\"\nimport Annotator from \"react-image-annotate\"\nimport useEventCallback from \"use-event-callback\"\nimport {\n  convertFromRIARegionFmt,\n  convertToRIAKeyframes,\n} from \"../../utils/ria-format.js\"\n\nconst regionTypeToTool = {\n  \"bounding-box\": \"create-box\",\n  polygon: \"create-polygon\",\n  \"full-segmentation\": \"create-polygon\",\n  point: \"create-point\",\n}\n\nconst [emptyObj, emptyArr] = [{}, []]\n\nexport default ({\n  interface: iface,\n  samples = emptyArr,\n  containerProps = emptyObj,\n  onSaveTaskOutputItem,\n}) => {\n  const { regionTypesAllowed = [\"bounding-box\"] } = iface\n\n  const isClassification = !Boolean(iface.multipleRegionLabels)\n\n  const labelProps = useMemo(\n    () =>\n      isClassification\n        ? {\n            regionClsList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          }\n        : {\n            regionTagList: (iface.labels || []).map((l) =>\n              typeof l === \"string\" ? l : l.id\n            ),\n          },\n    [isClassification, iface.labels]\n  )\n\n  const onExit = useEventCallback((output) => {\n    const newKeyframes = {}\n    for (const key in output.keyframes) {\n      newKeyframes[key] = {\n        regions: output.keyframes[key].regions.map(convertFromRIARegionFmt),\n      }\n    }\n    onSaveTaskOutputItem(0, { keyframes: newKeyframes })\n    if (containerProps.onExit) containerProps.onExit()\n  })\n\n  const enabledTools = useMemo(\n    () =>\n      [\"select\"].concat(\n        regionTypesAllowed.map((rt) => regionTypeToTool[rt]).filter(Boolean)\n      ),\n    [regionTypesAllowed]\n  )\n\n  // TODO fix by adding some way of going to the \"next\" video\n  if (samples.length > 1) {\n    return \"Video segmentation is currently limited to only a single video per selection\"\n  }\n\n  if (samples.length === 0) throw new Error(\"No sample data provided selected\")\n  if (!samples[0].videoUrl) throw new Error(\"Sample must have videoUrl\")\n\n  const annotation = samples[0].annotation\n\n  return (\n    <div\n      style={{\n        height: containerProps.height || \"calc(100vh - 70px)\",\n        width: \"100%\",\n        minHeight: 600,\n      }}\n    >\n      <Annotator\n        taskDescription={iface.description}\n        {...labelProps}\n        enabledTools={enabledTools}\n        keyframes={convertToRIAKeyframes(annotation?.keyframes || {})}\n        videoName={samples[0].customId || \"\"}\n        videoTime={0}\n        videoSrc={samples[0].videoUrl}\n        onExit={onExit}\n      />\n    </div>\n  )\n}\n","// @flow weak\n\nimport React, { useState } from \"react\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport NLPAnnotator from \"react-nlp-annotate/components/NLPAnnotator\"\n\nexport default (props) => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useState(0)\n\n  const sample = props.samples[currentSampleIndex]\n\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples.map((s) => s.annotation)}\n      description={\n        getTaskDescription(props.samples[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={(sampleIndex) => changeCurrentSampleIndex(sampleIndex)}\n    >\n      <NLPAnnotator\n        key={(props.sampleIndex || 0) + currentSampleIndex}\n        type=\"transcribe\"\n        audio={sample.audioUrl}\n        phraseBank={props.phraseBank}\n        initialTranscriptionText={sample.annotation || \"\"}\n        onFinish={(result) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, result)\n          if (props.containerProps.onExit)\n            props.containerProps.onExit(\"go-to-next\")\n        }}\n      />\n    </SampleContainer>\n  )\n}\n","import React, { useState } from \"react\"\nimport Survey from \"material-survey/components/Survey\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\n\nexport const DataEntry = (props) => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useState(0)\n  const form =\n    props.samples[currentSampleIndex].surveyjs || props.interface.surveyjs\n  if (!form)\n    throw new Error(\"No survey/form created. Try adding some inputs in Setup\")\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples.map((s) => s.annotation)}\n      description={\n        getTaskDescription(props.samples[currentSampleIndex]) ||\n        props.interface.description\n      }\n      onChangeSample={(sampleIndex) => changeCurrentSampleIndex(sampleIndex)}\n    >\n      <Survey\n        key={(props.sampleIndex || 0) + currentSampleIndex}\n        variant=\"flat\"\n        form={form}\n        defaultAnswers={\n          props.samples[currentSampleIndex].annotation || undefined\n        }\n        completeText=\"Save & Next\"\n        onFinish={(answers) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, answers)\n          if (props.containerProps.onExit)\n            props.containerProps.onExit(\"go-to-next\")\n        }}\n      />\n    </SampleContainer>\n  )\n}\n\nexport default DataEntry\n","// @flow\n\nimport React from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 50,\n    textAlign: \"center\",\n  },\n  title: {\n    margin: 50,\n  },\n  explain: {},\n})\n\nexport default ({ title, description, children }) => {\n  const c = useStyles()\n  return (\n    <div className={c.root}>\n      <Typography variant=\"h4\" component=\"div\" className={c.title}>\n        {title}\n      </Typography>\n      <Typography variant=\"h6\" component=\"div\" className={c.explain}>\n        {description || children}\n      </Typography>\n    </div>\n  )\n}\n","// @flow\n\nimport React from \"react\"\nimport BadOHA from \"../BadOHA\"\n\nexport default () => {\n  return (\n    <BadOHA title=\"No Samples to Show\">\n      Make sure that <code>samples</code> is defined and not empty.\n      <br />\n      <br />\n      Need help setting up? {/*<a href=\"#\">Check out this tutorial.</a>*/}\n    </BadOHA>\n  )\n}\n","import React from \"react\"\n\nimport RemoveRedEye from \"@material-ui/icons/RemoveRedEye\"\nimport TextFormat from \"@material-ui/icons/TextFormat\"\nimport Edit from \"@material-ui/icons/Edit\"\nimport Audiotrack from \"@material-ui/icons/Audiotrack\"\nimport Help from \"@material-ui/icons/Help\"\nimport ThreeDRotation from \"@material-ui/icons/ThreeDRotation\"\n\nexport default ({ type, ...props }) => {\n  switch (type) {\n    case \"image_label\":\n    case \"image_segmentation\":\n      return <RemoveRedEye {...props} />\n    case \"audio_transcription\":\n      return <Audiotrack {...props} />\n    case \"data_entry\":\n      return <Edit {...props} />\n    case \"text_entity_recognition\":\n      return <TextFormat {...props} />\n    case \"3d_bounding_box\":\n      return <ThreeDRotation {...props} />\n    default:\n      return <Help {...props} />\n  }\n}\n","import React, { useState } from \"react\"\nimport getTaskDescription from \"../../utils/get-task-description.js\"\nimport SampleContainer from \"../SampleContainer\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport InterfaceIcon from \"../InterfaceIcon\"\nimport KeyboardArrowRightIcon from \"@material-ui/icons/KeyboardArrowRight\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport Box from \"@material-ui/core/Box\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Title = styled(\"div\")({\n  fontSize: 18,\n  fontWeight: \"bold\",\n  color: colors.grey[700],\n  borderBottom: `1px solid ${colors.grey[300]}`,\n  paddingBottom: 8,\n  marginBottom: 8,\n  paddingLeft: 8,\n})\nconst StyledButton = styled(Button)({\n  display: \"flex\",\n  textAlign: \"left\",\n  justifyContent: \"flex-start\",\n  marginTop: 8,\n})\n\nexport const Composite = (props) => {\n  const [currentSampleIndex, changeCurrentSampleIndex] = useState(0)\n  const {\n    interface: { fields },\n  } = props\n  const [selectedField, changeSelectedField] = useState()\n\n  const { t } = useTranslation()\n\n  if (!fields) throw new Error(\"No fields defined. Try adding a field in Setup\")\n\n  const sample = props.samples[currentSampleIndex]\n\n  if (selectedField) {\n    return (\n      <UniversalDataViewer\n        dataset={{\n          interface: selectedField.interface,\n          samples: [\n            {\n              ...sample,\n              annotation: (sample.annotation || {})[selectedField.fieldName],\n            },\n          ],\n        }}\n        onSaveTaskOutputItem={(indexZero, output) => {\n          props.onSaveTaskOutputItem(currentSampleIndex, {\n            ...sample.annotation,\n            [selectedField.fieldName]: output,\n          })\n          changeSelectedField(null)\n        }}\n      />\n    )\n  }\n\n  return (\n    <SampleContainer\n      {...props.containerProps}\n      currentSampleIndex={currentSampleIndex}\n      totalSamples={props.samples.length}\n      taskOutput={props.samples.map((s) => s.annotation)}\n      description={getTaskDescription(sample) || props.interface.description}\n      onChangeSample={(sampleIndex) => changeCurrentSampleIndex(sampleIndex)}\n    >\n      <Title>Fields</Title>\n      {fields.map((field, index) => (\n        <StyledButton\n          key={field.fieldName}\n          onClick={() => {\n            changeSelectedField({ ...field, index })\n          }}\n          fullWidth\n          variant=\"outlined\"\n        >\n          <InterfaceIcon\n            style={{ color: colors.grey[500], marginRight: 16 }}\n            type={field.interface.type}\n          />\n          {field.fieldName}\n          <Box flexGrow={1} />\n          <Checkbox\n            checked={Boolean((sample.annotation || {})[field.fieldName])}\n          />\n          <KeyboardArrowRightIcon />\n        </StyledButton>\n      ))}\n      <StyledButton\n        onClick={() => props.containerProps.onExit(\"go-to-next\")}\n        fullWidth\n        variant=\"outlined\"\n      >\n        <KeyboardArrowRightIcon\n          style={{ color: colors.grey[500], marginRight: 16 }}\n        />\n        {t(\"next\")}\n        <Box flexGrow={1} />\n        <Box height=\"42px\" />\n        <KeyboardArrowRightIcon />\n      </StyledButton>\n    </SampleContainer>\n  )\n}\n\nexport default Composite\n","// @flow\n\nimport \"../../i18n\"\nimport React, { useMemo } from \"react\"\nimport TextClassification from \"../TextClassification\"\nimport TextEntityRecognition from \"../TextEntityRecognition\"\nimport ImageSegmentation from \"../ImageSegmentation\"\nimport ImageClassification from \"../ImageClassification\"\nimport VideoSegmentation from \"../VideoSegmentation\"\nimport AudioTranscription from \"../AudioTranscription\"\nimport DataEntry from \"../DataEntry\"\nimport EmptySampleContainer from \"../EmptySampleContainer\"\nimport Composite from \"../Composite\"\nimport BadOHA from \"../BadOHA\"\nimport Button from \"@material-ui/core/Button\"\nimport { useTranslation } from \"react-i18next\"\n\nexport const UniversalDataViewer = ({\n  dataset,\n  onExit,\n  hideHeader,\n  hideDescription,\n  datasetName,\n  requireCompleteToPressNext,\n  onSaveTaskOutputItem,\n  height,\n  onClickSetup,\n}) => {\n  // TODO type check w/ superstruct against dataset\n  const { t } = useTranslation()\n  const containerProps = useMemo(\n    () => ({\n      hideHeader,\n      hideDescription,\n      datasetName,\n      requireCompleteToPressNext,\n      onExit,\n      height,\n    }),\n    [\n      hideHeader,\n      hideDescription,\n      requireCompleteToPressNext,\n      datasetName,\n      height,\n      onExit,\n    ]\n  )\n\n  if (!dataset || !dataset.interface.type) {\n    return (\n      <BadOHA\n        title=\"Set up your project to begin labeling\"\n        description={\n          <p>\n            {t(\"universal-data-viewer-interface-warning\")}\n            <br />\n            <br />\n            <Button color=\"primary\" variant=\"contained\" onClick={onClickSetup}>\n              {t(\"setup-project\")}\n            </Button>\n          </p>\n        }\n      />\n    )\n  }\n\n  if (!dataset.samples || dataset.samples.length === 0) {\n    return <EmptySampleContainer />\n  }\n\n  switch (dataset.interface.type) {\n    case \"data_entry\":\n      return (\n        <DataEntry\n          containerProps={containerProps}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"text_classification\":\n      return (\n        <TextClassification\n          containerProps={containerProps}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"text_entity_recognition\":\n      return (\n        <TextEntityRecognition\n          containerProps={containerProps}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"image_segmentation\":\n    case \"image_pixel_segmentation\":\n      return (\n        <ImageSegmentation\n          containerProps={containerProps}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"image_classification\":\n      return (\n        <ImageClassification\n          containerProps={containerProps}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"video_segmentation\":\n      return (\n        <VideoSegmentation\n          containerProps={containerProps}\n          {...dataset}\n          onExit={onExit}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n        />\n      )\n    case \"composite\":\n      return (\n        <Composite\n          containerProps={containerProps}\n          {...dataset}\n          dataset={dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    case \"audio_transcription\":\n      return (\n        <AudioTranscription\n          containerProps={containerProps}\n          {...dataset}\n          onSaveTaskOutputItem={onSaveTaskOutputItem}\n          onExit={onExit}\n        />\n      )\n    default:\n      return `\"${dataset.interface.type}\" not supported`\n  }\n}\n\nexport default UniversalDataViewer\n","import * as Sentry from \"@sentry/browser\"\n\nSentry.init({\n  dsn: \"https://bc19fbac222243f08f0abaf6d66f2034@sentry.io/5182632\",\n  whitelistUrls: [\"https://universaldatatool.com\", \"^file:?:\"],\n})\n\nexport default Sentry\n","// @flow weak\n\nimport React from \"react\"\nimport Sentry from \"../../utils/sentry.js\"\nimport BadOHA from \"../BadOHA\"\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    console.error(\n      \"The following error occurred when loading a labeling interface:\",\n      error\n    )\n    return {\n      hasError: true,\n      errorString: error.toString(),\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo)\n      const eventId = Sentry.captureException(error)\n      this.setState({ eventId })\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <BadOHA\n          title=\"An error occurred loading the labeling interface\"\n          description={this.state.errorString}\n        />\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","// @flow weak\n\nimport React, { useState, useEffect, useReducer } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport templates, { templateMap } from \"../StartingPage/templates\"\nimport Button from \"@material-ui/core/Button\"\nimport Box from \"@material-ui/core/Box\"\nimport * as colors from \"@material-ui/core/colors\"\nimport ConfigureImageSegmentation from \"../ConfigureImageSegmentation\"\nimport ConfigureImagePixelSegmentation from \"../ConfigureImagePixelSegmentation\"\nimport ConfigureImageClassification from \"../ConfigureImageClassification\"\nimport ConfigureTextClassification from \"../ConfigureTextClassification\"\nimport ConfigureAudioTranscription from \"../ConfigureAudioTranscription\"\nimport ConfigureNLP from \"../ConfigureNLP\"\nimport ConfigureDataEntry from \"../ConfigureDataEntry\"\nimport ConfigureComposite from \"../ConfigureComposite\"\nimport Configure3D from \"../Configure3D\"\nimport ConfigureVideoSegmentation from \"../ConfigureVideoSegmentation\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport Grid from \"@material-ui/core/Grid\"\nimport LabelErrorBoundary from \"../LabelErrorBoundary\"\nimport useEventCallback from \"use-event-callback\"\n\nconst noop = () => {}\n\nconst Container = styled(\"div\")({\n  padding: 24,\n  \"&.emptyState\": {\n    textAlign: \"center\",\n    backgroundColor: colors.blue[800],\n    minHeight: \"70vh\",\n    padding: 64,\n    \"& .bigText\": {\n      textAlign: \"left\",\n      fontSize: 48,\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      marginBottom: 48,\n    },\n  },\n})\n\nconst BigButton = styled(Button)({\n  padding: 10,\n  width: 200,\n  height: 150,\n  boxShadow: \"0px 3px 5px rgba(0,0,0,0.3)\",\n  margin: 12,\n  backgroundColor: \"#fff\",\n  \"& .bigIcon\": {\n    marginTop: 16,\n    width: 64,\n    height: 64,\n  },\n  \"&:hover\": {\n    backgroundColor: \"#fff\",\n  },\n})\n\nconst NoOptions = styled(\"div\")({\n  fontSize: 18,\n  textAlign: \"center\",\n  fontWeight: \"bold\",\n  color: colors.grey[500],\n  paddingTop: 30,\n  paddingBottom: 50,\n})\n\nconst TypeButton = styled(Button)({\n  margin: 8,\n  \"& .icon\": {\n    marginRight: 8,\n    color: \"#888\",\n  },\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  \"&.selected\": {\n    backgroundColor: colors.blue[500],\n    color: \"#fff\",\n    \"& .icon\": {\n      color: \"#fff\",\n    },\n  },\n})\n\nexport const Heading = styled(\"div\")({\n  fontWeight: \"bold\",\n  textTransform: \"uppercase\",\n  fontSize: 12,\n  paddingLeft: 8,\n  marginBottom: 8,\n  marginTop: 16,\n  color: colors.grey[700],\n})\n\nconst PreviewContainer = styled(\"div\")({\n  display: \"flex\",\n  justifyContent: \"space-around\",\n  mouseEvents: \"none\",\n  padding: 16,\n})\nconst PreviewContent = styled(\"div\")({\n  display: \"flex\",\n  width: \"100%\",\n  height: 600,\n})\n\nconst SelectType = ({ currentlySelected, onChange }) => {\n  return templates.map((t) => (\n    <TypeButton\n      key={t.dataset.interface.type || \"empty\"}\n      className={\n        currentlySelected === t.dataset.interface.type ? \"selected\" : \"\"\n      }\n      variant=\"outlined\"\n      onClick={() => {\n        if (currentlySelected !== t.dataset.interface.type) {\n          onChange(t.dataset.interface.type)\n        }\n      }}\n    >\n      <t.Icon className=\"icon\" />\n      {t.name}\n    </TypeButton>\n  ))\n}\n\nexport const ConfigureInterface = ({\n  dataset,\n  onChange: onChangeProp,\n  onClickEditJSON,\n  isNested = false,\n}) => {\n  const iface = dataset.interface\n  const [previewChangedTime, changePreviewChangedTime] = useState(0)\n  const [previewLoading, changePreviewLoading] = useState(false)\n  const [previewVersion, incPreviewVersion] = useReducer(\n    (state) => state + 1,\n    0\n  )\n  const [previewDataset, setPreviewDataset] = useState({\n    interface: iface,\n    samples: dataset?.samples?.length\n      ? [dataset.samples[0]]\n      : [templateMap[iface.type].dataset.samples[0]],\n  })\n  const onChange = useEventCallback((...args) => {\n    changePreviewChangedTime(Date.now())\n    onChangeProp(...args)\n  })\n  useEffect(() => {\n    if (Date.now() - previewChangedTime > 1000) return\n    changePreviewLoading(true)\n    let timeout = setTimeout(() => {\n      changePreviewLoading(false)\n      incPreviewVersion()\n      setPreviewDataset({\n        interface: iface,\n        samples: dataset?.samples?.length\n          ? [dataset.samples[0]]\n          : [templateMap[iface.type].dataset.samples[0]],\n      })\n    }, 1000)\n    return () => {\n      clearTimeout(timeout)\n    }\n    // eslint-disable-next-line\n  }, [previewChangedTime])\n\n  if (!iface.type || iface.type === \"empty\") {\n    return (\n      <Container className=\"emptyState\">\n        <div className=\"bigText\">Choose an Interface:</div>\n        {templates\n          .filter((t) => t.name !== \"Empty\")\n          .map((template) => (\n            <BigButton\n              key={template.name}\n              onClick={() => onChange(template.dataset.interface)}\n            >\n              <div>\n                <div>{template.name}</div>\n                <div>\n                  <template.Icon className=\"bigIcon\" />\n                </div>\n              </div>\n            </BigButton>\n          ))}\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <Heading>Interface Type</Heading>\n      <SelectType\n        currentlySelected={iface.type}\n        onChange={(type) => {\n          onChange(\n            templates\n              .map((t) => t.dataset.interface)\n              .find((t) => t.type === type) || {}\n          )\n        }}\n      />\n      <Grid container>\n        <Grid item hidden={isNested} xs={12} lg={6}>\n          <Heading>Preview</Heading>\n          <PreviewContainer>\n            <PreviewContent\n              style={{ opacity: previewLoading ? 0.5 : 1, height: \"100%\" }}\n            >\n              <LabelErrorBoundary key={previewVersion}>\n                <UniversalDataViewer\n                  key={previewVersion}\n                  height={600}\n                  onExit={noop}\n                  onSaveTaskOutputItem={noop}\n                  dataset={previewDataset}\n                />\n              </LabelErrorBoundary>\n            </PreviewContent>\n          </PreviewContainer>\n        </Grid>\n        <Grid item xs={12} lg={isNested ? 12 : 6}>\n          <Heading>Options</Heading>\n          <Box paddingTop={2} />\n          {!iface.type && <NoOptions>Select a Type</NoOptions>}\n          {iface.type === \"image_segmentation\" && (\n            <ConfigureImageSegmentation iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"image_pixel_segmentation\" && (\n            <ConfigureImagePixelSegmentation\n              iface={iface}\n              onChange={onChange}\n            />\n          )}\n          {iface.type === \"image_classification\" && (\n            <ConfigureImageClassification iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"composite\" && (\n            <ConfigureComposite iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"data_entry\" && (\n            <ConfigureDataEntry iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"audio_transcription\" && (\n            <ConfigureAudioTranscription iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"text_entity_recognition\" && (\n            <ConfigureNLP iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"text_classification\" && (\n            <ConfigureTextClassification iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"video_segmentation\" && (\n            <ConfigureVideoSegmentation iface={iface} onChange={onChange} />\n          )}\n          {iface.type === \"3d_bounding_box\" && (\n            <Configure3D iface={iface} onChange={onChange} />\n          )}\n        </Grid>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default ConfigureInterface\n","// @flow\n\nimport { styled } from \"@material-ui/core/styles\"\n\nexport const PaperContainer = styled(\"div\")({\n  margin: 16,\n  padding: 16,\n  border: \"1px solid #ccc\",\n  borderRadius: 4,\n  boxShadow: \"0px 2px 2px rgba(0,0,0,0.1)\",\n})\n\nexport default PaperContainer\n","import React, { useState, useEffect } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport SimpleDialog from \"../SimpleDialog\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableContainer from \"@material-ui/core/TableContainer\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport Button from \"@material-ui/core/Button\"\nimport EditIcon from \"@material-ui/icons/Edit\"\n\nconst useStyles = makeStyles({\n  table: {},\n})\n\nconst hotkeyIconStyle = { marginLeft: 8, width: 16, height: 16 }\n\nexport default ({\n  open,\n  onClose,\n  onChangeHotkey,\n  hotkeyList,\n  onClearHotkeys,\n}) => {\n  const classes = useStyles()\n  const [selectedHotKey, setSelectedHotKey] = useState()\n  const [{ modifier, key }, setCurrentKeyCombo] = useState({})\n\n  useEffect(() => {\n    if (!selectedHotKey) return\n    function keyListener(e) {\n      if ([\"shift\", \"ctrl\", \"cmd\", \"alt\"].includes(e.key.toLowerCase())) {\n        setCurrentKeyCombo({ modifier: e.key.toLowerCase(), key })\n      }\n      if (e.key.length === 1) {\n        setCurrentKeyCombo({ modifier, key: e.key.toLowerCase() })\n      }\n    }\n    window.addEventListener(\"keydown\", keyListener)\n    return () => {\n      window.removeEventListener(\"keydown\", keyListener)\n    }\n  }, [selectedHotKey, key, modifier, setCurrentKeyCombo])\n\n  useEffect(() => {\n    if (!key) return\n    if (modifier) {\n      onChangeHotkey(selectedHotKey, `${modifier} + ${key}`)\n    } else {\n      onChangeHotkey(selectedHotKey, key)\n    }\n    setCurrentKeyCombo({})\n    setSelectedHotKey(null)\n  }, [modifier, key, onChangeHotkey, selectedHotKey])\n\n  return (\n    <SimpleDialog\n      title=\"Manage Keyboard Shortcuts\"\n      actions={[\n        {\n          text: \"Clear Hotkeys\",\n          onClick: onClearHotkeys,\n        },\n      ]}\n      open={open}\n      onClose={onClose}\n    >\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Action</TableCell>\n              <TableCell align=\"right\">Keyboard Shortcut</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {hotkeyList.map((hotkey) => (\n              <TableRow key={hotkey.description}>\n                <TableCell>{hotkey.description}</TableCell>\n                <TableCell align=\"right\">\n                  <Button\n                    onClick={() => {\n                      if (selectedHotKey !== hotkey) {\n                        setSelectedHotKey(hotkey)\n                        setCurrentKeyCombo({})\n                        return\n                      }\n                    }}\n                    style={{ minWidth: 0 }}\n                  >\n                    <b>\n                      {selectedHotKey === hotkey\n                        ? modifier || key\n                          ? `<${modifier ? modifier + \"+\" : \"\"}${key || \"???\"}>`\n                          : \"<Press Any Key>\"\n                        : hotkey.binding}\n                    </b>\n                    {selectedHotKey === hotkey ? (\n                      <EditIcon style={hotkeyIconStyle} />\n                    ) : (\n                      <EditIcon style={hotkeyIconStyle} />\n                    )}\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </SimpleDialog>\n  )\n}\n","import React, { useState } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport MuiButton from \"@material-ui/core/Button\"\nimport { useUpdate } from \"react-use\"\nimport { styled } from \"@material-ui/core/styles\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { useHotkeyStorage } from \"../HotkeyStorage\"\nimport KeyboardShortcutManagerDialog from \"../KeyboardShortcutManagerDialog\"\n\nimport { useTranslation } from \"react-i18next\"\n\nconst Button = styled(MuiButton)({\n  margin: 8,\n})\n\nexport const AdvancedOptionsView = ({ onClickEditJSON, onClearLabelData }) => {\n  const forceUpdate = useUpdate()\n  const posthog = usePosthog()\n  const { fromConfig, setInConfig } = useAppConfig()\n  const { hotkeys, changeHotkey, clearHotkeys } = useHotkeyStorage()\n  const [hotkeyDialogOpen, setHotkeyDialogOpen] = useState(false)\n\n  // internalization hook\n  const { t } = useTranslation()\n\n  return (\n    <Box padding={2}>\n      <Button onClick={onClickEditJSON} variant=\"outlined\">\n        {t(\"edit-json\")}\n      </Button>\n      <Button\n        onClick={() => {\n          if (\n            window.confirm(\n              \"Are you sure you want to delete all your label data? Click OK to delete.\"\n            )\n          ) {\n            onClearLabelData()\n          }\n        }}\n        variant=\"outlined\"\n      >\n        {t(\"clear-labels\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          if (posthog.has_opted_out_capturing()) {\n            posthog.opt_in_capturing()\n          } else {\n            posthog.opt_out_capturing()\n          }\n          forceUpdate()\n        }}\n      >\n        {posthog.has_opted_out_capturing() ? \"Enable\" : \"Disable\"}{\" \"}\n        {t(\"telemetry\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          // TODO store in appConfig\n          const response = window.prompt(\n            \"Input URL for new collaboration server (empty to use universaldatatool.com):\",\n            window.localStorage.getItem(\"CUSTOM_COLLABORATION_SERVER\") || \"\"\n          )\n          if (response === null) return\n          window.localStorage.setItem(\"CUSTOM_COLLABORATION_SERVER\", response)\n          window.location.reload()\n        }}\n      >\n        {t(\"custom-collaboration-server\")}\n      </Button>\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          setInConfig(\n            \"labelhelp.disabled\",\n            !Boolean(fromConfig(\"labelhelp.disabled\"))\n          )\n        }}\n      >\n        {fromConfig(\"labelhelp.disabled\") ? \"Enable\" : \"Disable\"}{\" \"}\n        {t(\"label-help\")}\n      </Button>\n      {!fromConfig(\"labelhelp.disabled\") && (\n        <Button\n          variant=\"outlined\"\n          disabled={Boolean(fromConfig(\"labelhelp.disabled\"))}\n          onClick={() => {\n            const response = window.prompt(\n              \"Label Help API Key:\",\n              fromConfig(\"labelhelp.apikey\") || \"\"\n            )\n            if (response === null) return\n            setInConfig(\"labelhelp.apikey\", response)\n          }}\n        >\n          {t(\"label-help-api-key\")}\n        </Button>\n      )}\n      <Button\n        variant=\"outlined\"\n        onClick={() => {\n          setHotkeyDialogOpen(true)\n        }}\n      >\n        Change/View Hotkeys\n      </Button>\n      <KeyboardShortcutManagerDialog\n        open={hotkeyDialogOpen}\n        hotkeyList={hotkeys}\n        onClose={() => setHotkeyDialogOpen(false)}\n        onClearHotkeys={clearHotkeys}\n        onChangeHotkey={(hotkey, newBinding) =>\n          changeHotkey(hotkey.id, newBinding)\n        }\n      />\n    </Box>\n  )\n}\n\nexport default AdvancedOptionsView\n","// @flow weak\n\nimport React from \"react\"\nimport ConfigureInterface, { Heading } from \"../ConfigureInterface\"\nimport PaperContainer from \"../PaperContainer\"\nimport AdvancedOptionsView from \"../AdvancedOptionsView\"\n\nexport default ({ dataset, onChange, onClickEditJSON, onClearLabelData }) => {\n  return (\n    <div>\n      <ConfigureInterface\n        dataset={dataset}\n        onChange={onChange}\n        onClickEditJSON={onClickEditJSON}\n        isNotNested\n      />\n      <PaperContainer>\n        <Heading>Advanced</Heading>\n        <AdvancedOptionsView\n          onClearLabelData={onClearLabelData}\n          onClickEditJSON={onClickEditJSON}\n        />\n      </PaperContainer>\n    </div>\n  )\n}\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport Box from \"@material-ui/core/Box\"\nimport AceEditor from \"react-ace\"\nimport SimpleDialog from \"../SimpleDialog\"\n\nexport default ({ open, sampleIndex, sampleInput, onChange, onClose }) => {\n  const [text, changeText] = useState()\n  const [error, changeError] = useState()\n  useEffect(() => {\n    const newText = JSON.stringify(sampleInput, null, \"  \")\n    if (newText !== text) {\n      changeText(newText)\n      changeError(null)\n    }\n  }, [sampleIndex, sampleInput, text])\n\n  return (\n    <SimpleDialog\n      open={open}\n      onClose={onClose}\n      title={`samples[${sampleIndex}]`}\n    >\n      <AceEditor\n        theme=\"github\"\n        mode=\"javascript\"\n        width=\"100%\"\n        value={text}\n        editorProps={{ $blockScrolling: Infinity }}\n        onChange={(t) => {\n          changeText(t)\n          changeError(null)\n          try {\n            onChange(JSON.parse(t))\n          } catch (e) {\n            changeError(e.toString())\n          }\n        }}\n      />\n      <Box color=\"red\">{error}</Box>\n    </SimpleDialog>\n  )\n}\n","// @flow\nimport React, { createContext, useContext, useEffect, useReducer } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Fade from \"@material-ui/core/Fade\"\nimport classNames from \"classnames\"\n\nconst useStyles = makeStyles({\n  root: {\n    position: \"fixed\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    alignItems: \"flex-start\",\n    pointerEvents: \"none\",\n  },\n  msgBox: {\n    display: \"flex\",\n    backgroundColor: colors.blue[700],\n    fontSize: 12,\n    color: \"#fff\",\n    padding: 4,\n    marginBottom: 4,\n    boxShadow: \"0px 3px 8px rgba(0,0,0,0.5)\",\n    \"&.warning\": {\n      backgroundColor: colors.orange[700],\n    },\n    \"&.error\": {\n      backgroundColor: colors.red[700],\n    },\n  },\n})\n\nconst REFRESH_INTERVAL = 100\n\nconst ToastContext = createContext({})\n\nexport const useToasts = () => {\n  const { addToast } = useContext(ToastContext)\n\n  return { addToast }\n}\n\nexport const ToastProvider = ({ children }) => {\n  const [toasts, changeToasts] = useReducer((state = [], action) => {\n    if (action.type === \"add\") {\n      const fullLife =\n        action.messageType === \"info\"\n          ? 2000\n          : action.messageType === \"warning\"\n          ? 5000\n          : 5000\n\n      return state.concat([\n        {\n          id: Math.random().toString().split(\".\")[1],\n          message: action.message,\n          type: action.messageType,\n          life: fullLife,\n          fullLife,\n        },\n      ])\n    } else if (action.type === \"tick\") {\n      return state\n        .map((msg) => ({\n          ...msg,\n          life: msg.life - REFRESH_INTERVAL,\n        }))\n        .filter((msg) => msg.life > 0)\n    }\n    return state\n  }, [])\n  const c = useStyles()\n\n  useEffect(() => {\n    if (toasts.length === 0) return () => {}\n    let interval = setInterval(() => {\n      changeToasts({ type: \"tick\" })\n    }, REFRESH_INTERVAL)\n    return () => clearInterval(interval)\n  }, [toasts])\n\n  const addToast = (message: string, messageType: string = \"info\") =>\n    changeToasts({ type: \"add\", message, messageType })\n\n  return (\n    <>\n      <ToastContext.Provider value={{ toasts, addToast }}>\n        {children}\n      </ToastContext.Provider>\n      <div className={c.root}>\n        {toasts.map((msg) => (\n          <Collapse key={msg.id} in={msg.life < msg.fullLife}>\n            <Fade in={msg.life > 600}>\n              <div className={classNames(c.msgBox, msg.type)}>\n                {msg.message}\n              </div>\n            </Fade>\n          </Collapse>\n        ))}\n      </div>\n    </>\n  )\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({})\nconst Stat = styled(\"div\")({\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  margin: 8,\n})\nconst Label = styled(\"div\")({\n  fontSize: 14,\n  fontWeight: \"bold\",\n  color: colors.grey[700],\n})\nconst Value = styled(\"div\")({\n  fontSize: 32,\n  marginTop: 8,\n})\n\nexport default ({ stats }) => {\n  return (\n    <Container>\n      {stats.map((s) => (\n        <Stat key={s.name}>\n          <Label>{s.name}</Label>\n          <Value>{s.value}</Value>\n        </Stat>\n      ))}\n    </Container>\n  )\n}\n","import React, { useState } from \"react\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { styled } from \"@material-ui/core/styles\"\nimport { useAppConfig } from \"../AppConfig\"\nimport SaveIcon from \"@material-ui/icons/Save\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nconst Title = styled(\"div\")({\n  fontSize: 18,\n  color: colors.grey[800],\n  padding: 16,\n  \"& a\": {\n    color: colors.blue[600],\n  },\n})\n\nconst ErrorText = styled(\"div\")({\n  color: colors.red[600],\n})\n\nexport default () => {\n  const { setInConfig } = useAppConfig()\n  const [verifying, setVerifying] = useState(false)\n  const [textFieldValue, setTextFieldValue] = useState(\"\")\n  const [error, setError] = useState(\"\")\n  const posthog = usePosthog()\n\n  return (\n    <Box paddingTop={8} textAlign=\"center\">\n      <Title>\n        To use Label Help, enter your API key. You can{\" \"}\n        <a\n          href=\"https://labelhelp.universaldatatool.com\"\n          onClick={() => posthog.capture(\"get_api_key_link_clicked\")}\n        >\n          get an API key here\n        </a>\n        .\n      </Title>\n      {error && <ErrorText>{error}</ErrorText>}\n      <Box\n        paddingTop={2}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n      >\n        <TextField\n          onChange={(e) => setTextFieldValue(e.target.value)}\n          className=\"label-help-api-key-text-field\"\n          variant=\"outlined\"\n          label=\"API Key\"\n        />\n        <Button\n          style={{ marginTop: 16 }}\n          color=\"primary\"\n          disabled={verifying}\n          variant=\"outlined\"\n          onClick={async () => {\n            setError(null)\n            setVerifying(true)\n            try {\n              // TODO check with labelhelp server and make sure api key is valid\n              const response = await fetch(\n                \"https://labelhelp.universaldatatool.com/api/me\",\n                {\n                  headers: { apikey: textFieldValue },\n                }\n              )\n              if (response.status !== 200) throw new Error(response.toString())\n            } catch (e) {\n              setError(e.toString())\n              setVerifying(false)\n              return\n            }\n\n            setVerifying(false)\n            setInConfig(\"labelhelp.apikey\", textFieldValue)\n            posthog.capture(\"save_api_key_button_clicked\")\n          }}\n        >\n          {verifying ? (\n            <>\n              <CircularProgress size={18} style={{ marginRight: 16 }} />\n              Checking...\n            </>\n          ) : (\n            <>\n              <SaveIcon style={{ marginRight: 8 }} />\n              Save\n            </>\n          )}\n        </Button>\n      </Box>\n    </Box>\n  )\n}\n","import { useFileContext } from \"./\"\nimport { useMemo } from \"react\"\nimport { setIn } from \"seamless-immutable\"\n\nexport const useActiveDataset = () => {\n  const { file, setFile } = useFileContext()\n  const result = useMemo(\n    () =>\n      !file || !file.content\n        ? null\n        : {\n            dataset: file.content,\n            setDataset: (newDataset) => {\n              setFile(setIn(file, [\"content\"], newDataset))\n            },\n          },\n    [file, setFile]\n  )\n  return result || {}\n}\n","import { useContext, createContext } from \"react\"\n\nexport const FileContext = createContext({})\n\nexport const useFileContext = () => useContext(FileContext)\n\nexport { useActiveDataset } from \"./use-active-dataset.js\"\n","// @flow\n\nimport React, { useState, useEffect } from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport Stepper from \"@material-ui/core/Stepper\"\nimport Step from \"@material-ui/core/Step\"\nimport StepLabel from \"@material-ui/core/StepLabel\"\nimport Table from \"@material-ui/core/Table\"\nimport TableBody from \"@material-ui/core/TableBody\"\nimport TableCell from \"@material-ui/core/TableCell\"\nimport TableHead from \"@material-ui/core/TableHead\"\nimport TableRow from \"@material-ui/core/TableRow\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { useLabelHelp } from \"./\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { useActiveDataset } from \"../FileContext\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport { setIn } from \"seamless-immutable\"\nimport usePosthog from \"../../utils/use-posthog\"\n\nconst Container = styled(\"div\")({\n  fontVariantNumeric: \"tabular-nums\",\n})\nconst Link = styled(\"a\")({\n  color: colors.blue[500],\n  textDecoration: \"none\",\n})\n\nconst usdFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n})\nconst preciseUSDFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  maximumFractionDigits: 4,\n  minimumFractionDigits: 2,\n})\n\nconst steps = [\"setup\", \"running\", \"completed\"]\n\nexport default () => {\n  const { fromConfig, setInConfig } = useAppConfig()\n  const {\n    labelHelpEnabled,\n    labelHelpError,\n    loadMyCredits,\n    variables,\n    totalCost,\n    formulaFunc,\n    myCredits,\n  } = useLabelHelp()\n  const [error, setError] = useState()\n  const { dataset, setDataset } = useActiveDataset()\n\n  const [labelHelpInfo, setLabelHelpInfo] = useState(dataset.labelHelp || {})\n  const collabUrl = labelHelpInfo.url || (dataset.labelHelp || {}).url\n\n  const posthog = usePosthog()\n\n  useEffect(() => {\n    if (myCredits === null || myCredits === undefined) {\n      loadMyCredits(dataset)\n    }\n  }, [myCredits, dataset, loadMyCredits])\n\n  useEffect(() => {\n    if (!collabUrl) return\n    async function loadJob() {\n      const response = await fetch(\n        `https://labelhelp.universaldatatool.com/api/job?custom_id=${encodeURIComponent(\n          collabUrl\n        )}&api_key=${fromConfig(\"labelhelp.apikey\")}`\n      ).then((r) => r.json())\n      // response contains { progress, status }\n      console.log({ response })\n      setLabelHelpInfo({\n        ...dataset.labelHelp,\n        ...response,\n        loaded: true,\n      })\n    }\n    loadJob()\n  }, [collabUrl, dataset.labelHelp, fromConfig])\n\n  if (!labelHelpEnabled)\n    return (\n      <Container>\n        Label Help is Disabled.\n        {labelHelpError && (\n          <div style={{ color: colors.red[500] }}>{labelHelpError}</div>\n        )}\n      </Container>\n    )\n\n  const activeStep = !collabUrl\n    ? \"setup\"\n    : labelHelpInfo.progress === 1\n    ? \"completed\"\n    : \"running\"\n\n  return (\n    <Container>\n      <Stepper activeStep={steps.indexOf(activeStep)}>\n        {[\"Setup\", \"Running\", \"Completed\"].map((step) => (\n          <Step key={step}>\n            <StepLabel>{step}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n      {error && <Box color={colors.red[600]}>{error}</Box>}\n      {activeStep === \"setup\" ? (\n        <Box>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Item</TableCell>\n                <TableCell>Quantity</TableCell>\n                <TableCell>Unit Cost</TableCell>\n                <TableCell>Cost / Sample</TableCell>\n                <TableCell>Total</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Object.keys(variables).map((varName) => (\n                <TableRow>\n                  <TableCell style={{ textTransform: \"capitalize\" }}>\n                    {varName.replace(/_/g, \" \")}\n                  </TableCell>\n                  <TableCell>{variables[varName]}</TableCell>\n                  <TableCell>\n                    {varName === \"sample_count\"\n                      ? \"\"\n                      : preciseUSDFormatter.format(\n                          (totalCost -\n                            formulaFunc({ ...variables, [varName]: 0 })) /\n                            variables.sample_count /\n                            (variables[varName] === 0 ? 1 : variables[varName])\n                        )}\n                  </TableCell>\n                  <TableCell>\n                    {usdFormatter.format(\n                      (totalCost -\n                        formulaFunc({ ...variables, [varName]: 0 })) /\n                        variables.sample_count\n                    )}\n                  </TableCell>\n                  <TableCell></TableCell>\n                </TableRow>\n              ))}\n              <TableRow>\n                <TableCell>Total Cost</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell>{usdFormatter.format(totalCost)}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Time to Complete</TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                <TableCell>1-3 days</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            alignItems=\"center\"\n            padding={2}\n            paddingTop={4}\n          >\n            <Box>Credits: {usdFormatter.format(myCredits)}</Box>\n            <Box flexGrow={1} />\n            <Button\n              onClick={() => {\n                setInConfig(\"labelhelp.apikey\", null)\n                posthog.capture(\"api_key_button_clicked\")\n              }}\n              variant=\"outlined\"\n            >\n              API Key\n            </Button>\n            <Button\n              color={myCredits < totalCost ? \"primary\" : \"none\"}\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              href=\"https://labelhelp.universaldatatool.com#addcredits\"\n              onClick={() => {\n                posthog.capture(\"add_credits_button_clicked\")\n              }}\n            >\n              Add Credits\n            </Button>\n            <Button\n              onClick={async () => {\n                setError(null)\n                const response = await fetch(\n                  \"https://labelhelp.universaldatatool.com/api/submit\",\n                  {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                      dataset,\n                      price: totalCost,\n                      api_key: fromConfig(\"labelhelp.apikey\"),\n                    }),\n                    headers: { \"Content-Type\": \"application/json\" },\n                  }\n                )\n                  .then((r) => r.json())\n                  .catch((e) => {\n                    setError(e.toString())\n                    return null\n                  })\n                if (!response) {\n                  setError(\"Empty response from server\")\n                  return null\n                }\n\n                setDataset(\n                  setIn(dataset, [\"labelHelp\"], {\n                    url: response.custom_id,\n                  })\n                )\n\n                posthog.capture(\"start_label_help_button_clicked\")\n              }}\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              color={myCredits >= totalCost ? \"primary\" : \"none\"}\n            >\n              Start Label Help\n            </Button>\n          </Box>\n        </Box>\n      ) : activeStep === \"running\" ? (\n        <Box>\n          {labelHelpInfo.loaded ? (\n            <Table>\n              <TableBody>\n                <TableRow>\n                  <TableCell>Status</TableCell>\n                  <TableCell>{labelHelpInfo.status}</TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Link</TableCell>\n                  <TableCell>\n                    <Link href={labelHelpInfo.url}>{labelHelpInfo.url}</Link>\n                  </TableCell>\n                </TableRow>\n                <TableRow>\n                  <TableCell>Percent Complete</TableCell>\n                  <TableCell>{labelHelpInfo.progress.toFixed(1)}%</TableCell>\n                </TableRow>\n                {labelHelpInfo.price && (\n                  <TableRow>\n                    <TableCell>Budget Used</TableCell>\n                    <TableCell>\n                      ${labelHelpInfo.progress * labelHelpInfo.price} / $75\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          ) : (\n            <Box padding={8} textAlign=\"center\">\n              <CircularProgress size={100} />\n            </Box>\n          )}\n          <Box display=\"flex\" marginTop={2} justifyContent=\"flex-end\">\n            {/* TODO add stop early by calling /api/stop */}\n            {/* <Button\n              variant=\"outlined\"\n              style={{\n                color: colors.red[500],\n                border: `1px solid ${colors.red[200]}`,\n              }}\n            >\n              Stop Early\n            </Button> */}\n            <Box flexGrow={1} />\n            {/* TODO sync samples merges samples from link */}\n            {/* <Button variant=\"outlined\" color=\"primary\">\n              Sync Samples\n            </Button> */}\n          </Box>\n        </Box>\n      ) : activeStep === \"completed\" ? (\n        <Box>\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell>Percent Complete</TableCell>\n                <TableCell>100%</TableCell>\n              </TableRow>\n              {labelHelpInfo.price && (\n                <TableRow>\n                  <TableCell>Total Cost</TableCell>\n                  <TableCell>\n                    {usdFormatter.format(labelHelpInfo.price)}\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n          <Box display=\"flex\" marginTop={2} justifyContent=\"flex-end\">\n            <Button variant=\"outlined\">Restart</Button>\n            {/* TODO sync samples merges samples from link */}\n            {/* <Button\n              style={{ marginLeft: 12 }}\n              variant=\"outlined\"\n              color=\"primary\"\n            >\n              Sync Samples\n            </Button> */}\n          </Box>\n        </Box>\n      ) : null}\n    </Container>\n  )\n}\n","import React, { createContext, useMemo, useState } from \"react\"\n\nimport { useAppConfig } from \"../AppConfig\"\nexport const LabelHelpContext = createContext({})\n\nexport const LabelHelpProvider = ({ children }) => {\n  const { fromConfig, setInConfig } = useAppConfig()\n  const [loadingPricingConfig, setLoadingPricingConfig] = useState(false)\n  const [pricingConfig, setPricingConfig] = useState(false)\n  const [loadingMyTeam, setLoadingMyTeam] = useState(false)\n  const [myCredits, setMyCredits] = useState(null)\n  const contextValue = useMemo(\n    () => ({\n      pricingConfig,\n      myCredits,\n      loadPricingConfig: async () => {\n        if (loadingPricingConfig) return\n        setLoadingPricingConfig(true)\n        const pricingConfig = await fetch(\n          \"https://labelhelp.universaldatatool.com/api/price\"\n        ).then((r) => r.json())\n        setLoadingPricingConfig(false)\n        setPricingConfig(pricingConfig)\n      },\n      loadMyCredits: async () => {\n        if (loadingMyTeam) return\n        setLoadingMyTeam(true)\n        const apiKey = fromConfig(\"labelhelp.apikey\")\n        if (!apiKey) return\n        let response\n        try {\n          response = await fetch(\n            `https://labelhelp.universaldatatool.com/api/me`,\n            {\n              headers: { apikey: apiKey },\n            }\n          )\n          response = await response.json()\n        } catch (e) {\n          console.error(e)\n          setLoadingMyTeam(false)\n          return Promise.reject(e)\n        }\n        if (response.status >= 400) {\n          setInConfig(\"labelhelp.apikey\", null)\n        }\n\n        setMyCredits(response.credit)\n        setLoadingMyTeam(false)\n      },\n    }),\n    [\n      pricingConfig,\n      loadingPricingConfig,\n      // eslint-disable-next-line\n      fromConfig(\"labelhelp.apikey\"),\n      loadingMyTeam,\n      myCredits,\n      fromConfig,\n      setInConfig,\n    ]\n  )\n  return (\n    <LabelHelpContext.Provider value={contextValue}>\n      {children}\n    </LabelHelpContext.Provider>\n  )\n}\n","import useIsDesktop from \"./use-is-desktop\"\nexport default () => {\n  const isDesktop = useIsDesktop()\n  if (isDesktop) return false\n  if (window.location.search.includes(\"mode=labelonly\")) {\n    return true\n  }\n  return false\n}\n","export default (dataset, varName) => {\n  let fields = (dataset.interface || {}).fields || []\n  // const totalLabels = fields.reduce(\n  //   (acc, f) =>\n  //     f.interface.type !== \"data_entry\"\n  //       ? acc\n  //       : acc + (f.interface.surveyjs.questions[0].choices || []).length,\n  //   0\n  // )\n  // const totalBoundingBoxes = fields.filter(\n  //   (f) => f.interface.type === \"image_segmentation\"\n  // ).length\n\n  switch (varName) {\n    case \"sample_count\":\n    case \"num_samples\":\n      return (dataset.samples || []).length\n    case \"number_of_fields\":\n      return Object.keys(dataset.interface.fields || {}).length\n    case \"text_field_count\":\n      if (dataset.interface.type === \"data_entry\") {\n        return dataset.interface.surveyjs.questions.filter(\n          (q) => q.type === \"text\"\n        ).length\n      } else if (dataset.interface.type === \"composite\") {\n        return fields.filter(\n          (f) =>\n            f.interface.type === \"data_entry\" &&\n            f.interface.surveyjs.questions[0].type === \"text\"\n        ).length\n      } else {\n        throw new Error(\n          \"Couldn't compute text_field_count for interface: \" +\n            dataset.interface.type\n        )\n      }\n    case \"number_of_classifications\":\n      return dataset.interface.labels.length\n    case \"average_number_of_interactions_per_image\":\n      // find completed samples\n      const completedSamples = dataset.samples.filter((s) => s.annotation)\n      let totalInteractions = 0\n      let totalSamplesConsidered = 0\n      for (const { annotation } of completedSamples) {\n        if (totalSamplesConsidered > 10) break\n        if (typeof annotation === \"object\" && annotation.length) {\n          totalSamplesConsidered += 1\n          for (const { points } of annotation) {\n            if (points) {\n              totalInteractions += points.length\n            } else {\n              totalInteractions += 1\n            }\n          }\n        }\n      }\n      if (totalSamplesConsidered < 1)\n        throw new Error(\n          \"Not enough completed samples to compute average_number_of_interactions_per_image\"\n        )\n      return totalInteractions / totalSamplesConsidered\n    case \"number_of_exclusive_classifications\":\n      return dataset.interface.multiple ? 0 : dataset.interface.labels.length\n    case \"number_of_nonexclusive_classifications\":\n      return dataset.interface.multiple ? dataset.interface.labels.length : 0\n    case \"average_text_length\":\n      return (\n        dataset.samples\n          .map((s) => s.document.length)\n          .reduce((acc, l) => acc + l, 0) / dataset.samples.length\n      )\n    case \"number_of_labels\":\n      return dataset.interface.labels.length\n    default:\n      throw new Error(`Don't know how to compute \"${varName}\"`)\n  }\n}\n","import { useContext, useEffect } from \"react\"\n\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\nimport { useActiveDataset } from \"../FileContext\"\nimport { useAppConfig } from \"../AppConfig\"\nimport { LabelHelpContext } from \"./LabelHelpProvider.js\"\nimport computeDatasetVariable from \"../../utils/compute-dataset-variable\"\n\nexport const useLabelHelp = () => {\n  const isLabelOnlyMode = useIsLabelOnlyMode()\n  const { dataset } = useActiveDataset()\n  const {\n    pricingConfig,\n    myCredits,\n    remoteFile,\n    loadPricingConfig,\n    loadMyCredits,\n  } = useContext(LabelHelpContext)\n  const { fromConfig } = useAppConfig()\n  const labelHelpDisabled = Boolean(fromConfig(\"labelhelp.disabled\"))\n  const hasLabelHelpAPIKey = Boolean(fromConfig(\"labelhelp.apikey\"))\n\n  useEffect(() => {\n    if (labelHelpDisabled || isLabelOnlyMode) return\n    if (!dataset) return\n    if (!pricingConfig) loadPricingConfig()\n  }, [\n    pricingConfig,\n    isLabelOnlyMode,\n    labelHelpDisabled,\n    loadPricingConfig,\n    dataset,\n  ])\n\n  if (!dataset)\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"no active dataset\",\n    }\n  if (labelHelpDisabled)\n    return { labelHelpEnabled: false, labelHelpError: \"Disabled in config\" }\n  if (isLabelOnlyMode) return { labelHelpEnabled: false }\n  if (!hasLabelHelpAPIKey && dataset.samples.length < 100) {\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"Less than 100 samples\",\n    }\n  }\n  if (!pricingConfig) {\n    return {\n      labelHelpEnabled: false,\n      labelHelpError: \"No pricing config\",\n    }\n  }\n\n  try {\n    const { formula, variables: variableDescriptions } =\n      pricingConfig[dataset.interface.type] || {}\n\n    if (!formula)\n      return {\n        labelHelpEnabled: false,\n        labelHelpError: `No pricing formula for \"${dataset.interface.type}\"`,\n      }\n\n    const variables = {}\n    for (const variableName of Object.keys(variableDescriptions)) {\n      variables[variableName] = computeDatasetVariable(dataset, variableName)\n    }\n\n    const funcArgs = Object.keys(variables)\n    // TODO sanitize formula\n    // eslint-disable-next-line\n    const formulaFuncPos = new Function(...funcArgs, \"return \" + formula)\n    const formulaFunc = (variables) => {\n      return formulaFuncPos(...funcArgs.map((ak) => variables[ak]))\n    }\n    const totalCost = formulaFunc(variables)\n\n    return {\n      labelHelpEnabled: true,\n      myCredits,\n      loadMyCredits,\n      remoteFile,\n      formula,\n      variableDescriptions,\n      variables,\n      formulaFunc,\n      totalCost,\n      labelHelpAPIKey: fromConfig(\"labelhelp.apikey\"),\n    }\n  } catch (e) {\n    return { labelHelpEnabled: false, labelHelpError: e.toString() }\n  }\n}\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport APIKeyEntry from \"./api-key-entry.js\"\nimport PaperContainer from \"../PaperContainer\"\nimport LabelHelpDialogContent from \"./label-help-dialog-content\"\nimport { useAppConfig } from \"../AppConfig\"\n\nexport { LabelHelpProvider, LabelHelpContext } from \"./LabelHelpProvider.js\"\nexport { useLabelHelp } from \"./use-label-help\"\n\nconst Container = styled(\"div\")({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n})\n\nexport const LabelHelpView = () => {\n  const { fromConfig } = useAppConfig()\n  const hasAPIKey = Boolean(fromConfig(\"labelhelp.apikey\"))\n\n  return (\n    <Container>\n      {!hasAPIKey ? (\n        <APIKeyEntry key=\"apikeyentry\" />\n      ) : (\n        <PaperContainer\n          key=\"dialogcontent\"\n          style={{ marginTop: 48, width: \"100%\", maxWidth: 800 }}\n        >\n          <LabelHelpDialogContent />\n        </PaperContainer>\n      )}\n    </Container>\n  )\n}\n\nexport default LabelHelpView\n","import React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\n\nconst Container = styled(\"div\")({\n  fontSize: 18,\n  padding: 32,\n  textAlign: \"center\",\n  color: colors.grey[700],\n  \"& a\": {\n    color: colors.blue[500],\n  },\n})\n\nexport const ActiveLearningView = () => {\n  return (\n    <Container>\n      Hey, this isn't available yet, but if you'd like this functionality please\n      let us know by leaving a thumbs up on{\" \"}\n      <a href=\"https://github.com/UniversalDataTool/universal-data-tool/issues/148\">\n        this github issue\n      </a>\n    </Container>\n  )\n}\n\nexport default ActiveLearningView\n","import React, { useEffect, useState } from \"react\"\nimport LabelErrorBoundary from \"../LabelErrorBoundary\"\nimport UniversalDataViewer from \"../UniversalDataViewer\"\nimport Stats from \"../Stats\"\nimport SampleGrid from \"../SampleGrid\"\nimport Box from \"@material-ui/core/Box\"\nimport { setIn } from \"seamless-immutable\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport duration from \"duration\"\nimport { styled } from \"@material-ui/core/styles\"\nimport Tabs from \"@material-ui/core/Tabs\"\nimport Tab from \"@material-ui/core/Tab\"\nimport BorderColorIcon from \"@material-ui/icons/BorderColor\"\nimport SupervisedUserCircleIcon from \"@material-ui/icons/SupervisedUserCircle\"\nimport DataUsageIcon from \"@material-ui/icons/DataUsage\"\nimport LabelHelpView, { useLabelHelp } from \"../LabelHelpView\"\nimport ActiveLearningView from \"../ActiveLearningView\"\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\n\nconst OverviewContainer = styled(\"div\")({\n  padding: 16,\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  boxSizing: \"border-box\",\n})\n\nexport default ({\n  dataset,\n  onChangeDataset,\n  singleSampleDataset,\n  onChangeSingleSampleDataset,\n  selectedBrush = \"complete\",\n  onClickSetup,\n  onChangeSampleTimeToComplete,\n  sampleTimeToComplete,\n}) => {\n  const [currentTab, setTab] = useState(\"label\")\n  const [showLabelHelpPricing, setShowLabelHelpPricing] = useState(false)\n  const posthog = usePosthog()\n  const { labelHelpEnabled, totalCost } = useLabelHelp()\n  const labelOnlyMode = useIsLabelOnlyMode()\n\n  useEffect(() => {\n    if (process.env.REACT_APP_SHOW_LABELHELP_PRICING === \"true\")\n      setShowLabelHelpPricing(true)\n  }, [])\n\n  let percentComplete = 0\n  if (dataset.samples && dataset.samples.length > 0) {\n    percentComplete =\n      dataset.samples\n        .map((s) => s.annotation !== undefined && s.annotation !== null)\n        .filter(Boolean).length / dataset.samples.length\n  }\n\n  useEffect(() => {\n    if (labelHelpEnabled) {\n      posthog.capture(\"label_help_showed\")\n    }\n  }, [labelHelpEnabled, posthog])\n\n  useEffect(() => {\n    if (currentTab === \"labelhelp\") {\n      posthog.capture(\"label_help_clicked\")\n    }\n  }, [currentTab, posthog])\n\n  return singleSampleDataset ? (\n    <LabelErrorBoundary>\n      <UniversalDataViewer\n        datasetName={`Sample ${singleSampleDataset.sampleIndex}`}\n        onSaveTaskOutputItem={(relativeIndex, output) => {\n          const {\n            sampleIndex,\n            samples: [sample],\n          } = singleSampleDataset\n\n          let newDataset = dataset\n          newDataset = setIn(\n            newDataset,\n            [\"samples\", sampleIndex, \"annotation\"],\n            output\n          )\n\n          if (\n            sample.brush !== selectedBrush &&\n            !(sample.brush === undefined && selectedBrush === \"complete\")\n          ) {\n            newDataset = setIn(\n              newDataset,\n              [\"samples\", sampleIndex, \"brush\"],\n              selectedBrush\n            )\n          }\n\n          onChangeSingleSampleDataset(\n            setIn(singleSampleDataset, [\"samples\", 0, \"annotation\"], output)\n          )\n          onChangeDataset(newDataset)\n        }}\n        onExit={(nextAction = \"nothing\") => {\n          if (singleSampleDataset.startTime) {\n            onChangeSampleTimeToComplete(\n              Date.now() - singleSampleDataset.startTime\n            )\n          }\n          const { sampleIndex } = singleSampleDataset\n          switch (nextAction) {\n            case \"go-to-next\":\n              if (sampleIndex !== dataset.samples.length - 1) {\n                posthog.capture(\"next_sample\", {\n                  interface_type: dataset.interface.type,\n                })\n                onChangeSingleSampleDataset({\n                  ...dataset,\n                  samples: [dataset.samples[sampleIndex + 1]],\n                  sampleIndex: sampleIndex + 1,\n                  startTime: Date.now(),\n                })\n                return\n              }\n              break\n            case \"go-to-previous\":\n              if (sampleIndex !== 0) {\n                onChangeSingleSampleDataset({\n                  ...dataset,\n                  samples: [dataset.samples[sampleIndex - 1]],\n                  sampleIndex: sampleIndex - 1,\n                  startTime: Date.now(),\n                })\n                return\n              }\n              break\n            default:\n              break\n          }\n          onChangeSingleSampleDataset(null)\n        }}\n        dataset={singleSampleDataset}\n        onClickSetup={onClickSetup}\n      />\n    </LabelErrorBoundary>\n  ) : (\n    <OverviewContainer>\n      <Box display=\"flex\">\n        <Box>\n          <Tabs value={currentTab} onChange={(e, newTab) => setTab(newTab)}>\n            <Tab icon={<BorderColorIcon />} label=\"Label\" value=\"label\" />\n            {!labelOnlyMode && (\n              <Tab\n                icon={<DataUsageIcon />}\n                label=\"Active Learning\"\n                value=\"activelearning\"\n              />\n            )}\n            {labelHelpEnabled && (\n              <Tab\n                icon={<SupervisedUserCircleIcon />}\n                label={\n                  showLabelHelpPricing && totalCost\n                    ? `${totalCost}$`\n                    : \"Label Help\"\n                }\n                value=\"labelhelp\"\n              />\n            )}\n          </Tabs>\n        </Box>\n        <Box flexGrow={1} />\n        <Stats\n          stats={[\n            {\n              name: \"Percent Complete\",\n              value: Math.floor(percentComplete * 100) + \"%\",\n            },\n            {\n              name: \"Time per Sample\",\n              value: duration(\n                new Date(Date.now() - sampleTimeToComplete)\n              ).toString(1, 1),\n            },\n            {\n              name: \"Estimated Remaining\",\n              value: duration(\n                new Date(\n                  Date.now() -\n                    sampleTimeToComplete *\n                      (1 - percentComplete) *\n                      (dataset.samples || []).length\n                )\n              ).toString(1, 2),\n            },\n          ]}\n        />\n      </Box>\n      <Box flexGrow={1}>\n        {currentTab === \"label\" && (\n          <SampleGrid\n            count={(dataset.samples || []).length}\n            samples={dataset.samples || []}\n            completed={(dataset.samples || []).map((s) =>\n              Boolean(s.annotation)\n            )}\n            onClick={(sampleIndex) => {\n              posthog.capture(\"open_sample\", {\n                interface_type: dataset.interface.type,\n              })\n              onChangeSingleSampleDataset({\n                ...dataset,\n                samples: [dataset.samples[sampleIndex]],\n                sampleIndex,\n                startTime: Date.now(),\n              })\n            }}\n          />\n        )}\n        {currentTab === \"activelearning\" && <ActiveLearningView />}\n        {currentTab === \"labelhelp\" && <LabelHelpView />}\n      </Box>\n    </OverviewContainer>\n  )\n}\n","import React, { useState, useEffect } from \"react\"\nimport AceEditor from \"react-ace\"\nimport Box from \"@material-ui/core/Box\"\nimport Button from \"@material-ui/core/Button\"\nimport { useToasts } from \"../Toasts\"\n\nexport const RawJSONEditor = ({ content, onSave }) => {\n  const [jsonText, setJSONText] = useState(\"\")\n  const { addToast } = useToasts()\n  useEffect(() => {\n    if (!content) return\n    if (typeof content === \"string\") {\n      setJSONText(content)\n    } else if (typeof content === \"object\") {\n      setJSONText(JSON.stringify(content, null, \"  \"))\n    }\n  }, [content])\n  return (\n    <Box position=\"relative\" width=\"100%\">\n      <AceEditor\n        theme=\"github\"\n        mode=\"javascript\"\n        width=\"100%\"\n        value={jsonText}\n        editorProps={{ $blockScrolling: Infinity }}\n        onChange={(t) => setJSONText(t)}\n      />\n      <Box position=\"absolute\" right={16} top={16}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            try {\n              onSave(JSON.parse(jsonText))\n            } catch (e) {\n              addToast(\"Invalid JSON\", \"error\")\n            }\n          }}\n        >\n          Save\n        </Button>\n      </Box>\n    </Box>\n  )\n}\n\nexport default RawJSONEditor\n","// @flow\n\nimport React, { useState, useEffect, useMemo } from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nimport Header from \"../Header\"\nimport EditableTitleText from \"./EditableTitleText.js\"\nimport SamplesView from \"../SamplesView\"\nimport InterfacePage from \"../InterfacePage\"\nimport EditSampleDialog from \"../EditSampleDialog\"\nimport useElectron from \"../../utils/use-electron\"\nimport useTimeToCompleteSample from \"../../utils/use-time-to-complete-sample.js\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { useToasts } from \"../Toasts\"\nimport { setIn, without } from \"seamless-immutable\"\nimport useEventCallback from \"use-event-callback\"\nimport usePosthog from \"../../utils/use-posthog\"\nimport classnames from \"classnames\"\nimport LabelView from \"../LabelView\"\nimport useIsLabelOnlyMode from \"../../utils/use-is-label-only-mode\"\nimport { HotKeys } from \"react-hotkeys\"\nimport { useHotkeyStorage } from \"../HotkeyStorage\"\nimport RawJSONEditor from \"../RawJSONEditor\"\n\nimport \"brace/mode/javascript\"\nimport \"brace/theme/github\"\n\nconst useStyles = makeStyles({\n  headerButton: {\n    color: \"#fff\",\n  },\n  saveIcon: {\n    marginRight: 4,\n  },\n  editIcon: {\n    marginLeft: 4,\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100vw\",\n    height: \"100vh\",\n  },\n})\n\nexport default ({\n  file,\n  datasetName = \"Universal Data Tool\",\n  dataset,\n  content,\n  inSession,\n  url,\n  fileName = \"unnamed\",\n  onChangeDataset = () => null,\n  onChangeFile,\n  onFileDrop,\n  initialMode = \"setup\",\n  authConfig,\n  user,\n  recentItems,\n  selectedBrush,\n}) => {\n  const labelOnlyMode = useIsLabelOnlyMode()\n  var [valueDisplay, setValueDisplay] = useState(fileName)\n  const c = useStyles()\n  const { addToast } = useToasts()\n  const [mode, changeMode] = useState(labelOnlyMode ? \"label\" : initialMode)\n  const [singleSampleDataset, setSingleSampleDataset] = useState()\n  const [sampleInputEditor, changeSampleInputEditor] = useState({})\n  const { ipcRenderer } = useElectron() || {}\n  const posthog = usePosthog()\n\n  const headerTabs = labelOnlyMode ? [\"Label\"] : [\"Setup\", \"Samples\", \"Label\"]\n\n  const [\n    sampleTimeToComplete,\n    changeSampleTimeToComplete,\n  ] = useTimeToCompleteSample()\n\n  useEffect(() => {\n    if (!ipcRenderer) return\n    const onOpenSettingsPage = () => changeMode(\"settings\")\n    const onOpenSamplesPage = () => changeMode(\"samples\")\n    const onOpenLabelPage = () => changeMode(\"label\")\n    ipcRenderer.on(\"open-settings-page\", onOpenSettingsPage)\n    ipcRenderer.on(\"open-samples-page\", onOpenSamplesPage)\n    ipcRenderer.on(\"open-label-page\", onOpenLabelPage)\n    return () => {\n      ipcRenderer.removeListener(\"open-settings-page\", onOpenSettingsPage)\n      ipcRenderer.removeListener(\"open-samples-page\", onOpenSamplesPage)\n      ipcRenderer.removeListener(\"open-label-page\", onOpenLabelPage)\n    }\n  }, [ipcRenderer])\n\n  useEffect(() => {\n    posthog.people.set({\n      average_time_to_complete_sample: sampleTimeToComplete,\n    })\n  }, [sampleTimeToComplete, posthog.people])\n\n  useEffect(() => {\n    if (mode !== \"label\") {\n      setSingleSampleDataset(null)\n    }\n    posthog.capture(\"open_editor_tab\", { tab: mode })\n  }, [mode, posthog])\n\n  const onChangeTab = useEventCallback((tab) => changeMode(tab.toLowerCase()))\n\n  const shortcutHandlers = useMemo(\n    () => ({\n      switch_to_label: () => changeMode(\"label\"),\n      switch_to_setup: () => changeMode(\"setup\"),\n      switch_to_samples: () => changeMode(\"samples\"),\n    }),\n    [changeMode]\n  )\n\n  const { keyMap } = useHotkeyStorage()\n\n  return (\n    <HotKeys allowChanges handlers={shortcutHandlers} keyMap={keyMap}>\n      <div className={classnames(c.container, \"universaldatatool\")}>\n        <Header\n          title={\n            inSession ? (\n              <TextField\n                label=\"Share Link\"\n                title=\"share-link\"\n                value={url}\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            ) : (\n              <EditableTitleText\n                label=\"File Name\"\n                onChange={(newName) => {\n                  onChangeFile(setIn(file, [\"fileName\"], newName))\n                  setValueDisplay(newName)\n                }}\n                value={valueDisplay || \"\"}\n              />\n            )\n          }\n          onChangeTab={onChangeTab}\n          currentTab={mode}\n          tabs={headerTabs}\n        />\n        <div style={{ height: \"100%\", overflowY: \"scroll\" }}>\n          {mode === \"json\" && (\n            <RawJSONEditor\n              content={dataset}\n              onSave={(newDataset) => {\n                onChangeDataset(newDataset)\n                changeMode(\"setup\")\n              }}\n            />\n          )}\n          {mode === \"setup\" && (\n            <InterfacePage\n              onClickEditJSON={() => changeMode(\"json\")}\n              dataset={dataset}\n              onClearLabelData={() => {\n                onChangeDataset(\n                  setIn(\n                    dataset,\n                    [\"samples\"],\n                    dataset.samples.map((s) => without(s, \"annotation\"))\n                  )\n                )\n              }}\n              onChange={(iface) => {\n                if (\n                  iface.type !== dataset.interface.type &&\n                  dataset.interface.type !== \"empty\" &&\n                  dataset.samples.map((s) => s.annotation).some(Boolean)\n                ) {\n                  addToast(\n                    \"Changing label types can cause label data issues. You must clear all label data first.\",\n                    \"error\"\n                  )\n                  return\n                }\n                onChangeDataset({\n                  ...dataset,\n                  interface: iface,\n                })\n              }}\n            />\n          )}\n          {mode === \"samples\" && (\n            <SamplesView\n              file={file}\n              dataset={dataset}\n              openSampleLabelEditor={(sampleIndex) => {\n                setSingleSampleDataset({\n                  ...dataset,\n                  samples: [dataset.samples[sampleIndex]],\n                  sampleIndex,\n                  annotationStartTime: Date.now(),\n                })\n                posthog.capture(\"open_sample\", {\n                  interface_type: dataset.interface.type,\n                })\n                changeMode(\"label\")\n              }}\n              openSampleInputEditor={(sampleIndex) => {\n                changeSampleInputEditor({ open: true, sampleIndex })\n              }}\n              deleteSample={(sampleIndex) => {\n                const newSamples = [...dataset.samples]\n                newSamples.splice(sampleIndex, 1)\n                onChangeDataset({\n                  ...dataset,\n                  samples: newSamples,\n                })\n              }}\n              onChangeFile={(file) => {\n                onChangeFile(file)\n                setValueDisplay(file.fileName)\n              }}\n              onChangeDataset={onChangeDataset}\n              authConfig={authConfig}\n              user={user}\n            />\n          )}\n          {mode === \"label\" && (\n            <LabelView\n              selectedBrush={selectedBrush}\n              dataset={dataset}\n              sampleTimeToComplete={sampleTimeToComplete}\n              onChangeSampleTimeToComplete={changeSampleTimeToComplete}\n              onChangeDataset={onChangeDataset}\n              singleSampleDataset={singleSampleDataset}\n              onChangeSingleSampleDataset={setSingleSampleDataset}\n              onClickSetup={() => changeMode(\"setup\")}\n            />\n          )}\n        </div>\n        <EditSampleDialog\n          {...sampleInputEditor}\n          sampleInput={\n            sampleInputEditor.sampleIndex !== undefined\n              ? dataset.samples[sampleInputEditor.sampleIndex]\n              : null\n          }\n          onClose={() => {\n            changeSampleInputEditor({ open: false })\n          }}\n          onChange={(newInput) => {\n            onChangeDataset(\n              setIn(\n                dataset,\n                [\"samples\", sampleInputEditor.sampleIndex],\n                newInput\n              )\n            )\n          }}\n        />\n      </div>\n    </HotKeys>\n  )\n}\n","import { useReducer } from \"react\"\n\nexport default () => {\n  const [{ timeToCompleteSample }, changeSampleTimeToComplete] = useReducer(\n    (state, newTimeToComplete) => {\n      const newSamplesInWindow = state.samplesInWindow\n        .slice(-10)\n        .concat([newTimeToComplete])\n      return {\n        timeToCompleteSample:\n          newSamplesInWindow.reduce((acc, a) => acc + a, 0) /\n          newSamplesInWindow.length,\n        samplesInWindow: newSamplesInWindow,\n      }\n    },\n    { timeToCompleteSample: 0, samplesInWindow: [] }\n  )\n  return [timeToCompleteSample, changeSampleTimeToComplete]\n}\n","// @flow weak\n\nexport default (changeLog) => {\n  const humanReadableChangeLog = []\n  for (const { userName, op, path } of changeLog) {\n    if (path.startsWith(\"/interface\")) {\n      humanReadableChangeLog.push({\n        type: \"warning\",\n        message: `${userName} changed the project settings`,\n      })\n    } else if (path.startsWith(\"/taskOutput\")) {\n      const sampleMatch = path.match(/\\/samples\\/([^/]+)/)\n      humanReadableChangeLog.push({\n        type: \"info\",\n        message: `${userName} changed sample ${sampleMatch[1]}`,\n      })\n    } else {\n      humanReadableChangeLog.push({\n        message: `${userName} did a ${op} at ${path}`,\n        type: \"info\",\n      })\n    }\n  }\n  return humanReadableChangeLog\n}\n","/*\nThis doesn't handle a fair number of edge cases, for the full specification\nfor what it should implement, see https://tools.ietf.org/html/rfc6902\n\nWhen applySeamlessPatch is called, it usually is accompanied by a object hash\ncheck to make sure that the patch applied correctly, and if not, perform\na download of the latest version. Because of this, we can safely ignore the\ntricky edge cases.\n*/\n\nimport seamless from \"seamless-immutable\"\n\nconst { setIn, getIn, updateIn, without } = seamless\n\nfunction addToArray(a, newValue) {\n  return a.concat([newValue])\n}\n\nfunction withoutIn(obj, path) {\n  if (path.length === 0) return without(obj, path[0])\n  const parentPath = path.slice(0, -1)\n  const key = path[path.length - 1]\n  const parentObj = getIn(obj, parentPath)\n  if (Array.isArray(parentObj)) {\n    const index = parseInt(key)\n    return setIn(obj, parentPath, [\n      ...parentObj.slice(0, index),\n      ...parentObj.slice(index + 1),\n    ])\n  } else {\n    return setIn(obj, parentPath, without(parentObj, key))\n  }\n}\n\nexport default (object, patches) => {\n  for (const patch of patches) {\n    let { op, path } = patch\n    path = path.split(\"/\").filter(Boolean)\n    if (path.length === 0) {\n      // this operation is on the root object, special handling should apply\n      if (op === \"replace\") {\n        object = patch.value\n        continue\n      }\n      throw new Error(\"Operation on root object not supported\")\n    }\n    switch (op) {\n      case \"replace\": {\n        object = setIn(object, path, patch.value)\n        continue\n      }\n      case \"copy\": {\n        object = setIn(object, path, getIn(object, patch.from.split(\"/\")))\n        continue\n      }\n      case \"add\": {\n        if (!isNaN(parseInt(path.slice(-1)[0]))) {\n          object = setIn(object, path, patch.value)\n        } else {\n          const arrayAtPath = Array.isArray(getIn(object, path))\n          if (arrayAtPath) {\n            object = updateIn(object, path, addToArray, patch.value)\n          } else {\n            object = setIn(object, path, patch.value)\n          }\n        }\n        continue\n      }\n      case \"move\": {\n        const from = patch.from.split(\"/\")\n        object = setIn(object, path, getIn(object, from))\n        object = withoutIn(object, from)\n        continue\n      }\n      case \"remove\": {\n        object = withoutIn(object, path)\n        continue\n      }\n      default:\n        return object\n    }\n  }\n  return object\n}\n","// This is the same hashing code that the server uses\n\nconst stringify = require(\"json-stable-stringify\")\n\nconst hashString = (s) => {\n  var hash = 0,\n    i,\n    chr\n  for (i = 0; i < s.length; i++) {\n    chr = s.charCodeAt(i)\n    hash = (hash << 5) - hash + chr\n    hash |= 0\n  }\n  return hash\n}\n\nexport default (o) => hashString(stringify(o))\n","// @flow\n\nimport { useEffect } from \"react\"\nimport CollaborationHandler from \"./handler.js\"\nimport { setIn } from \"seamless-immutable\"\n\nconst serverUrl =\n  window.localStorage.CUSTOM_COLLABORATION_SERVER ||\n  \"https://udt-collaboration-server.now.sh\"\n\n// We use a global singleton to manage the collaboration state machine\nconst collab = new CollaborationHandler({ serverUrl })\n\nexport const convertToCollaborativeFile = async (file) => {\n  await collab.createSession(file.content)\n  return {\n    fileName: file.fileName,\n    id: file.id,\n    sessionId: collab.sessionId,\n    url: `${window.location.origin}?s=${collab.sessionId}`,\n    content: file.content,\n    mode: \"server\",\n  }\n}\n\nexport const joinSession = async (sessionId) => {\n  await collab.joinSession(sessionId)\n  return {\n    state: collab.state,\n    version: collab.version,\n  }\n}\n\nexport default (file, changeFile) => {\n  // const { addToast } = useToasts()\n  const userName = window.localStorage.userName\n  useEffect(() => {\n    if (userName && !userName.includes(\"anonymous\")) {\n      try {\n        collab.userName = JSON.parse(window.localStorage.userName)\n      } catch (e) {}\n    }\n  }, [userName])\n\n  useEffect(() => {\n    if (!file || file.mode !== \"server\") return\n    if (file.sessionId !== collab.sessionId) return\n\n    const checkForLatestPatch = async () => {\n      const applyResult = await collab.applyLatestPatches()\n\n      if (applyResult) {\n        // TODO apply in a smart, immutable way\n        changeFile(setIn(file, [\"content\"], collab.state))\n      }\n\n      if (!timeout) return\n      timeout = setTimeout(checkForLatestPatch, 500)\n    }\n\n    let timeout = setTimeout(checkForLatestPatch, 500)\n    return () => {\n      clearTimeout(timeout)\n      timeout = null\n    }\n  }, [file, changeFile])\n\n  // Update the Server State by Sending Patches\n  useEffect(() => {\n    if (!file || file.mode !== \"server\") return\n    collab.sendPatchIfChanged(file.content)\n  }, [file])\n}\n","// @flow weak\n// NOTE: for unit tests you need to change the following line to...\n// import rfc6902 from \"rfc6902\"\nimport * as rfc6902 from \"rfc6902\"\nimport bent from \"bent\"\nimport getHumanReadableLog from \"./get-human-readable-log.js\"\nimport applySeamlessPatch from \"./apply-seamless-patch.js\"\nimport hash from \"./server-hash.js\"\n\nclass CollaborationHandler {\n  serverUrl = \"http://localhost:6003\"\n  getJSON = (url, payload, opts) => {}\n  postJSON = (url, payload, opts) => {}\n  patchJSON = (url, payload, opts) => {}\n  userName = \"anonymous\"\n\n  sessionId = null\n  state = null\n  version = null\n\n  constructor({ serverUrl, userName }) {\n    this.serverUrl = serverUrl\n    this.getJSON = bent(\"json\", \"GET\", serverUrl)\n    this.postJSON = bent(\"json\", \"POST\", serverUrl)\n    this.patchJSON = bent(\"json\", \"PATCH\", serverUrl)\n    this.userName =\n      userName || `anonymous_${Math.random().toString(36).slice(2, 6)}`\n  }\n\n  async createSession(initialContent) {\n    const response = await this.postJSON(\"/api/session\", {\n      udt: initialContent,\n    })\n\n    this.state = initialContent\n    this.sessionId = response.short_id\n    this.version = response.version\n  }\n\n  async getLatestState() {\n    try {\n      const res = await this.getJSON(\n        `/api/session/${encodeURIComponent(this.sessionId)}`\n      )\n      return {\n        state: res.udt_json,\n        version: res.version,\n      }\n    } catch (e) {\n      throw new Error(\n        `error getting session \"${this.sessionId}\": ${e.toString()}`\n      )\n    }\n  }\n\n  async updateToLatestState() {\n    const { state, version } = await this.getLatestState()\n    this.state = state\n    this.version = version\n  }\n\n  async joinSession(sessionId) {\n    this.sessionId = sessionId\n    await this.updateToLatestState()\n  }\n\n  async applyLatestPatches() {\n    const {\n      patch,\n      hashOfLatestState,\n      latestVersion,\n      changeLog,\n    } = await this.getJSON(\n      `/api/session/${encodeURIComponent(this.sessionId)}/diffs?since=${\n        this.version\n      }`\n    )\n\n    if (patch.length === 0 || latestVersion === this.version) {\n      return null\n    }\n\n    const humanReadableLog = getHumanReadableLog(changeLog)\n\n    let newState = applySeamlessPatch(this.state, patch)\n\n    if (hash(newState) !== hashOfLatestState) {\n      console.error(\"new state with patches applied didn't match latest state\")\n      await this.updateToLatestState()\n      return { patch, changeLog: humanReadableLog }\n    }\n\n    this.state = newState\n    this.version = latestVersion\n    return { patch, changeLog: humanReadableLog }\n  }\n\n  async sendPatchIfChanged(newState) {\n    const patch = rfc6902.createPatch(this.state, newState)\n    if (patch.length === 0) return null\n\n    const { hashOfLatestState, latestVersion } = await this.patchJSON(\n      `/api/session/${encodeURIComponent(this.sessionId)}`,\n      {\n        patch,\n        userName: this.userName,\n      }\n    )\n\n    if (hash(newState) !== hashOfLatestState) {\n      console.error(\n        \"after patch, hashes were not equal! getting latest version from server...\"\n      )\n      await this.updateToLatestState()\n      return this\n    }\n\n    this.state = newState\n    this.version = latestVersion\n    return this\n  }\n}\n\nexport default CollaborationHandler\n","import JAC from \"jac-format\"\nimport range from \"lodash/range\"\nimport { flatten } from \"flat\"\n\nexport default (obj) => {\n  const AddSamplesKeys = (k) => {\n    sampleKeys.add(k)\n  }\n  // Find all possible sample keys\n  let sampleKeys = new Set()\n  for (const sample of obj.samples) {\n    Object.keys(flatten(sample)).forEach((k) => AddSamplesKeys(k))\n  }\n  sampleKeys = Array.from(sampleKeys).sort(\n    (a, b) => a.split(\".\").length - b.split(\".\").length\n  )\n\n  if (sampleKeys.some((k) => k.includes(\"output.keyframes\"))) {\n    sampleKeys = sampleKeys.filter((k) => k.includes(\"output.keyframes\"))\n    sampleKeys.push(\"output.keyframes\")\n  }\n\n  const options = {\n    rows: [\n      \"interface\",\n      ...range(obj.samples.length).map((i) => `samples.${i}`),\n    ],\n    columns: [\".\", ...sampleKeys],\n    validate: false,\n  }\n\n  return JAC.toCSV(obj, options)\n}\n","// @flow\n\nimport { useEffect } from \"react\"\nimport useEventCallback from \"use-event-callback\"\nimport useElectron from \"../use-electron.js\"\nimport { useToasts } from \"../../components/Toasts\"\nimport { setIn } from \"seamless-immutable\"\nimport toUDTCSV from \"../to-udt-csv.js\"\nimport useIsDesktop from \"../use-is-desktop\"\n\nconst webReturn = { saveFile: () => null }\n\nexport default (file, changeFile) => {\n  const isDesktop = useIsDesktop()\n  if (!isDesktop) return webReturn\n  const { addToast } = useToasts()\n  const { remote } = useElectron()\n  const saveFile = useEventCallback(({ saveAs = false } = {}) => {\n    if (!file) return\n    async function saveFileAsync() {\n      let filePath = file.filePath\n      if (!file.filePath || saveAs) {\n        const {\n          cancelled,\n          filePath: newFilePath,\n        } = await remote.dialog.showSaveDialog({\n          filters: [\n            { name: \".udt.json\", extensions: [\"udt.json\"] },\n            { name: \".udt.csv\", extensions: [\"udt.csv\"] },\n          ],\n        })\n        filePath =\n          !newFilePath ||\n          newFilePath.endsWith(\".json\") ||\n          newFilePath.endsWith(\".csv\")\n            ? newFilePath\n            : `${newFilePath}.udt.json`\n        if (cancelled || !filePath) {\n          addToast(\"Could not save\")\n          return\n        }\n        changeFile({\n          ...file,\n          filePath,\n          fileName: filePath.split(\"/\").slice(-1)[0],\n        })\n      }\n      await remote\n        .require(\"fs\")\n        .promises.writeFile(\n          filePath,\n          filePath.endsWith(\".csv\")\n            ? toUDTCSV(file.content)\n            : JSON.stringify(file.content, null, \"  \")\n        )\n      addToast(\"File Saved!\")\n    }\n    saveFileAsync()\n  })\n\n  useEffect(() => {\n    if (!file || !file.filePath) return\n    if (file.fileName !== file.filePath.split(\"/\").slice(-1)[0]) {\n      changeFile(\n        setIn(\n          file,\n          [\"filePath\"],\n          file.filePath\n            .split(\"/\")\n            .slice(0, -1)\n            .concat([\n              file.fileName +\n                (file.fileName.endsWith(\".json\") ? \"\" : \".dataset.json\"),\n            ])\n            .join(\"/\")\n        )\n      )\n    }\n  }, [file, changeFile])\n\n  return { saveFile }\n}\n","// @flow weak\n\nimport { useEffect } from \"react\"\nimport usePosthog from \"../../utils/use-posthog\"\nconst posthog = usePosthog()\n\nexport default (udt) => {\n  const udtInterface = udt?.interface\n  useEffect(() => {\n    if (!udtInterface) return\n    posthog.capture(\"interface_type\", { interface_type: udtInterface.type })\n    posthog.people.set({ last_used_interface_type: udtInterface.type })\n  }, [udtInterface])\n\n  const udtSamples = udt?.samples\n  const usedToyDataset = udt?.usedToyDataset\n  useEffect(() => {\n    if (!udtSamples) return\n    const numCompleted = (udtSamples || []).filter((s) => s.annotation).length\n    posthog.capture(\"samples_updated\", {\n      dataset_size: (udtSamples || []).length,\n      samples_completed: numCompleted,\n      percent_completed: numCompleted / (udtSamples || []).length,\n      toy_dataset_used: Boolean(usedToyDataset),\n    })\n    posthog.people.set({\n      recently_used_toy_dataset: Boolean(usedToyDataset),\n    })\n  }, [udtSamples, usedToyDataset])\n}\n","// @flow weak\n\nimport { useEffect, useRef, useCallback } from \"react\"\nimport UpdateAWSStorage from \"./update-aws-storage\"\nimport * as datasetHelper from \"../../dataset-helper\"\nimport isEmpty from \"lodash/isEmpty\"\nimport useAuth from \"../../auth-handlers/use-auth\"\n\nconst workingInterfaces = [\n  \"video_segmentation\",\n  \"image_classification\",\n  \"image_segmentation\",\n  \"text_entity_recognition\",\n  \"text_classification\",\n  \"audio_transcription\",\n  \"composite\",\n  \"data_entry\",\n]\n\nexport default ({ file, setFile }) => {\n  const { isLoggedIn, authProvider, authConfig } = useAuth()\n\n  const lastObjectRef = useRef([])\n  const shouldUpdateAWSStorage = useCallback(() => {\n    if (!isLoggedIn || authProvider !== \"cognito\") return\n\n    var changes = datasetHelper.fileHasChanged(lastObjectRef.current, file)\n    if (\n      isEmpty(file) ||\n      (!changes.content.samples && !changes.fileName) ||\n      !workingInterfaces.includes(file.content.interface.authProvider) ||\n      file.fileName === \"unnamed\"\n    )\n      return false\n    return true\n  }, [file, isLoggedIn, authProvider])\n\n  useEffect(() => {\n    if (!isLoggedIn || authProvider !== \"cognito\") return\n    if (!isEmpty(authConfig)) {\n      if (shouldUpdateAWSStorage()) UpdateAWSStorage(file)\n      lastObjectRef.current = file\n    }\n  }, [shouldUpdateAWSStorage, authConfig, file, isLoggedIn, authProvider])\n}\n","import { Storage } from \"aws-amplify\"\nimport isEmpty from \"lodash/isEmpty\"\nimport * as datasetHelper from \"../../dataset-helper\"\nimport { setIn } from \"seamless-immutable\"\n\nexport default (file) => {\n  async function fetchAFile(element) {\n    var proxyUrl = \"https://cors-anywhere.herokuapp.com/\"\n    var response\n    var url\n    if (datasetHelper.getSampleUrl(element) !== undefined)\n      url = proxyUrl + datasetHelper.getSampleUrl(element)\n    response = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"X-Requested-With\": \"xmlhttprequest\",\n      },\n    }).catch((error) => {\n      console.log(\"Looks like there was a problem: \\n\", error)\n    })\n    const blob = await response.blob()\n    return blob\n  }\n\n  function fileNameExist(file) {\n    if (file !== \"undefined\" && file.fileName !== \"undefined\") return true\n\n    return false\n  }\n\n  function createOrReplaceProjectFile(file) {\n    Storage.put(`${file.fileName}/`, null, {\n      level: \"private\",\n    }).catch((err) => console.log(err))\n  }\n\n  function createOrReplaceAnnotations(file, json) {\n    Storage.put(`${file.fileName}/annotations/annotations.json`, json, {\n      level: \"private\",\n    }).catch((err) => console.log(err))\n  }\n\n  function createOrReplaceImages(file) {\n    if (!isEmpty(file.content.samples)) {\n      file.content.samples.forEach(async (element) => {\n        try {\n          var blob\n          if (!isEmpty(datasetHelper.getSampleUrl(element))) {\n            blob = await fetchAFile(element)\n          } else if (!isEmpty(element.document)) {\n            blob = element.document\n          }\n\n          let imageOrVideoName\n          if (isEmpty(element.sampleName)) {\n            imageOrVideoName = datasetHelper.getSampleName(element)\n          } else {\n            imageOrVideoName = element.sampleName\n          }\n\n          var pathToFile = `${file.fileName}/data/${imageOrVideoName}`\n          Storage.put(pathToFile, blob, {\n            level: \"private\",\n          }).catch((err) => console.log(err))\n        } catch (err) {\n          console.log(err)\n        }\n      })\n    }\n  }\n\n  if (fileNameExist(file)) {\n    var dataset = file.content\n    file = setIn(\n      file,\n      [\"content\"],\n      setIn(dataset, [\"samples\"], datasetHelper.setSamplesName(dataset))\n    )\n    var json = JSON.stringify(file)\n    createOrReplaceProjectFile(file)\n    createOrReplaceAnnotations(file, json)\n    createOrReplaceImages(file)\n  }\n}\n","// @flow\n\nimport { useState, useMemo, useEffect } from \"react\"\nimport useServer, {\n  joinSession,\n  convertToCollaborativeFile,\n} from \"./use-server\"\nimport useFilesystem from \"./use-filesystem\"\nimport useLocalStorage from \"./use-local-storage\"\nimport { useToasts } from \"../../components/Toasts\"\nimport fromUDTCSV from \"../from-udt-csv.js\"\nimport useEventCallback from \"use-event-callback\"\nimport useFileTelemetry from \"./use-file-telemetry\"\nimport useAWSCognito from \"./use-aws-cognito\"\n\nexport default () => {\n  const [file, setFile] = useState()\n  const { addToast } = useToasts()\n\n  const { saveFile } = useFilesystem(file, setFile)\n  const { recentItems, changeRecentItems } = useLocalStorage(file, setFile)\n  useServer(file, setFile)\n\n  // Auth/Cloud\n  useAWSCognito({ file, setFile })\n\n  // Telemetry\n  useFileTelemetry(file && file.content)\n\n  const openFile = useEventCallback((fsFile) => {\n    const { name: fileName, path: filePath } = fsFile\n\n    function handleLoadedFile(content) {\n      try {\n        let dataset\n        if (fileName.endsWith(\"csv\")) {\n          dataset = fromUDTCSV(content)\n        } else {\n          dataset = JSON.parse(content)\n        }\n        // TODO validate OHA and prompt to open anyway if invalid\n        setFile({\n          fileName,\n          filePath,\n          mode: filePath ? \"filesystem\" : \"local-storage\",\n          content: dataset,\n          id: filePath,\n        })\n      } catch (e) {\n        console.log(e.toString())\n        addToast(\"Couldn't read file, see console for details\", \"error\")\n        // addError(`Could not read file \"${fsFile.name}\"`)\n      }\n    }\n\n    if (fsFile.content) {\n      handleLoadedFile(fsFile.content)\n    } else {\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        const content = e.target.result\n        handleLoadedFile(content)\n      }\n      reader.readAsText(fsFile)\n    }\n  })\n\n  const openUrl = useEventCallback(async (url) => {\n    const sessionId = decodeURIComponent(url.match(/[?&]s=([^&]+)/)[1])\n    const labelOnly = url.includes(\"mode=labelonly\")\n    if (!sessionId) return\n    const { state } = await joinSession(sessionId)\n    if (!state) return\n    window.history.replaceState(\n      {},\n      window.document.title,\n      `/?s=${encodeURIComponent(sessionId)}${\n        labelOnly ? \"&mode=labelonly\" : \"\"\n      }`\n    )\n    setFile({\n      url,\n      sessionId,\n      mode: \"server\",\n      id: sessionId,\n      content: state,\n    })\n  })\n\n  useEffect(() => {\n    if (!file) return\n    if (file.mode === \"server\") return\n    window.history.replaceState({}, window.document.title, `/`)\n  }, [file])\n\n  useEffect(() => {\n    if (window.location.search.match(/[?&]s=([a-zA-Z0-9]+)/)) {\n      openUrl(window.location.href)\n    }\n  }, [openUrl])\n\n  const makeSession = useEventCallback(async () => {\n    const newFile = await convertToCollaborativeFile(file)\n    setFile(newFile)\n    window.history.replaceState(\n      {},\n      window.document.title,\n      `/?s=${encodeURIComponent(newFile.sessionId)}`\n    )\n  })\n\n  return useMemo(\n    () => ({\n      file,\n      setFile,\n      openFile,\n      openUrl,\n      makeSession,\n      saveFile,\n      recentItems,\n      changeRecentItems,\n    }),\n    [\n      file,\n      setFile,\n      openFile,\n      saveFile,\n      makeSession,\n      recentItems,\n      changeRecentItems,\n      openUrl,\n    ]\n  )\n}\n","// @flow\nimport { useEffect } from \"react\"\nimport { useLocalStorage } from \"react-use\"\n\nexport default (file, changeFile) => {\n  let [recentItems, changeRecentItems] = useLocalStorage(\"recentItems\", [])\n\n  if (!recentItems) recentItems = []\n  useEffect(() => {\n    if (!file || file.fileName === \"unnamed\") return\n    if (recentItems.map((item) => item.id).includes(file.id)) {\n      changeRecentItems(\n        recentItems.map((ri) => (ri.id === file.id ? file : ri))\n      )\n    } else {\n      changeRecentItems([file].concat(recentItems).slice(0, 3))\n    }\n    // eslint-disable-next-line\n  }, [file, changeRecentItems])\n  return { recentItems, changeRecentItems }\n}\n","// @flow weak\n\nimport React from \"react\"\nimport { styled } from \"@material-ui/core/styles\"\nimport * as colors from \"@material-ui/core/colors\"\nimport { detect } from \"detect-browser\"\nimport Button from \"@material-ui/core/Button\"\nimport LaunchIcon from \"@material-ui/icons/Launch\"\nimport Sentry from \"../../utils/sentry.js\"\n\nconst Container = styled(\"div\")({\n  width: \"100vw\",\n  minHeight: \"100vh\",\n  backgroundColor: colors.grey[900],\n  padding: 32,\n  \"& .title\": {\n    color: colors.grey[200],\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  \"& .subtitle\": {\n    color: colors.grey[300],\n    fontSize: 18,\n    marginTop: 8,\n  },\n  \"& .info\": {\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    padding: 32,\n    \"& textarea\": {\n      width: \"calc(100% - 64px)\",\n      boxSizing: \"border-box\",\n      minHeight: 300,\n      fontSize: 12,\n    },\n  },\n})\nconst Buttons = styled(\"div\")({\n  padding: 8,\n})\nconst StyledButton = styled(Button)({\n  color: \"#fff\",\n  borderColor: \"rgba(255,255,255,0.5)\",\n  margin: 8,\n})\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true,\n      errorDetails: JSON.stringify(detect()) + \"\\n\\n\" + error.stack,\n    }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    Sentry.withScope((scope) => {\n      scope.setExtras(errorInfo)\n      const eventId = Sentry.captureException(error)\n      this.setState({ eventId })\n    })\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return (\n        <Container>\n          <div className=\"title\">An error has occurred</div>\n          <div className=\"subtitle\">All the details are below:</div>\n          <div className=\"info\">\n            <textarea>{this.state.errorDetails}</textarea>\n          </div>\n          <Buttons>\n            <StyledButton\n              variant=\"outlined\"\n              target=\"_blank\"\n              href=\"https://github.com/Universal/universal-data-tool/issues\"\n            >\n              <LaunchIcon style={{ color: \"#fff\", marginRight: 8 }} /> View\n              Issues on Github\n            </StyledButton>\n            {/* <StyledButton\n              variant=\"outlined\"\n              onClick={this.props.revertLastChange}\n            >\n              Revert Last File Change\n            </StyledButton> */}\n            <StyledButton\n              variant=\"outlined\"\n              onClick={() => window.location.reload()}\n            >\n              Reload (unsaved progress will be lost)\n            </StyledButton>\n          </Buttons>\n        </Container>\n      )\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","// @flow weak\n\nimport { useEffect } from \"react\"\n\nfunction preventNavigation(e) {\n  var confirmationMessage =\n    \"It looks like you have been editing something. \" +\n    \"If you leave before saving, your changes will be lost.\"\n\n  ;(e || window.event).returnValue = confirmationMessage //Gecko + IE\n  return confirmationMessage //Gecko + Webkit, Safari, Chrome etc.\n}\n\nexport default (shouldPreventNavigation = true) => {\n  useEffect(() => {\n    if (!shouldPreventNavigation) return\n    if (window.location.origin.includes(\"localhost\")) return\n    window.addEventListener(\"beforeunload\", preventNavigation)\n    return () => {\n      window.removeEventListener(\"beforeunload\", preventNavigation)\n    }\n  }, [shouldPreventNavigation])\n}\n","// @flow\nimport React, { useState, useCallback } from \"react\"\nimport { HeaderContext } from \"../Header\"\nimport StartingPage from \"../StartingPage\"\nimport DatasetEditor from \"../DatasetEditor\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport useFileHandler from \"../../utils/file-handlers\"\nimport download from \"in-browser-download\"\nimport toUDTCSV from \"../../utils/to-udt-csv.js\"\nimport { setIn } from \"seamless-immutable\"\nimport AppErrorBoundary from \"../AppErrorBoundary\"\nimport useEventCallback from \"use-event-callback\"\nimport usePreventNavigation from \"../../utils/use-prevent-navigation\"\nimport { FileContext } from \"../FileContext\"\nimport usePosthog from \"../../utils/use-posthog\"\nconst randomId = () => Math.random().toString().split(\".\")[1]\n\nexport default () => {\n  const {\n    file,\n    setFile,\n    openFile,\n    openUrl,\n    makeSession,\n    recentItems,\n    changeRecentItems,\n  } = useFileHandler()\n  usePreventNavigation(Boolean(file))\n  const posthog = usePosthog()\n  const [errors] = useErrors()\n\n  const [selectedBrush, setSelectedBrush] = useState(\"complete\")\n  const onCreateTemplate = useEventCallback((template) => {\n    setFile({\n      fileName: \"unnamed\",\n      content: template.dataset,\n      id: randomId(),\n      mode: \"local-storage\",\n    })\n  })\n\n  const openRecentItem = useEventCallback((item) => setFile(item))\n  const onClickHome = useEventCallback(() => setFile(null))\n  const onDownload = useEventCallback((format) => {\n    if (!file) return\n    posthog.capture(\"download_file\", { file_type: format })\n    const outputName = (file.sessionId || file.fileName) + \".udt.\" + format\n    if (format === \"json\") {\n      download(JSON.stringify(file.content), outputName)\n    } else if (format === \"csv\") {\n      download(toUDTCSV(file.content), outputName)\n    }\n  })\n\n  const inSession = file && file.mode === \"server\"\n  const [sessionBoxOpen, changeSessionBoxOpen] = useState(false)\n\n  const onJoinSession = useCallback(\n    async (sessionName) => {\n      await openUrl(sessionName)\n    },\n    [openUrl]\n  )\n\n  const onLeaveSession = useEventCallback(() =>\n    setFile({\n      ...file,\n      mode: \"local-storage\",\n      fileName: file.fileName || `copy_of_${file.id}`,\n    })\n  )\n\n  const onChangeDataset = useEventCallback((newOHA) => {\n    setFile(setIn(file, [\"content\"], newOHA))\n  })\n\n  return (\n    <>\n      <FileContext.Provider value={{ file, setFile }}>\n        <HeaderContext.Provider\n          value={{\n            title: file\n              ? file.mode === \"local-storage\"\n                ? file.fileName\n                : file.url\n              : \"unnamed\",\n            recentItems,\n            changeRecentItems,\n            onClickTemplate: onCreateTemplate,\n            onClickHome,\n            onOpenFile: openFile,\n            onOpenRecentItem: openRecentItem,\n            inSession,\n            sessionBoxOpen,\n            changeSessionBoxOpen,\n            onJoinSession,\n            onLeaveSession,\n            onCreateSession: makeSession,\n            fileOpen: Boolean(file),\n            onDownload,\n            onChangeSelectedBrush: setSelectedBrush,\n            selectedBrush,\n            isWelcomePage: !file,\n          }}\n        >\n          {!file ? (\n            <StartingPage\n              onFileDrop={openFile}\n              onOpenTemplate={onCreateTemplate}\n              recentItems={recentItems}\n              onOpenRecentItem={openRecentItem}\n              onClickOpenSession={() => changeSessionBoxOpen(true)}\n            />\n          ) : (\n            <AppErrorBoundary>\n              <DatasetEditor\n                file={file}\n                key={file.id}\n                {...file}\n                selectedBrush={selectedBrush}\n                inSession={inSession}\n                dataset={file.content}\n                onChangeDataset={onChangeDataset}\n                onChangeFile={setFile}\n                authConfig\n                recentItems={recentItems}\n              />\n            </AppErrorBoundary>\n          )}\n        </HeaderContext.Provider>\n      </FileContext.Provider>\n      <ErrorToasts errors={errors} />\n    </>\n  )\n}\n","// @flow\nimport React, { useState, useEffect } from \"react\"\nimport { HeaderContext } from \"../Header\"\nimport StartingPage from \"../StartingPage\"\nimport DatasetEditor from \"../DatasetEditor\"\nimport ErrorToasts from \"../ErrorToasts\"\nimport useErrors from \"../../utils/use-errors.js\"\nimport useElectron from \"../../utils/use-electron.js\"\nimport templates from \"../StartingPage/templates\"\nimport useEventCallback from \"use-event-callback\"\nimport { setIn } from \"seamless-immutable\"\nimport toUDTCSV from \"../../utils/to-udt-csv.js\"\nimport useFileHandler from \"../../utils/file-handlers\"\n\nconst randomId = () => Math.random().toString().split(\".\")[1]\n\nexport default () => {\n  const {\n    file,\n    setFile,\n    openFile,\n    openUrl,\n    makeSession,\n    saveFile,\n    recentItems,\n  } = useFileHandler()\n\n  const [selectedBrush, setSelectedBrush] = useState(\"complete\")\n  const [errors] = useErrors()\n\n  const { remote, ipcRenderer } = useElectron()\n\n  const onCreateTemplate = useEventCallback((template) => {\n    setFile({\n      fileName: \"unnamed\",\n      content: template.dataset,\n      id: randomId(),\n      mode: \"filesystem\",\n    })\n  })\n\n  const openRecentItem = useEventCallback((item) => setFile(item))\n  const onClickHome = useEventCallback(() => setFile(null))\n\n  useEffect(() => {\n    const onOpenWelcomePage = () => setFile(null)\n    const onNewFile = (arg0, { templateName } = {}) => {\n      onCreateTemplate(\n        templates.find((t) => t.name === templateName) || templates[0]\n      )\n    }\n    const saveFileAs = () => saveFile({ saveAs: true })\n    const exportToCSV = async () => {\n      if (!file) return\n      let { cancelled, filePath } = await remote.dialog.showSaveDialog({\n        filters: [{ name: \".udt.csv\", extensions: [\"udt.csv\"] }],\n      })\n      if (cancelled) return\n      filePath =\n        !filePath || filePath.endsWith(\".csv\")\n          ? filePath\n          : `${filePath}.udt.csv`\n\n      await remote\n        .require(\"fs\")\n        .promises.writeFile(filePath, toUDTCSV(file.content))\n    }\n    const onOpenFileFromToolbar = (e, file) => openFile(file)\n\n    ipcRenderer.on(\"open-welcome-page\", onOpenWelcomePage)\n    ipcRenderer.on(\"new-file\", onNewFile)\n    ipcRenderer.on(\"open-file\", onOpenFileFromToolbar)\n    ipcRenderer.on(\"save-file\", saveFile)\n    ipcRenderer.on(\"save-file-as\", saveFileAs)\n    ipcRenderer.on(\"export-to-csv\", exportToCSV)\n    return () => {\n      ipcRenderer.removeListener(\"open-welcome-page\", onOpenWelcomePage)\n      ipcRenderer.removeListener(\"new-file\", onNewFile)\n      ipcRenderer.removeListener(\"open-file\", onOpenFileFromToolbar)\n      ipcRenderer.removeListener(\"save-file\", saveFile)\n      ipcRenderer.removeListener(\"save-file-as\", saveFileAs)\n      ipcRenderer.removeListener(\"export-to-csv\", exportToCSV)\n    }\n  }, [file, setFile, ipcRenderer, openFile, onCreateTemplate, remote, saveFile])\n\n  const inSession = file && file.mode === \"server\"\n  const [sessionBoxOpen, changeSessionBoxOpen] = useState(false)\n\n  const onJoinSession = useEventCallback(async (sessionName) => {\n    await openUrl(sessionName)\n  })\n\n  const onLeaveSession = useEventCallback(() =>\n    setFile({\n      ...file,\n      mode: \"local-storage\",\n      fileName: file.fileName || `copy_of_${file.id}`,\n    })\n  )\n\n  const collaborateError = (file?.content?.samples || []).some((sample) =>\n    [sample.imageUrl, sample.videoUrl, sample.pdfUrl]\n      .filter(Boolean)\n      .map((a) => a.includes(\"file://\"))\n      .some(Boolean)\n  )\n    ? \"Some URLs (links) in this file are connected to files on your computer. Use the Samples > Transform > Transform Files to Web URLs to upload these files, then collaboration will be available.\"\n    : null\n\n  return (\n    <>\n      <HeaderContext.Provider\n        value={{\n          recentItems,\n          onClickTemplate: onCreateTemplate,\n          onClickHome,\n          title: file\n            ? file.mode !== \"server\"\n              ? file.fileName\n              : file.url\n            : \"unnamed\",\n          fileOpen: Boolean(file),\n          onOpenRecentItem: openRecentItem,\n          isDesktop: true,\n          onOpenFile: openFile,\n          selectedBrush,\n          onChangeSelectedBrush: setSelectedBrush,\n\n          // collaboration session\n          inSession,\n          sessionBoxOpen,\n          changeSessionBoxOpen,\n          collaborateError,\n          onJoinSession,\n          onLeaveSession,\n          onCreateSession: makeSession,\n          isWelcomePage: !file,\n        }}\n      >\n        {!file ? (\n          <StartingPage\n            showDownloadLink={false}\n            onFileDrop={openFile}\n            onOpenTemplate={onCreateTemplate}\n            recentItems={recentItems}\n            onOpenRecentItem={openRecentItem}\n          />\n        ) : (\n          <DatasetEditor\n            key={file.id}\n            {...file}\n            inSession={inSession}\n            selectedBrush={selectedBrush}\n            dataset={file.content}\n            onChangeFileName={(newName) => {\n              setFile(setIn(file, [\"fileName\"], newName))\n            }}\n            onChangeDataset={(newOHA) => {\n              setFile(setIn(file, [\"content\"], newOHA))\n            }}\n          />\n        )}\n      </HeaderContext.Provider>\n      <ErrorToasts errors={errors} />\n    </>\n  )\n}\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\n\nconst useStyles = makeStyles((theme) => ({\n  wrapper: {\n    width: \"100vw\",\n    height: \"100vh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  root: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}))\n\nexport default function Loading() {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.root}>\n        <CircularProgress />\n      </div>\n    </div>\n  )\n}\n","import React, { Suspense } from \"react\"\nimport Theme from \"./components/Theme\"\nimport LocalStorageApp from \"./components/LocalStorageApp\"\nimport DesktopApp from \"./components/DesktopApp\"\nimport { ToastProvider } from \"./components/Toasts\"\nimport useElectron from \"./utils/use-electron.js\"\nimport { AppConfigProvider } from \"./components/AppConfig\"\nimport { AuthProvider } from \"./utils/auth-handlers/use-auth.js\"\nimport { LabelHelpProvider } from \"./components/LabelHelpView\"\nimport { HotkeyStorageProvider } from \"./components/HotkeyStorage\"\nimport \"./App.css\"\n\nimport Loading from \"./components/Loading\"\n\n// Importing Internalization file\nimport \"./i18n\"\n\nexport const App = () => {\n  const electron = useElectron()\n  return (\n    <Suspense fallback={Loading}>\n      <Theme>\n        <AppConfigProvider>\n          <AuthProvider>\n            <LabelHelpProvider>\n              <ToastProvider>\n                <HotkeyStorageProvider>\n                  {Boolean(electron) ? <DesktopApp /> : <LocalStorageApp />}\n                </HotkeyStorageProvider>\n              </ToastProvider>\n            </LabelHelpProvider>\n          </AuthProvider>\n        </AppConfigProvider>\n      </Theme>\n    </Suspense>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}